@org=$4000

; Loading Screen
;
; #UDGTABLE
; { =h Everyone's a Wally Loading Screen. }
; { #SCR$02(loading) }
; UDGTABLE#
@label=Loading
b$4000 DEFB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ; {Pixels
 $4020 DEFB $C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$F0,$00,$00,$BF,$FC,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03 ;
 $4040 DEFB $C0,$00,$00,$01,$F0,$FC,$00,$00,$00,$00,$00,$00,$00,$00,$11,$F1,$03,$00,$01,$D3,$77,$80,$00,$C2,$01,$98,$0C,$00,$00,$00,$00,$03 ;
 $4060 DEFB $C0,$00,$02,$00,$80,$00,$06,$96,$24,$99,$24,$00,$44,$42,$40,$C1,$38,$40,$E0,$07,$35,$58,$03,$A0,$FD,$F7,$FA,$80,$00,$00,$00,$03 ;
 $4080 DEFB $C0,$04,$22,$00,$09,$00,$00,$D1,$5A,$8B,$25,$41,$3F,$E0,$3E,$00,$80,$00,$00,$00,$00,$80,$25,$88,$22,$02,$08,$10,$00,$00,$00,$03 ;
 $40A0 DEFB $C0,$82,$00,$02,$04,$78,$22,$04,$40,$00,$04,$1E,$1C,$80,$6A,$80,$00,$0C,$90,$00,$00,$41,$82,$21,$C2,$3A,$11,$04,$00,$00,$00,$03 ;
 $40C0 DEFB $C0,$40,$02,$11,$10,$00,$30,$88,$91,$02,$15,$88,$50,$C2,$00,$37,$E4,$57,$00,$02,$44,$00,$85,$00,$1E,$00,$2D,$10,$0E,$00,$00,$03 ;
 $40E0 DEFB $C0,$40,$00,$84,$08,$00,$49,$48,$55,$31,$80,$2C,$90,$3C,$01,$C0,$00,$03,$00,$07,$80,$00,$52,$89,$22,$17,$8E,$44,$C6,$06,$60,$03 ;
 $4100 DEFB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ;
 $4120 DEFB $C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$C8,$00,$02,$FF,$1F,$80,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03 ;
 $4140 DEFB $C0,$00,$00,$06,$5F,$87,$80,$00,$00,$00,$00,$00,$00,$00,$E0,$0D,$06,$00,$00,$AD,$DD,$C0,$00,$00,$02,$48,$02,$00,$00,$00,$00,$03 ;
 $4160 DEFB $C0,$00,$04,$00,$00,$00,$0A,$95,$24,$91,$28,$00,$44,$A8,$81,$38,$88,$40,$90,$03,$2D,$B8,$01,$7F,$FF,$B7,$F7,$00,$00,$00,$00,$03 ;
 $4180 DEFB $C0,$04,$40,$00,$01,$38,$18,$CA,$00,$55,$48,$80,$D1,$14,$1F,$09,$00,$00,$00,$00,$24,$0C,$13,$88,$21,$22,$04,$50,$00,$00,$00,$03 ;
 $41A0 DEFB $C0,$82,$20,$02,$08,$00,$12,$20,$00,$00,$02,$20,$A2,$40,$6C,$80,$00,$11,$08,$00,$00,$22,$04,$22,$64,$16,$09,$08,$00,$00,$00,$03 ;
 $41C0 DEFB $C0,$44,$42,$10,$08,$00,$59,$08,$91,$04,$35,$01,$EF,$04,$22,$80,$04,$29,$C0,$00,$04,$00,$89,$10,$62,$00,$34,$89,$CF,$00,$00,$03 ;
 $41E0 DEFB $C0,$20,$00,$90,$08,$10,$89,$24,$49,$28,$40,$12,$50,$42,$01,$67,$80,$00,$80,$05,$40,$00,$A4,$84,$01,$9E,$0C,$44,$06,$1C,$1C,$03 ;
 $4200 DEFB $C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03 ;
 $4220 DEFB $C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$07,$FC,$00,$0F,$D0,$6D,$C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03 ;
 $4240 DEFB $C0,$00,$00,$08,$08,$00,$C0,$00,$00,$80,$00,$00,$00,$03,$18,$01,$0C,$20,$00,$B7,$BF,$40,$01,$09,$19,$26,$01,$00,$00,$00,$00,$03 ;
 $4260 DEFB $C0,$00,$04,$04,$00,$02,$09,$53,$26,$92,$2A,$00,$DA,$01,$2A,$14,$89,$42,$80,$00,$A0,$34,$01,$7F,$FB,$E7,$FE,$00,$00,$00,$00,$03 ;
 $4280 DEFB $C0,$08,$40,$10,$02,$42,$20,$A1,$08,$12,$55,$20,$22,$98,$CF,$C2,$00,$00,$00,$00,$00,$32,$13,$88,$41,$22,$04,$50,$00,$00,$00,$03 ;
 $42A0 DEFB $C0,$80,$20,$04,$10,$00,$0C,$20,$04,$00,$02,$29,$81,$18,$21,$00,$80,$26,$24,$20,$00,$0C,$48,$42,$34,$09,$09,$08,$00,$00,$00,$03 ;
 $42C0 DEFB $C0,$44,$40,$08,$08,$03,$B1,$0A,$94,$0C,$57,$0A,$80,$00,$88,$F0,$02,$36,$00,$00,$08,$00,$49,$10,$41,$02,$76,$49,$27,$00,$00,$03 ;
 $42E0 DEFB $C0,$20,$00,$10,$10,$0E,$11,$22,$22,$04,$19,$93,$70,$82,$01,$7A,$40,$00,$60,$05,$40,$00,$A4,$44,$04,$6E,$18,$84,$00,$18,$92,$03 ;
 $4300 DEFB $C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03 ;
 $4320 DEFB $C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$04,$7C,$00,$3B,$81,$FD,$70,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03 ;
 $4340 DEFB $C0,$00,$00,$10,$00,$00,$70,$00,$88,$88,$00,$00,$00,$7C,$07,$81,$10,$96,$00,$DB,$FF,$60,$02,$12,$24,$A2,$21,$00,$00,$00,$00,$03 ;
 $4360 DEFB $C0,$00,$08,$00,$00,$01,$0D,$4A,$94,$12,$54,$01,$60,$00,$44,$22,$49,$C3,$80,$00,$2A,$5A,$82,$FF,$C8,$10,$FF,$80,$00,$00,$00,$03 ;
 $4380 DEFB $C0,$08,$80,$01,$02,$8E,$3C,$C0,$01,$24,$92,$88,$2A,$50,$4F,$E4,$00,$07,$00,$00,$00,$01,$13,$08,$5F,$3E,$02,$08,$00,$00,$00,$03 ;
 $43A0 DEFB $C0,$40,$40,$04,$20,$00,$02,$20,$00,$00,$01,$2C,$F1,$04,$21,$04,$00,$20,$13,$C0,$00,$70,$48,$44,$34,$08,$88,$88,$00,$00,$00,$03 ;
 $43C0 DEFB $C0,$80,$01,$08,$08,$01,$51,$10,$9C,$02,$66,$05,$63,$80,$20,$E0,$01,$28,$00,$00,$08,$00,$49,$10,$80,$C0,$6A,$04,$AE,$70,$00,$03 ;
 $43E0 DEFB $C0,$10,$00,$10,$12,$50,$12,$21,$9C,$04,$26,$0A,$0F,$02,$02,$41,$20,$00,$10,$05,$78,$01,$24,$42,$03,$04,$35,$48,$00,$1B,$2B,$03 ;
 $4400 DEFB $C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03 ;
*$4420 DEFB $C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$07,$F4,$00,$40,$1D,$25,$6C,$00,$00,$00,$00,$0E,$00,$00,$00,$00,$00,$03 ;
 $4440 DEFB $C0,$00,$00,$60,$00,$A0,$38,$0C,$88,$08,$00,$00,$07,$83,$00,$79,$1D,$09,$80,$D3,$D5,$A0,$02,$22,$4E,$00,$10,$80,$00,$00,$00,$03 ;
 $4460 DEFB $C0,$00,$18,$40,$01,$81,$0D,$4A,$94,$92,$64,$01,$00,$00,$02,$43,$25,$C3,$80,$00,$00,$1F,$1E,$E7,$90,$08,$00,$40,$00,$00,$00,$03 ;
 $4480 DEFB $C0,$10,$80,$01,$02,$3A,$48,$42,$20,$01,$A5,$00,$2A,$60,$FC,$58,$00,$08,$80,$00,$00,$61,$12,$01,$72,$24,$02,$08,$00,$00,$00,$03 ;
 $44A0 DEFB $C0,$40,$40,$04,$20,$00,$82,$12,$00,$00,$01,$23,$82,$02,$0D,$00,$00,$40,$10,$00,$04,$40,$88,$84,$44,$08,$48,$08,$00,$00,$00,$03 ;
 $44C0 DEFB $C0,$88,$81,$08,$04,$00,$E2,$24,$40,$01,$C6,$0E,$3C,$01,$01,$D0,$01,$02,$00,$00,$10,$00,$51,$50,$80,$3F,$CA,$04,$77,$9C,$00,$03 ;
 $44E0 DEFB $C0,$18,$41,$08,$20,$09,$24,$40,$40,$03,$E9,$0B,$00,$02,$04,$51,$18,$00,$1C,$0B,$7C,$01,$2A,$21,$00,$FC,$36,$48,$01,$98,$44,$83 ;
 $4500 DEFB $C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03 ;
 $4520 DEFB $C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$F8,$00,$40,$54,$DF,$FC,$00,$00,$00,$00,$31,$80,$00,$00,$00,$00,$03 ;
 $4540 DEFB $C0,$00,$00,$80,$00,$08,$19,$2C,$4A,$89,$00,$00,$18,$10,$E0,$06,$27,$3E,$00,$37,$FD,$B0,$04,$22,$4E,$00,$14,$80,$00,$00,$00,$03 ;
 $4560 DEFB $C0,$00,$60,$01,$00,$08,$12,$AA,$92,$A4,$A8,$C1,$00,$00,$01,$24,$A7,$CC,$80,$00,$08,$90,$3F,$C1,$10,$08,$02,$40,$00,$00,$00,$03 ;
 $4580 DEFB $C0,$30,$80,$81,$02,$44,$68,$40,$84,$00,$4E,$00,$13,$02,$FB,$22,$00,$00,$40,$00,$00,$11,$24,$09,$3A,$34,$00,$04,$00,$00,$00,$03 ;
 $45A0 DEFB $C0,$20,$80,$08,$60,$01,$04,$10,$1C,$01,$20,$9C,$48,$01,$49,$00,$00,$80,$08,$00,$04,$40,$8A,$84,$42,$10,$70,$08,$00,$00,$00,$03 ;
 $45C0 DEFB $C0,$88,$80,$04,$04,$00,$12,$51,$4C,$00,$03,$0C,$20,$00,$01,$80,$00,$AC,$20,$00,$E0,$00,$30,$48,$80,$08,$CB,$54,$57,$06,$00,$03 ;
 $45E0 DEFB $C0,$24,$41,$08,$20,$09,$20,$40,$10,$00,$A8,$F2,$00,$04,$08,$52,$24,$00,$2E,$0B,$7C,$01,$29,$81,$00,$18,$2A,$88,$0E,$5C,$44,$83 ;
 $4600 DEFB $C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03 ;
 $4620 DEFB $C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$0C,$04,$00,$80,$17,$6D,$77,$00,$00,$00,$18,$81,$40,$00,$00,$00,$00,$03 ;
 $4640 DEFB $C0,$00,$01,$00,$00,$00,$0D,$26,$48,$89,$50,$00,$22,$52,$1C,$01,$34,$C7,$00,$1E,$BA,$F0,$04,$11,$24,$00,$14,$40,$00,$00,$00,$03 ;
 $4660 DEFB $C0,$01,$80,$82,$08,$62,$A1,$A9,$4A,$A4,$D5,$01,$00,$03,$40,$08,$6C,$F3,$40,$00,$00,$1F,$1D,$80,$24,$04,$21,$20,$00,$00,$00,$03 ;
 $4680 DEFB $C0,$41,$00,$01,$05,$E4,$70,$40,$00,$44,$34,$00,$78,$44,$F4,$40,$00,$00,$40,$00,$00,$12,$20,$11,$3C,$1C,$02,$04,$00,$00,$00,$03 ;
 $46A0 DEFB $C0,$20,$80,$08,$90,$01,$20,$90,$22,$00,$C2,$80,$48,$11,$08,$80,$03,$40,$04,$00,$43,$80,$82,$84,$41,$E0,$38,$10,$00,$00,$00,$03 ;
 $46C0 DEFB $C0,$48,$80,$84,$04,$00,$20,$50,$2A,$51,$C0,$80,$44,$01,$82,$40,$00,$70,$C0,$07,$00,$00,$11,$48,$98,$09,$8B,$14,$AF,$83,$00,$03 ;
 $46E0 DEFB $C0,$20,$21,$00,$20,$05,$20,$40,$0C,$00,$E6,$0C,$00,$1C,$30,$A4,$02,$00,$5A,$17,$7F,$01,$29,$60,$C0,$38,$E5,$88,$30,$2C,$82,$83 ;
 $4700 DEFB $C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03 ;
 $4720 DEFB $C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$1E,$02,$00,$80,$07,$DE,$BB,$00,$00,$3C,$E6,$80,$30,$00,$00,$00,$00,$03 ;
 $4740 DEFB $C0,$00,$02,$00,$30,$00,$04,$96,$44,$11,$10,$00,$24,$12,$23,$01,$28,$41,$80,$02,$EF,$78,$02,$F3,$18,$4D,$68,$40,$00,$00,$00,$03 ;
 $4760 DEFB $C0,$02,$01,$00,$00,$80,$21,$64,$4A,$C9,$92,$31,$00,$3C,$38,$10,$20,$40,$30,$00,$0A,$60,$C5,$80,$22,$02,$10,$A0,$00,$00,$00,$03 ;
 $4780 DEFB $C0,$82,$01,$02,$04,$A4,$22,$40,$00,$00,$0C,$01,$80,$80,$E9,$40,$00,$00,$90,$00,$00,$20,$41,$11,$01,$E1,$E0,$04,$00,$00,$00,$03 ;
 $47A0 DEFB $C0,$44,$80,$10,$90,$00,$04,$88,$49,$01,$2A,$84,$44,$21,$26,$48,$1C,$7C,$00,$00,$02,$00,$85,$08,$20,$00,$29,$10,$0C,$00,$00,$03 ;
 $47C0 DEFB $C0,$48,$40,$84,$04,$00,$28,$4A,$59,$22,$10,$40,$88,$06,$02,$00,$00,$0F,$00,$06,$00,$00,$52,$89,$24,$11,$8A,$54,$A7,$83,$00,$03 ;
 $47E0 DEFB $C0,$20,$21,$01,$20,$04,$00,$8C,$07,$00,$41,$F1,$00,$62,$60,$A0,$0D,$80,$B2,$2B,$77,$82,$28,$98,$B8,$E8,$E5,$10,$43,$EC,$01,$83 ;
 $4800 DEFB $C0,$40,$20,$81,$30,$04,$41,$09,$35,$C1,$80,$81,$00,$EE,$71,$00,$30,$41,$6A,$5B,$57,$82,$08,$64,$81,$A8,$CD,$10,$98,$2D,$01,$83 ;
 $4820 DEFB $C0,$80,$04,$02,$40,$00,$44,$FF,$BF,$BF,$F6,$7E,$02,$92,$21,$FF,$FF,$9F,$D2,$67,$FD,$F3,$B1,$2A,$62,$32,$04,$60,$00,$46,$88,$03 ;
 $4840 DEFB $C0,$04,$10,$00,$00,$00,$00,$67,$77,$DF,$FD,$FE,$04,$8C,$70,$00,$FF,$FA,$25,$01,$F0,$EF,$B8,$00,$81,$E3,$00,$88,$48,$02,$F0,$03 ;
 $4860 DEFB $C0,$00,$10,$04,$40,$00,$10,$E0,$BA,$5F,$FD,$40,$22,$40,$20,$04,$1D,$9E,$02,$8D,$7E,$E3,$FC,$40,$28,$3B,$20,$41,$4D,$70,$80,$03 ;
 $4880 DEFB $C0,$00,$08,$08,$00,$00,$27,$83,$F7,$80,$07,$E1,$00,$00,$02,$41,$99,$D4,$DD,$80,$FB,$FF,$DE,$06,$18,$C0,$00,$23,$0A,$A0,$00,$03 ;
 $48A0 DEFB $C0,$00,$00,$FF,$87,$FC,$FA,$3F,$2F,$7E,$38,$00,$D7,$E7,$FF,$FD,$44,$2F,$F4,$80,$3F,$FF,$CD,$A7,$83,$9F,$F5,$38,$00,$00,$00,$03 ;
 $48C0 DEFB $C0,$00,$00,$7F,$83,$8F,$9C,$02,$B8,$9D,$00,$00,$18,$78,$00,$00,$00,$09,$98,$06,$7E,$7F,$BC,$01,$8F,$FB,$E7,$00,$00,$00,$00,$03 ;
 $48E0 DEFB $C0,$00,$00,$1D,$FC,$3F,$28,$07,$05,$4E,$40,$00,$00,$20,$00,$00,$00,$01,$03,$FF,$F3,$F8,$00,$1B,$C1,$F6,$06,$80,$00,$00,$00,$03 ;
 $4900 DEFB $C0,$40,$00,$81,$08,$04,$42,$16,$FF,$75,$03,$12,$01,$FE,$F1,$00,$C1,$A2,$E9,$5D,$5B,$F2,$09,$14,$81,$D8,$CE,$20,$80,$1D,$01,$83 ;
 $4920 DEFB $C0,$80,$08,$01,$50,$00,$29,$FD,$BF,$80,$01,$7E,$02,$53,$A3,$BF,$FF,$9F,$DF,$03,$F9,$F3,$1A,$29,$72,$31,$04,$00,$00,$27,$CC,$03 ;
 $4940 DEFB $C0,$02,$10,$00,$00,$00,$00,$7F,$F7,$C0,$01,$FE,$04,$4D,$02,$10,$06,$71,$9D,$00,$FB,$FF,$B8,$28,$82,$30,$80,$80,$08,$1D,$00,$03 ;
 $4960 DEFB $C0,$00,$10,$04,$00,$00,$0F,$F0,$FB,$C0,$01,$C0,$22,$00,$02,$04,$19,$A8,$02,$86,$7E,$FC,$ED,$80,$24,$79,$C0,$20,$0A,$B0,$80,$03 ;
 $4980 DEFB $C0,$00,$08,$04,$00,$1C,$27,$81,$F5,$00,$01,$E1,$00,$00,$00,$83,$92,$F5,$67,$63,$7B,$FF,$FE,$08,$08,$60,$00,$20,$E5,$40,$00,$03 ;
 $49A0 DEFB $C0,$00,$00,$22,$FF,$FF,$FA,$1F,$2F,$DD,$F8,$00,$52,$3F,$FF,$FD,$48,$2B,$29,$00,$3F,$FF,$CD,$B1,$33,$9F,$F2,$C0,$00,$00,$00,$03 ;
 $49C0 DEFB $C0,$00,$00,$7F,$C1,$C0,$94,$03,$0E,$8E,$80,$00,$0C,$70,$00,$00,$00,$08,$14,$06,$7E,$7F,$FA,$03,$0F,$F7,$85,$00,$00,$00,$00,$03 ;
 $49E0 DEFB $C0,$00,$00,$1E,$FE,$1F,$28,$07,$3F,$D1,$40,$00,$00,$20,$00,$00,$00,$01,$7F,$FF,$F3,$F8,$00,$17,$C2,$F6,$04,$80,$00,$00,$00,$03 ;
 $4A00 DEFB $C0,$40,$40,$40,$84,$02,$42,$1A,$FD,$D5,$61,$22,$01,$DE,$CA,$07,$00,$22,$A9,$5D,$B3,$C9,$09,$08,$41,$D4,$D2,$20,$A0,$0A,$01,$83 ;
 $4A20 DEFB $C0,$80,$08,$00,$E0,$00,$10,$BE,$DF,$FF,$FB,$FE,$02,$54,$03,$7F,$FF,$3F,$88,$E1,$F3,$E6,$1C,$19,$5C,$34,$02,$00,$00,$63,$94,$03 ;
 $4A40 DEFB $C0,$01,$D0,$00,$00,$00,$00,$3F,$94,$DF,$FD,$FE,$08,$46,$04,$10,$04,$EC,$01,$C0,$BF,$9F,$78,$30,$84,$30,$40,$80,$88,$E1,$00,$03 ;
 $4A60 DEFB $C0,$00,$08,$04,$10,$20,$07,$F0,$FB,$BF,$FD,$C0,$42,$00,$02,$08,$33,$2B,$F0,$0A,$BF,$7F,$78,$C0,$24,$CC,$C0,$20,$8D,$50,$80,$03 ;
 $4A80 DEFB $C0,$00,$08,$02,$00,$22,$C1,$10,$3E,$00,$81,$62,$21,$00,$50,$83,$B2,$D7,$6D,$5C,$3D,$FF,$BF,$08,$04,$20,$3F,$20,$1B,$80,$00,$03 ;
 $4AA0 DEFB $C0,$00,$00,$7F,$3F,$FF,$FA,$0F,$FF,$E3,$F0,$00,$3F,$FF,$4F,$FE,$88,$52,$D6,$29,$BF,$FF,$9B,$9E,$33,$BB,$FE,$C0,$00,$00,$00,$03 ;
 $4AC0 DEFB $C0,$00,$00,$7F,$C0,$F0,$54,$02,$1F,$9F,$80,$00,$07,$E0,$00,$00,$00,$04,$14,$06,$FF,$FF,$F1,$03,$0F,$F5,$05,$00,$00,$00,$00,$03 ;
 $4AE0 DEFB $C0,$00,$00,$1F,$FC,$1F,$38,$07,$C7,$D1,$40,$00,$00,$A0,$00,$00,$00,$01,$7F,$7F,$E7,$F0,$00,$3E,$41,$3F,$00,$80,$00,$00,$00,$03 ;
 $4B00 DEFB $C0,$40,$00,$20,$84,$01,$42,$3F,$D4,$3E,$70,$C4,$01,$9E,$48,$18,$60,$0E,$B9,$5E,$B3,$CC,$09,$48,$61,$1F,$CA,$A0,$A0,$0F,$02,$03 ;
 $4B20 DEFB $C0,$82,$08,$00,$00,$00,$0B,$CF,$59,$80,$03,$FE,$04,$34,$27,$BF,$FF,$3F,$1E,$11,$FF,$7C,$FC,$09,$0F,$E2,$02,$00,$00,$A2,$14,$03 ;
 $4B40 DEFB $C0,$00,$20,$00,$00,$00,$00,$3F,$57,$C0,$01,$FE,$08,$44,$04,$20,$85,$E1,$D6,$23,$FF,$5E,$FC,$28,$44,$30,$40,$40,$0B,$41,$00,$03 ;
 $4B60 DEFB $C0,$00,$08,$04,$02,$00,$07,$F0,$FB,$80,$01,$C0,$44,$00,$04,$08,$66,$27,$FC,$31,$5F,$DF,$BC,$20,$23,$8C,$80,$20,$0A,$B1,$80,$03 ;
 $4B80 DEFB $C0,$00,$08,$04,$80,$2B,$61,$08,$1E,$01,$C1,$02,$20,$7A,$00,$03,$E4,$ED,$57,$40,$3E,$FF,$73,$08,$04,$37,$C2,$80,$00,$00,$00,$03 ;
 $4BA0 DEFB $C0,$00,$00,$7F,$1E,$FF,$FE,$07,$FF,$E3,$F0,$00,$33,$E7,$1E,$00,$7C,$4C,$08,$1E,$3F,$FF,$3B,$C9,$63,$FB,$FB,$80,$00,$00,$00,$03 ;
 $4BC0 DEFB $C0,$00,$00,$7B,$E0,$FF,$9C,$01,$1F,$BF,$80,$00,$03,$E0,$00,$00,$00,$06,$14,$07,$FE,$FF,$E1,$00,$1F,$E9,$05,$00,$00,$00,$00,$03 ;
 $4BE0 DEFB $C0,$00,$00,$1F,$FE,$1F,$90,$03,$FF,$D0,$E0,$00,$00,$58,$40,$00,$00,$01,$BF,$7E,$E7,$E0,$00,$2F,$C1,$BB,$00,$80,$00,$00,$00,$03 ;
 $4C00 DEFB $C0,$20,$40,$D0,$86,$01,$01,$3F,$7F,$C0,$7C,$46,$01,$18,$26,$60,$03,$FD,$D9,$BE,$B3,$F4,$09,$88,$91,$1E,$9C,$C0,$60,$04,$80,$03 ;
 $4C20 DEFB $C0,$42,$08,$00,$00,$00,$07,$FE,$5F,$BF,$FB,$FE,$04,$33,$27,$F7,$6E,$7C,$91,$80,$FF,$39,$FC,$01,$33,$C6,$01,$00,$07,$33,$E8,$03 ;
 $4C40 DEFB $C0,$00,$10,$00,$00,$00,$00,$3E,$F7,$DF,$FD,$FE,$08,$40,$08,$21,$0D,$E3,$8C,$1F,$EE,$DE,$FC,$20,$48,$30,$20,$41,$4D,$A0,$80,$03 ;
 $4C60 DEFB $C0,$00,$08,$04,$00,$00,$07,$78,$9B,$BF,$FD,$C0,$44,$00,$18,$10,$4E,$1F,$FE,$C1,$5F,$DF,$FC,$3E,$11,$CF,$00,$21,$4D,$71,$40,$03 ;
 $4C80 DEFB $C0,$00,$04,$0E,$F8,$2D,$D1,$00,$1F,$00,$82,$02,$20,$00,$00,$03,$F0,$E7,$5D,$48,$2E,$FC,$F3,$0C,$06,$10,$01,$70,$00,$00,$00,$03 ;
 $4CA0 DEFB $C0,$00,$00,$7F,$0F,$3F,$FA,$07,$FB,$FF,$D0,$00,$26,$58,$F0,$00,$03,$53,$F0,$18,$3F,$FF,$FB,$B0,$63,$FB,$FA,$80,$00,$00,$00,$03 ;
 $4CC0 DEFB $C0,$00,$00,$3B,$E0,$F0,$98,$01,$3F,$3F,$80,$00,$03,$C0,$00,$00,$00,$02,$14,$17,$FC,$FF,$C1,$00,$1F,$E9,$05,$00,$00,$00,$00,$03 ;
 $4CE0 DEFB $C0,$00,$00,$2F,$FF,$3F,$F0,$03,$9F,$7F,$B0,$00,$00,$24,$28,$00,$00,$01,$BB,$7E,$D7,$E0,$00,$37,$C1,$3F,$00,$00,$00,$00,$00,$03 ;
 $4D00 DEFB $C0,$20,$01,$09,$0A,$01,$01,$7E,$FE,$30,$9E,$7A,$02,$13,$E1,$01,$FF,$95,$D9,$7D,$B2,$E7,$88,$93,$0E,$19,$C1,$40,$30,$36,$40,$03 ;
 $4D20 DEFB $C0,$22,$10,$00,$00,$00,$03,$9F,$AF,$C0,$01,$FE,$04,$39,$83,$8F,$FE,$78,$10,$00,$FE,$3F,$F8,$81,$26,$A0,$01,$00,$1A,$12,$18,$03 ;
 $4D40 DEFB $C0,$00,$10,$00,$80,$00,$00,$3D,$B7,$C0,$01,$BE,$12,$40,$C8,$21,$0B,$C7,$0A,$BD,$F5,$BE,$F4,$20,$48,$18,$20,$40,$0A,$A0,$80,$03 ;
 $4D60 DEFB $C0,$00,$08,$04,$00,$00,$0D,$3C,$E3,$80,$01,$C0,$84,$00,$E0,$20,$CC,$3A,$6D,$10,$AF,$EF,$FC,$41,$F0,$7C,$00,$20,$0A,$B1,$40,$03 ;
 $4D80 DEFB $C0,$00,$04,$1C,$FB,$CD,$98,$82,$4F,$00,$82,$02,$19,$00,$00,$03,$CE,$8D,$73,$48,$BF,$F3,$E7,$22,$07,$18,$06,$88,$00,$00,$00,$03 ;
 $4DA0 DEFB $C0,$00,$00,$7F,$07,$CF,$CA,$03,$C5,$E3,$E0,$00,$33,$F3,$C0,$00,$00,$D0,$10,$0C,$3E,$FF,$F7,$02,$C3,$FB,$FA,$80,$00,$00,$00,$03 ;
 $4DC0 DEFB $C0,$00,$00,$3B,$E0,$7F,$98,$01,$CE,$3F,$80,$00,$01,$C0,$00,$00,$00,$02,$C4,$CF,$FF,$FF,$80,$80,$3F,$DE,$05,$00,$00,$00,$00,$03 ;
 $4DE0 DEFB $C0,$00,$00,$23,$FF,$FF,$F0,$01,$0E,$7F,$F0,$00,$00,$22,$14,$00,$60,$01,$BB,$BE,$CF,$C0,$00,$3F,$C1,$37,$00,$00,$00,$00,$00,$03 ;
 $4E00 DEFB $C0,$40,$82,$04,$31,$82,$82,$7E,$E7,$67,$7E,$7E,$01,$14,$11,$3E,$00,$0D,$DA,$FD,$F2,$E6,$41,$17,$C2,$18,$31,$90,$38,$46,$30,$03 ;
 $4E20 DEFB $C0,$14,$10,$00,$00,$00,$01,$CE,$AF,$DF,$F9,$FE,$04,$1A,$07,$F0,$FC,$F1,$25,$04,$FE,$37,$F8,$00,$84,$40,$01,$C1,$E4,$0E,$68,$03 ;
 $4E40 DEFB $C0,$00,$10,$08,$00,$00,$00,$39,$D7,$DF,$FD,$8C,$12,$43,$10,$42,$17,$C6,$25,$36,$FA,$3E,$FC,$20,$48,$1C,$20,$40,$8D,$60,$80,$03 ;
 $4E60 DEFB $C0,$00,$08,$08,$00,$00,$15,$9C,$9B,$8F,$F3,$C1,$04,$0F,$00,$20,$9C,$5E,$D6,$80,$B7,$F7,$FE,$80,$20,$00,$00,$20,$8D,$71,$40,$03 ;
 $4E80 DEFB $C0,$00,$02,$1F,$19,$EA,$74,$78,$A7,$80,$04,$01,$0D,$90,$00,$1B,$C0,$77,$95,$4B,$3F,$CF,$E7,$11,$03,$0F,$C9,$B4,$00,$00,$00,$03 ;
 $4EA0 DEFB $C0,$00,$00,$7F,$07,$F3,$CA,$03,$C4,$22,$80,$00,$37,$FF,$00,$00,$00,$20,$14,$2C,$3E,$FF,$EF,$10,$C7,$FB,$FA,$80,$00,$00,$00,$03 ;
 $4EC0 DEFB $C0,$00,$00,$1D,$F0,$7F,$98,$01,$E0,$5F,$80,$00,$00,$C0,$00,$00,$00,$01,$2E,$0F,$F9,$FF,$00,$60,$FF,$7E,$05,$00,$00,$00,$00,$03 ;
 $4EE0 DEFB $C0,$00,$00,$3C,$1F,$FC,$40,$00,$87,$3F,$F0,$00,$00,$22,$22,$00,$90,$01,$5D,$BD,$AF,$C0,$00,$37,$41,$B1,$00,$00,$00,$00,$00,$03 ;
 $4F00 DEFB $C0,$40,$84,$02,$40,$56,$44,$FF,$7F,$00,$06,$7E,$01,$94,$08,$C0,$71,$CF,$DB,$8F,$E4,$F3,$41,$26,$C7,$19,$0A,$E0,$0C,$82,$08,$03 ;
 $4F20 DEFB $C0,$04,$10,$00,$00,$00,$00,$E7,$6F,$C0,$01,$FE,$04,$99,$88,$FF,$1F,$F0,$27,$08,$FC,$7F,$F8,$00,$80,$7C,$00,$B6,$08,$05,$88,$03 ;
 $4F40 DEFB $C0,$00,$10,$08,$00,$08,$00,$71,$D7,$C0,$01,$80,$12,$4C,$20,$42,$17,$BC,$D9,$1A,$FB,$3F,$FC,$20,$28,$3E,$20,$40,$0A,$A0,$80,$03 ;
 $4F60 DEFB $C0,$00,$08,$08,$00,$00,$15,$9F,$C7,$7B,$FB,$E1,$02,$00,$00,$41,$9A,$7B,$6E,$88,$57,$FB,$DE,$01,$EF,$00,$00,$2C,$0A,$D1,$80,$03 ;
 $4F80 DEFB $C0,$00,$01,$30,$0B,$E2,$74,$3E,$57,$E1,$48,$01,$07,$FC,$78,$3B,$C4,$5D,$56,$BC,$3E,$3F,$E7,$88,$83,$8F,$F7,$54,$00,$00,$00,$03 ;
 $4FA0 DEFB $C0,$00,$00,$7F,$83,$FF,$9E,$03,$C4,$23,$00,$00,$14,$3C,$00,$00,$00,$16,$14,$86,$3E,$7F,$DE,$05,$87,$FB,$FA,$80,$00,$00,$00,$03 ;
 $4FC0 DEFB $C0,$00,$00,$1D,$F8,$3F,$28,$03,$1E,$4E,$40,$00,$00,$40,$00,$00,$00,$01,$00,$7F,$F9,$FC,$00,$1F,$FE,$FE,$07,$80,$00,$00,$00,$03 ;
 $4FE0 DEFB $C0,$00,$00,$0E,$E0,$33,$A0,$01,$78,$BF,$A0,$00,$00,$2A,$22,$00,$08,$03,$DD,$BD,$AF,$80,$00,$36,$20,$F1,$00,$00,$00,$00,$00,$03 ;
 $5000 DEFB $C0,$00,$00,$01,$5F,$D6,$E0,$01,$F8,$B1,$E0,$0C,$00,$3A,$0A,$00,$C8,$03,$EE,$BD,$5F,$80,$00,$76,$21,$F9,$00,$00,$00,$00,$00,$03 ;
 $5020 DEFB $C0,$00,$00,$1F,$FF,$B2,$80,$07,$FF,$7F,$F0,$00,$FE,$40,$03,$00,$00,$8F,$BE,$FF,$F6,$00,$00,$DC,$C1,$E5,$80,$00,$00,$00,$00,$03 ;
 $5040 DEFB $C0,$00,$01,$FF,$FF,$F6,$00,$04,$4E,$9C,$21,$88,$00,$C0,$18,$00,$E0,$3E,$20,$00,$09,$00,$03,$70,$3B,$FF,$F8,$00,$00,$00,$00,$03 ;
 $5060 DEFB $C0,$00,$19,$FF,$CC,$FC,$10,$58,$0F,$44,$F5,$78,$3E,$FD,$FE,$23,$00,$00,$11,$00,$01,$00,$06,$C6,$62,$62,$5B,$68,$00,$00,$00,$03 ;
 $5080 DEFB $C0,$00,$03,$FC,$1D,$FF,$50,$00,$00,$00,$00,$00,$00,$00,$00,$04,$04,$38,$74,$E9,$9C,$4F,$9D,$3E,$70,$04,$FF,$D3,$FD,$0E,$70,$03 ;
 $50A0 DEFB $C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$3F,$84,$EE,$74,$E9,$CE,$4C,$9D,$00,$70,$04,$01,$D0,$19,$34,$70,$03 ;
 $50C0 DEFB $C0,$07,$FF,$1E,$1C,$7F,$F1,$FE,$0F,$8F,$03,$C0,$F0,$E3,$FF,$9C,$3F,$40,$00,$0C,$00,$01,$EF,$70,$18,$07,$80,$1E,$00,$F8,$F0,$03 ;
 $50E0 DEFB $C0,$03,$00,$03,$E0,$30,$00,$CC,$00,$60,$18,$18,$43,$41,$80,$00,$80,$C0,$00,$41,$80,$00,$6B,$40,$83,$03,$00,$0C,$00,$06,$00,$03 ;
 $5100 DEFB $C0,$00,$00,$01,$DD,$DB,$A0,$01,$F8,$B1,$E0,$0A,$00,$1A,$1A,$00,$28,$03,$AF,$DD,$DF,$00,$00,$66,$20,$FF,$80,$00,$00,$00,$00,$03 ;
 $5120 DEFB $C0,$00,$00,$3F,$FF,$BF,$80,$03,$C3,$3F,$F0,$00,$FD,$A2,$00,$80,$01,$0F,$EC,$FF,$EE,$00,$00,$FC,$E1,$CD,$00,$00,$00,$00,$00,$03 ;
 $5140 DEFB $C0,$00,$01,$FF,$FC,$F6,$00,$0F,$2D,$3C,$62,$04,$00,$30,$06,$01,$80,$01,$00,$00,$05,$00,$03,$63,$FA,$0F,$FC,$00,$00,$00,$00,$03 ;
 $5160 DEFB $C0,$00,$1F,$3F,$9E,$FC,$19,$FC,$30,$F8,$0F,$80,$39,$7D,$EF,$16,$00,$00,$0E,$00,$01,$00,$00,$7A,$26,$22,$89,$30,$00,$00,$00,$03 ;
 $5180 DEFB $C0,$00,$03,$FC,$1F,$FE,$F8,$00,$00,$00,$00,$00,$00,$00,$00,$04,$04,$38,$74,$E9,$9C,$4C,$9D,$36,$73,$E4,$C7,$D3,$01,$0E,$70,$03 ;
 $51A0 DEFB $C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$3F,$04,$EE,$74,$E9,$E7,$4C,$9D,$80,$F0,$02,$03,$D0,$1D,$34,$70,$03 ;
 $51C0 DEFB $C0,$03,$01,$0C,$08,$30,$10,$C3,$03,$06,$0E,$70,$70,$41,$80,$9C,$60,$C0,$00,$0C,$00,$00,$C6,$20,$18,$03,$00,$0C,$00,$30,$60,$03 ;
 $51E0 DEFB $C0,$03,$00,$01,$C0,$30,$00,$C6,$00,$60,$18,$18,$43,$41,$80,$00,$C0,$C0,$00,$41,$80,$00,$31,$80,$83,$03,$01,$0C,$04,$06,$00,$03 ;
 $5200 DEFB $C0,$00,$00,$01,$77,$7E,$C0,$01,$FF,$31,$E0,$39,$00,$60,$18,$00,$48,$03,$77,$7B,$BF,$00,$00,$66,$40,$B9,$00,$00,$00,$00,$00,$03 ;
 $5220 DEFB $C0,$00,$00,$33,$FF,$7F,$80,$01,$04,$23,$F0,$00,$78,$79,$0C,$80,$06,$07,$7C,$FF,$FE,$00,$00,$FC,$A0,$E7,$00,$00,$00,$00,$00,$03 ;
 $5240 DEFB $C0,$00,$01,$9F,$FA,$F6,$00,$10,$2D,$3C,$1C,$04,$07,$CC,$03,$8F,$00,$00,$80,$00,$02,$00,$06,$CF,$FE,$30,$02,$00,$00,$00,$00,$03 ;
 $5260 DEFB $C0,$00,$1B,$9F,$3F,$F8,$1B,$FE,$EF,$00,$00,$00,$3E,$7D,$EE,$8C,$00,$00,$00,$00,$01,$80,$00,$0F,$E1,$FC,$76,$C0,$00,$00,$00,$03 ;
 $5280 DEFB $C0,$00,$03,$CC,$0E,$FF,$F8,$00,$00,$00,$00,$00,$00,$00,$00,$08,$04,$10,$74,$E8,$38,$4F,$9D,$36,$72,$34,$DF,$93,$E1,$26,$70,$03 ;
 $52A0 DEFB $C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$4E,$07,$FF,$F7,$EF,$BF,$7C,$FC,$FF,$E0,$01,$FF,$9F,$FD,$F3,$F0,$03 ;
 $52C0 DEFB $C0,$03,$00,$0E,$18,$30,$00,$C1,$83,$04,$18,$18,$58,$41,$80,$0C,$C0,$40,$00,$16,$00,$00,$C6,$20,$2C,$03,$00,$0C,$00,$30,$40,$03 ;
 $52E0 DEFB $C0,$03,$01,$01,$C0,$30,$10,$C3,$00,$60,$0E,$70,$41,$C1,$80,$80,$E1,$80,$00,$41,$80,$00,$31,$80,$83,$03,$03,$0C,$0C,$06,$00,$03 ;
 $5300 DEFB $C0,$00,$00,$01,$DD,$DB,$C0,$01,$7F,$AD,$A0,$44,$80,$88,$00,$00,$90,$06,$FB,$BB,$FE,$00,$00,$66,$81,$B7,$00,$00,$00,$00,$00,$03 ;
 $5320 DEFB $C0,$00,$00,$67,$FF,$7F,$00,$01,$CC,$20,$E0,$00,$30,$05,$F0,$80,$1E,$07,$FC,$7F,$F6,$00,$00,$F6,$20,$C5,$00,$00,$00,$00,$00,$03 ;
 $5340 DEFB $C0,$00,$01,$9F,$FA,$FE,$00,$2C,$2C,$9C,$28,$02,$0C,$7B,$02,$3C,$00,$00,$80,$08,$02,$00,$06,$DC,$02,$C0,$7E,$00,$00,$00,$00,$03 ;
 $5360 DEFB $C0,$00,$1B,$E6,$3A,$F8,$0B,$FF,$C0,$00,$00,$00,$4F,$FD,$58,$78,$00,$00,$00,$00,$01,$40,$00,$00,$3F,$88,$00,$00,$00,$00,$00,$03 ;
 $5380 DEFB $C0,$00,$03,$3C,$0E,$3F,$98,$00,$00,$00,$00,$00,$00,$00,$00,$08,$04,$92,$74,$E8,$38,$40,$3D,$36,$72,$3C,$D1,$D0,$31,$26,$70,$03 ;
 $53A0 DEFB $C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$82,$03,$DD,$F3,$E7,$9F,$3C,$7C,$7F,$C0,$00,$FF,$0F,$FC,$F1,$F0,$03 ;
 $53C0 DEFB $C0,$03,$00,$06,$10,$30,$00,$C1,$81,$88,$18,$18,$58,$41,$80,$0C,$E0,$40,$00,$16,$00,$00,$C6,$20,$2C,$03,$00,$0C,$00,$18,$80,$03 ;
 $53E0 DEFB $C0,$07,$FF,$01,$C0,$7F,$F1,$E3,$C0,$F0,$03,$C0,$E1,$E3,$FF,$80,$9F,$00,$01,$E3,$70,$00,$31,$83,$C7,$C7,$FF,$1F,$FC,$0F,$00,$03 ;
 $5400 DEFB $C0,$00,$00,$03,$77,$6E,$40,$01,$7F,$BC,$60,$3A,$40,$90,$40,$00,$20,$07,$7D,$FB,$FE,$00,$00,$66,$81,$36,$80,$00,$00,$00,$00,$03 ;
 $5420 DEFB $C0,$00,$00,$67,$FE,$FB,$00,$01,$0C,$20,$40,$00,$18,$04,$C1,$00,$1E,$03,$5E,$41,$F6,$00,$00,$F5,$21,$ED,$80,$00,$00,$00,$00,$03 ;
 $5440 DEFB $C0,$00,$03,$3F,$F4,$FE,$03,$C0,$16,$4C,$0C,$1A,$10,$7F,$81,$80,$1C,$00,$40,$10,$01,$00,$0D,$F8,$01,$01,$FD,$E0,$00,$00,$00,$03 ;
 $5460 DEFB $C0,$00,$19,$FE,$37,$DC,$06,$07,$00,$00,$00,$00,$21,$57,$C0,$08,$07,$81,$C7,$8F,$3C,$7F,$C0,$7F,$80,$01,$FC,$1F,$F1,$E3,$C0,$03 ;
 $5480 DEFB $C0,$00,$03,$43,$0E,$1F,$98,$00,$00,$00,$00,$00,$00,$00,$00,$10,$04,$82,$74,$E8,$38,$40,$19,$36,$72,$3C,$D1,$D0,$39,$32,$70,$03 ;
 $54A0 DEFB $C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03 ;
 $54C0 DEFB $C0,$03,$04,$06,$10,$30,$40,$C1,$81,$88,$30,$0C,$4C,$41,$82,$08,$78,$00,$00,$16,$00,$00,$C6,$20,$2C,$03,$00,$0C,$00,$18,$80,$03 ;
 $54E0 DEFB $C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03 ;
 $5500 DEFB $C0,$00,$00,$04,$95,$D3,$80,$01,$8F,$5C,$50,$08,$20,$90,$24,$00,$40,$0E,$FE,$FB,$FE,$00,$00,$4C,$C0,$3F,$80,$00,$00,$00,$00,$03 ;
 $5520 DEFB $C0,$00,$00,$4F,$FF,$FB,$00,$01,$CA,$2C,$C0,$00,$04,$02,$00,$00,$17,$04,$00,$3F,$0E,$00,$01,$F9,$F0,$FB,$40,$00,$00,$00,$00,$03 ;
 $5540 DEFB $C0,$00,$03,$3F,$ED,$FE,$08,$38,$1B,$40,$03,$EE,$11,$FF,$C0,$60,$7E,$80,$44,$20,$01,$00,$1F,$F0,$FC,$BC,$F7,$F0,$00,$00,$00,$03 ;
 $5560 DEFB $C0,$00,$3F,$FC,$3B,$E4,$07,$F8,$00,$00,$00,$00,$1F,$FC,$00,$08,$04,$C2,$64,$C9,$A6,$40,$20,$80,$C0,$02,$02,$10,$19,$32,$60,$03 ;
 $5580 DEFB $C0,$00,$03,$96,$80,$0F,$E0,$00,$00,$00,$00,$00,$00,$00,$00,$10,$0C,$C6,$74,$E9,$98,$4F,$9D,$36,$72,$3C,$D9,$D3,$F9,$32,$70,$03 ;
 $55A0 DEFB $C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03 ;
 $55C0 DEFB $C0,$03,$FC,$07,$30,$3F,$C0,$C3,$00,$D0,$30,$0C,$4C,$41,$FE,$10,$1E,$00,$00,$23,$00,$00,$6B,$40,$46,$03,$00,$0C,$00,$0D,$00,$03 ;
 $55E0 DEFB $C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03 ;
 $5600 DEFB $C0,$00,$00,$0E,$67,$36,$80,$03,$8F,$44,$50,$06,$30,$89,$24,$00,$00,$1D,$BF,$77,$FE,$00,$00,$4C,$C1,$76,$80,$00,$00,$00,$00,$03 ;
 $5620 DEFB $C0,$00,$00,$CF,$FF,$FB,$00,$02,$0E,$4C,$40,$00,$02,$02,$00,$00,$33,$00,$7F,$C0,$C6,$00,$01,$BF,$31,$E5,$C0,$00,$00,$00,$00,$03 ;
 $5640 DEFB $C0,$00,$03,$FF,$EC,$FE,$08,$04,$04,$7F,$1F,$FE,$17,$FF,$E0,$40,$C1,$00,$4E,$40,$01,$00,$1E,$43,$FF,$CE,$FA,$48,$00,$00,$00,$03 ;
 $5660 DEFB $C0,$00,$37,$FC,$1B,$DF,$00,$00,$00,$00,$00,$00,$00,$00,$00,$08,$04,$64,$74,$E9,$CF,$40,$11,$00,$60,$04,$01,$10,$1D,$1E,$70,$03 ;
 $5680 DEFB $C0,$00,$01,$FD,$80,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$30,$14,$C6,$74,$E9,$9C,$4F,$9D,$36,$73,$FC,$C9,$D2,$01,$38,$70,$03 ;
 $56A0 DEFB $C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03 ;
 $56C0 DEFB $C0,$03,$04,$03,$20,$30,$40,$FE,$00,$D0,$30,$0C,$46,$41,$82,$00,$07,$80,$00,$23,$00,$00,$6B,$40,$46,$03,$00,$0C,$00,$0D,$00,$03 ;
 $56E0 DEFB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ;
 $5700 DEFB $C0,$00,$00,$1F,$98,$69,$00,$07,$8F,$47,$90,$01,$B8,$44,$44,$00,$00,$6F,$EE,$77,$FA,$00,$00,$CC,$C1,$FE,$80,$00,$00,$00,$00,$03 ;
 $5720 DEFB $C0,$00,$00,$FF,$FE,$FB,$00,$03,$8E,$5C,$C0,$70,$01,$01,$E0,$00,$31,$C3,$C0,$00,$32,$00,$01,$BF,$F3,$F6,$50,$00,$00,$00,$00,$03 ;
 $5740 DEFB $C0,$00,$0F,$FF,$CC,$FC,$10,$32,$00,$C7,$FF,$A6,$2F,$FB,$F8,$21,$80,$00,$24,$80,$01,$00,$0F,$87,$14,$A3,$8A,$48,$00,$00,$00,$03 ;
 $5760 DEFB $C0,$00,$33,$FC,$1C,$EF,$A0,$00,$00,$00,$00,$00,$00,$00,$00,$04,$04,$74,$74,$E9,$CE,$4F,$99,$3E,$70,$04,$F9,$93,$FD,$1E,$70,$03 ;
 $5780 DEFB $C0,$00,$00,$FF,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$3C,$64,$C6,$74,$E9,$CC,$4C,$9D,$3E,$71,$FC,$F9,$D3,$F1,$38,$70,$03 ;
 $57A0 DEFB $C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03 ;
 $57C0 DEFB $C0,$03,$00,$03,$20,$30,$00,$D8,$00,$60,$30,$0C,$46,$41,$80,$00,$81,$C0,$00,$3F,$00,$00,$6B,$40,$7E,$03,$00,$0C,$00,$06,$00,$03 ;
 $57E0 DEFB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ; }
 $5800 DEFB $3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A ; {Attributes
 $5820 DEFB $3A,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$3A ;
 $5840 DEFB $3A,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$3A ;
 $5860 DEFB $3A,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$3A ;
 $5880 DEFB $3A,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$3A ;
 $58A0 DEFB $3A,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$3A ;
 $58C0 DEFB $3A,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$3A ;
 $58E0 DEFB $3A,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$3A ;
 $5900 DEFB $3A,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$3A ;
 $5920 DEFB $3A,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$3A ;
 $5940 DEFB $3A,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$3A ;
 $5960 DEFB $3A,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$3A ;
 $5980 DEFB $3A,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$3A ;
 $59A0 DEFB $3A,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$3A ;
 $59C0 DEFB $3A,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$3A ;
 $59E0 DEFB $3A,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$3A ;
 $5A00 DEFB $3A,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$3A ;
 $5A20 DEFB $3A,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$3A ;
 $5A40 DEFB $3A,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$38,$39,$39,$39,$39,$39,$39,$39,$39,$3A ;
 $5A60 DEFB $3A,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$38,$38,$38,$38,$38,$38,$38,$38,$38,$38,$38,$38,$38,$38,$38,$3A ;
 $5A80 DEFB $3A,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$38,$38,$38,$38,$38,$38,$38,$38,$38,$38,$38,$38,$38,$38,$38,$3A ;
 $5AA0 DEFB $3A,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$39,$38,$38,$38,$38,$38,$38,$38,$38,$38,$38,$38,$38,$38,$38,$38,$3A ;
 $5AC0 DEFB $3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A ;
 $5AE0 DEFB $3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A,$3A ; }

; Data block at 5B00
b$5B00 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B08 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B10 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B18 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B20 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B28 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B30 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B38 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B40 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B48 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B50 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B58 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B60 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B68 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B70 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B78 DEFB $00,$00,$00,$00,$00,$00,$00,$00

; Routine at 5B80
c$5B80 LD BC,$A299   ; #REGbc=#N$A299.
 $5B83 LD HL,$5B97   ; #REGhl=#N$5B97.
 $5B86 XOR A         ; {#REGr=#N$00.
 $5B87 LD R,A        ; }
*$5B89 LD A,R        ;
 $5B8B XOR (HL)      ;
 $5B8C LD (HL),A     ;
 $5B8D DEC BC        ; Decrease #REGbc by one.
 $5B8E INC HL        ; Increment #REGhl by one.
 $5B8F LD A,B        ; {Jump to #R$5B89 unless #REGbc is now zero.
 $5B90 OR C          ;
 $5B91 JR NZ,$5B89   ; }
 $5B93 RET           ; Return.
; This entry point is used by the routine at #R$FEF7.
*$5B94 CALL $5B80    ; Call #R$5B80.
 $5B97 JP $8184      ; Jump to #R$8184.

; Data block at 5B9A
b$5B9A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BA2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BAA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BB2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BBA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BC2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BCA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BD2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BDA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BE2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BEA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BF2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BFA DEFB $00,$00,$00,$00,$00,$00,$FF,$00
 $5C02 DEFB $00,$00,$0D,$05,$23,$0D,$0D,$23
 $5C0A DEFB $05,$00,$00,$00,$11,$00,$01,$00
 $5C12 DEFB $06,$00,$0B,$00,$01,$00,$01,$00
 $5C1A DEFB $06,$00,$10,$00,$00,$00,$00,$00
 $5C22 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C2A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C32 DEFB $00,$00,$00,$00,$00,$3C,$40,$00
 $5C3A DEFB $FF,$CD,$00,$8D,$65,$00,$00,$00
 $5C42 DEFB $00,$00,$FF,$FE,$FF,$03,$38,$00
 $5C4A DEFB $00,$A2,$5D,$00,$00,$B6,$5C,$BB
 $5C52 DEFB $5C,$CB,$5C,$B4,$5E,$CA,$5C,$98
 $5C5A DEFB $5E,$AD,$5E,$B3,$5E,$B8,$00,$B5
 $5C62 DEFB $5E,$B5,$5E,$B5,$5E,$2D,$92,$5C
 $5C6A DEFB $00,$02,$00,$00,$00,$00,$00,$00
 $5C72 DEFB $00,$00,$B6,$1A,$00,$00,$B7,$2F
 $5C7A DEFB $02,$58,$FF,$00,$00,$21,$00,$5B
 $5C82 DEFB $21,$17,$00,$48,$E0,$50,$21,$10
 $5C8A DEFB $21,$17,$03,$38,$00,$38,$00,$00
 $5C92 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C9A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5CA2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5CAA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5CB2 DEFB $90,$65,$FF,$FF,$F4,$09,$A8,$10
 $5CBA DEFB $4B,$F4,$09,$C4,$15,$53,$81,$0F
 $5CC2 DEFB $C4,$15,$52,$F4,$09,$C4,$15,$50
 $5CCA DEFB $80,$00,$01,$16,$00,$EA,$20,$20
 $5CD2 DEFB $45,$76,$65,$72,$79,$6F,$6E,$65
 $5CDA DEFB $27,$73,$20,$61,$20,$57,$61,$6C
 $5CE2 DEFB $6C,$79,$0D,$00,$02,$20,$00,$EA
 $5CEA DEFB $20,$20,$20,$12,$01,$13,$01,$7F
 $5CF2 DEFB $20,$4D,$69,$6B,$72,$6F,$2D,$47
 $5CFA DEFB $65,$6E,$20,$31,$39,$38,$35,$12
 $5D02 DEFB $00,$13,$00,$12,$38,$00,$0D,$00
 $5D0A DEFB $0A,$95,$00,$12,$38,$12,$38,$00
 $5D12 DEFB $00,$E7,$30,$0E,$00,$00,$00,$00
 $5D1A DEFB $00,$3A,$DA,$30,$0E,$00,$00,$00
 $5D22 DEFB $00,$00,$3A,$D9,$30,$0E,$00,$00
 $5D2A DEFB $00,$00,$00,$3A,$DC,$30,$0E,$00
 $5D32 DEFB $00,$00,$00,$00,$3A,$DB,$30,$0E
 $5D3A DEFB $00,$00,$00,$00,$00,$3A,$FB,$3A
 $5D42 DEFB $F5,$23,$31,$0E,$00,$00,$01,$00
 $5D4A DEFB $00,$3B,$AD,$31,$32,$0E,$00,$00
 $5D52 DEFB $0C,$00,$00,$3B,$D9,$37,$0E,$00
 $5D5A DEFB $00,$07,$00,$00,$3B,$DC,$31,$0E
 $5D62 DEFB $00,$00,$01,$00,$00,$3B,$22,$4C
 $5D6A DEFB $4F,$41,$44,$49,$4E,$47,$22,$3A
 $5D72 DEFB $F9,$C0,$28,$BE,$32,$33,$36,$32
 $5D7A DEFB $37,$0E,$00,$00,$4B,$5C,$00,$2B
 $5D82 DEFB $32,$35,$36,$0E,$00,$00,$00,$01
 $5D8A DEFB $00,$2A,$BE,$32,$33,$36,$32,$38
 $5D92 DEFB $0E,$00,$00,$4C,$5C,$00,$2B,$36
 $5D9A DEFB $0E,$00,$00,$06,$00,$00,$29,$0D
 $5DA2 DEFB $C1,$DF,$00,$01,$DC,$00,$F3,$31
 $5DAA DEFB $00,$00,$2A,$4B,$5C,$11,$1C,$00
 $5DB2 DEFB $19,$11,$46,$FE,$01,$C6,$00,$ED
 $5DBA DEFB $B0,$C3,$46,$FE,$DD,$21,$00,$40
 $5DC2 DEFB $11,$25,$BF,$3E,$16,$32,$AA,$FE
 $5DCA DEFB $3E,$FF,$37,$14,$08,$15,$3E,$0F
 $5DD2 DEFB $D3,$FE,$DB,$FE,$1F,$E6,$20,$F6
 $5DDA DEFB $02,$4F,$BF,$CD,$A9,$FE,$30,$FB
 $5DE2 DEFB $21,$15,$04,$10,$FE,$2B,$7C,$B5
 $5DEA DEFB $20,$F9,$CD,$A5,$FE,$30,$EC,$06
 $5DF2 DEFB $9C,$CD,$A5,$FE,$30,$E5,$3E,$C6
 $5DFA DEFB $B8,$30,$E0,$24,$20,$F1,$06,$C9
 $5E02 DEFB $CD,$A9,$FE,$30,$D6,$78,$FE,$D4
 $5E0A DEFB $30,$F4,$CD,$A9,$FE,$D2,$00,$00
 $5E12 DEFB $3E,$08,$32,$AA,$FE,$26,$00,$06
 $5E1A DEFB $B0,$18,$39,$CD,$A9,$FE,$D0,$3E
 $5E22 DEFB $08,$3D,$20,$FD,$A7,$04,$C8,$3E
 $5E2A DEFB $7F,$DB,$FE,$1F,$A9,$E6,$20,$28
 $5E32 DEFB $F4,$79,$EE,$FD,$4F,$E6,$07,$F6
 $5E3A DEFB $08,$D3,$FE,$37,$C9,$08,$20,$05
 $5E42 DEFB $DD,$75,$00,$18,$09,$CB,$11,$AD
 $5E4A DEFB $79,$1F,$4F,$13,$18,$02,$DD,$23
 $5E52 DEFB $1B,$08,$06,$B2,$2E,$01,$CD,$A5
 $5E5A DEFB $FE,$D2,$00,$00,$3E,$C6,$B8,$CB
 $5E62 DEFB $15,$06,$B0,$D2,$E0,$FE,$7C,$AD
 $5E6A DEFB $67,$7A,$B3,$20,$D0,$21,$00,$40
 $5E72 DEFB $01,$24,$BF,$3E,$00,$86,$5F,$23
 $5E7A DEFB $0B,$78,$B1,$7B,$20,$F7,$BE,$C2
 $5E82 DEFB $00,$00,$E1,$00,$00,$0C,$FF,$00
 $5E8A DEFB $00,$00,$0B,$FF,$00,$00,$00,$01
 $5E92 DEFB $00,$00,$FE,$FF,$02,$80,$EF,$22
 $5E9A DEFB $22,$AA,$3A,$F2,$30,$0E,$00,$00
 $5EA2 DEFB $00,$00,$00,$3A,$F9,$C0,$36,$35
 $5EAA DEFB $33,$32,$38,$0E,$00,$00,$30,$FF
 $5EB2 DEFB $00,$0D,$80,$00,$00,$30,$FF,$00
 $5EBA DEFB $20,$20,$20,$20,$20,$20,$00,$1B
 $5EC2 DEFB $00,$40,$01,$72,$03,$73,$63,$72
 $5ECA DEFB $65,$65,$6E,$20,$20,$20,$20,$00
 $5ED2 DEFB $1B,$00,$80,$00,$80,$AA,$9A,$5E
 $5EDA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5EE2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5EEA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5EF2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5EFA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F02 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F0A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F12 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F1A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F22 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F2A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F32 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F3A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F42 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F4A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F52 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F5A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F62 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F6A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F72 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F7A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F82 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F8A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F92 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F9A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FA2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FAA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FB2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FBA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FC2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FCA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FD2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FDA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FE2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FEA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FF2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FFA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6002 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $600A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6012 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $601A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6022 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $602A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6032 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $603A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6042 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $604A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6052 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $605A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6062 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $606A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6072 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $607A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6082 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $608A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6092 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $609A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $60A2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $60AA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $60B2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $60BA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $60C2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $60CA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $60D2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $60DA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $60E2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $60EA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $60F2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $60FA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6102 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $610A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6112 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $611A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6122 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $612A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6132 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $613A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6142 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $614A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6152 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $615A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6162 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $616A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6172 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $617A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6182 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $618A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6192 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $619A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $61A2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $61AA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $61B2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $61BA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $61C2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $61CA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $61D2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $61DA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $61E2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $61EA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $61F2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $61FA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6202 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $620A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6212 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $621A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6222 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $622A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6232 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $623A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6242 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $624A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6252 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $625A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6262 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $626A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6272 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $627A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6282 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $628A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6292 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $629A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $62A2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $62AA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $62B2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $62BA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $62C2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $62CA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $62D2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $62DA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $62E2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $62EA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $62F2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $62FA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6302 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $630A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6312 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $631A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6322 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $632A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6332 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $633A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6342 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $634A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6352 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $635A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6362 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $636A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6372 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $637A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6382 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $638A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6392 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $639A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $63A2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $63AA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $63B2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $63BA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $63C2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $63CA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $63D2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $63DA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $63E2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $63EA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $63F2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $63FA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6402 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $640A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6412 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $641A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6422 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $642A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6432 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $643A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6442 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $644A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6452 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $645A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6462 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $646A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6472 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $647A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6482 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $648A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6492 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $649A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $64A2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $64AA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $64B2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $64BA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $64C2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $64CA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $64D2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $64DA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $64E2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $64EA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $64F2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $64FA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6502 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $650A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6512 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $651A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6522 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $652A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6532 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $653A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6542 DEFB $00,$E0,$57,$71,$0E,$00,$01,$30
 $654A DEFB $0D,$DB,$02,$4D,$00,$B7,$5C,$F3
 $6552 DEFB $0D,$CE,$0B,$E6,$50,$CE,$0B,$E7
 $655A DEFB $50,$1A,$16,$DC,$0A,$CE,$0B,$ED
 $6562 DEFB $50,$14,$16,$DC,$0A,$DB,$02,$DB
 $656A DEFB $02,$4D,$00,$37,$00,$F3,$0D,$B7
 $6572 DEFB $2D,$B5,$5E,$B0,$5E,$30,$FF,$2B
 $657A DEFB $2D,$65,$33,$00,$25,$ED,$10,$0D
 $6582 DEFB $00,$09,$00,$85,$1C,$10,$1C,$52
 $658A DEFB $1B,$76,$1B,$03,$13,$00,$3E,$00
 $6592 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $659A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $65A2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $65AA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $65B2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $65BA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $65C2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $65CA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $65D2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $65DA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $65E2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $65EA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $65F2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $65FA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6602 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $660A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6612 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $661A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6622 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $662A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6632 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $663A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6642 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $664A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6652 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $665A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6662 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $666A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6672 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $667A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6682 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $668A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6692 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $669A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $66A2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $66AA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $66B2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $66BA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $66C2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $66CA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $66D2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $66DA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $66E2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $66EA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $66F2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $66FA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6702 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $670A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6712 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $671A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6722 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $672A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6732 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $673A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6742 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $674A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6752 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $675A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6762 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $676A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6772 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $677A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6782 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $678A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6792 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $679A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $67A2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $67AA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $67B2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $67BA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $67C2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $67CA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $67D2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $67DA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $67E2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $67EA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $67F2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $67FA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6802 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $680A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6812 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $681A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6822 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $682A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6832 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $683A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6842 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $684A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6852 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $685A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6862 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $686A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6872 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $687A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6882 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $688A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6892 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $689A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $68A2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $68AA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $68B2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $68BA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $68C2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $68CA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $68D2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $68DA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $68E2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $68EA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $68F2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $68FA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6902 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $690A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6912 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $691A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6922 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $692A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6932 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $693A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6942 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $694A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6952 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $695A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6962 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $696A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6972 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $697A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6982 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $698A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6992 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $699A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $69A2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $69AA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $69B2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $69BA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $69C2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $69CA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $69D2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $69DA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $69E2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $69EA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $69F2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $69FA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6A02 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6A0A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6A12 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6A1A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6A22 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6A2A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6A32 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6A3A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6A42 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6A4A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6A52 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6A5A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6A62 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6A6A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6A72 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6A7A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6A82 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6A8A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6A92 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6A9A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6AA2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6AAA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6AB2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6ABA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6AC2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6ACA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6AD2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6ADA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6AE2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6AEA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6AF2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6AFA DEFB $00,$00,$00,$00,$00,$00

; Shadow Buffer
@label=ShadowBuffer
b$6B00 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6B08 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6B10 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6B18 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6B20 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6B28 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6B30 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6B38 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6B40 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6B48 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6B50 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6B58 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6B60 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6B68 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6B70 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6B78 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6B80 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6B88 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6B90 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6B98 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6BA0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6BA8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6BB0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6BB8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6BC0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6BC8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6BD0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6BD8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6BE0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6BE8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6BF0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6BF8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6C00 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6C08 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6C10 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6C18 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6C20 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6C28 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6C30 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6C38 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6C40 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6C48 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6C50 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6C58 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6C60 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6C68 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6C70 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6C78 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6C80 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6C88 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6C90 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6C98 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6CA0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6CA8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6CB0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6CB8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6CC0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6CC8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6CD0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6CD8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6CE0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6CE8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6CF0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6CF8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6D00 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6D08 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6D10 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6D18 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6D20 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6D28 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6D30 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6D38 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6D40 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6D48 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6D50 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6D58 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6D60 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6D68 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6D70 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6D78 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6D80 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6D88 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6D90 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6D98 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6DA0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6DA8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6DB0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6DB8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6DC0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6DC8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6DD0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6DD8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6DE0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6DE8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6DF0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6DF8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6E00 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6E08 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6E10 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6E18 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6E20 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6E28 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6E30 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6E38 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6E40 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6E48 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6E50 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6E58 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6E60 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6E68 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6E70 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6E78 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6E80 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6E88 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6E90 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6E98 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6EA0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6EA8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6EB0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6EB8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6EC0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6EC8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6ED0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6ED8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6EE0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6EE8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6EF0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6EF8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6F00 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6F08 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6F10 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6F18 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6F20 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6F28 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6F30 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6F38 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6F40 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6F48 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6F50 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6F58 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6F60 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6F68 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6F70 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6F78 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6F80 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6F88 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6F90 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6F98 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6FA0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6FA8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6FB0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6FB8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6FC0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6FC8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6FD0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6FD8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6FE0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6FE8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6FF0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6FF8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7000 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7008 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7010 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7018 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7020 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7028 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7030 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7038 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7040 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7048 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7050 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7058 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7060 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7068 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7070 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7078 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7080 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7088 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7090 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7098 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $70A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $70A8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $70B0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $70B8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $70C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $70C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $70D0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $70D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $70E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $70E8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $70F0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $70F8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7100 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7108 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7110 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7118 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7120 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7128 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7130 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7138 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7140 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7148 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7150 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7158 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7160 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7168 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7170 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7178 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7180 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7188 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7190 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7198 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $71A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $71A8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $71B0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $71B8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $71C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $71C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $71D0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $71D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $71E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $71E8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $71F0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $71F8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7200 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7208 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7210 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7218 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7220 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7228 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7230 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7238 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7240 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7248 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7250 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7258 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7260 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7268 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7270 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7278 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7280 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7288 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7290 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7298 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $72A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $72A8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $72B0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $72B8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $72C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $72C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $72D0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $72D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $72E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $72E8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $72F0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $72F8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7300 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7308 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7310 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7318 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7320 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7328 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7330 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7338 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7340 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7348 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7350 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7358 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7360 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7368 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7370 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7378 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7380 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7388 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7390 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7398 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $73A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $73A8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $73B0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $73B8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $73C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $73C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $73D0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $73D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $73E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $73E8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $73F0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $73F8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7400 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7408 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7410 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7418 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7420 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7428 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7430 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7438 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7440 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7448 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7450 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7458 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7460 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7468 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7470 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7478 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7480 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7488 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7490 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7498 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $74A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $74A8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $74B0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $74B8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $74C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $74C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $74D0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $74D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $74E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $74E8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $74F0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $74F8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7500 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7508 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7510 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7518 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7520 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7528 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7530 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7538 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7540 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7548 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7550 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7558 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7560 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7568 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7570 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7578 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7580 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7588 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7590 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7598 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $75A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $75A8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $75B0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $75B8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $75C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $75C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $75D0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $75D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $75E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $75E8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $75F0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $75F8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7600 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7608 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7610 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7618 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7620 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7628 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7630 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7638 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7640 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7648 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7650 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7658 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7660 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7668 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7670 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7678 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7680 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7688 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7690 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7698 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $76A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $76A8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $76B0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $76B8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $76C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $76C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $76D0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $76D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $76E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $76E8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $76F0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $76F8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7700 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7708 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7710 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7718 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7720 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7728 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7730 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7738 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7740 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7748 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7750 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7758 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7760 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7768 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7770 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7778 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7780 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7788 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7790 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7798 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $77A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $77A8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $77B0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $77B8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $77C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $77C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $77D0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $77D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $77E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $77E8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $77F0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $77F8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7800 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7808 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7810 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7818 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7820 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7828 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7830 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7838 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7840 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7848 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7850 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7858 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7860 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7868 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7870 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7878 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7880 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7888 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7890 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7898 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $78A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $78A8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $78B0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $78B8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $78C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $78C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $78D0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $78D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $78E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $78E8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $78F0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $78F8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7900 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7908 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7910 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7918 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7920 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7928 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7930 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7938 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7940 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7948 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7950 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7958 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7960 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7968 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7970 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7978 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7980 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7988 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7990 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7998 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $79A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $79A8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $79B0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $79B8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $79C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $79C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $79D0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $79D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $79E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $79E8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $79F0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $79F8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7A00 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7A08 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7A10 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7A18 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7A20 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7A28 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7A30 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7A38 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7A40 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7A48 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7A50 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7A58 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7A60 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7A68 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7A70 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7A78 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7A80 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7A88 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7A90 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7A98 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7AA0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7AA8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7AB0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7AB8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7AC0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7AC8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7AD0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7AD8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7AE0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7AE8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7AF0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7AF8 DEFB $00,$00,$00,$00,$00,$00,$00,$00

; Data block at 7B00
b$7B00 DEFB $00,$80,$40,$C0,$20,$A0,$60,$E0
 $7B08 DEFB $10,$90,$50,$D0,$30,$B0,$70,$F0
 $7B10 DEFB $08,$88,$48,$C8,$28,$A8,$68,$E8
 $7B18 DEFB $18,$98,$58,$D8,$38,$B8,$78,$F8
 $7B20 DEFB $04,$84,$44,$C4,$24,$A4,$64,$E4
 $7B28 DEFB $14,$94,$54,$D4,$34,$B4,$74,$F4
 $7B30 DEFB $0C,$8C,$4C,$CC,$2C,$AC,$6C,$EC
 $7B38 DEFB $1C,$9C,$5C,$DC,$3C,$BC,$7C,$FC
 $7B40 DEFB $02,$82,$42,$C2,$22,$A2,$62,$E2
 $7B48 DEFB $12,$92,$52,$D2,$32,$B2,$72,$F2
 $7B50 DEFB $0A,$8A,$4A,$CA,$2A,$AA,$6A,$EA
 $7B58 DEFB $1A,$9A,$5A,$DA,$3A,$BA,$7A,$FA
 $7B60 DEFB $06,$86,$46,$C6,$26,$A6,$66,$E6
 $7B68 DEFB $16,$96,$56,$D6,$36,$B6,$76,$F6
 $7B70 DEFB $0E,$8E,$4E,$CE,$2E,$AE,$6E,$EE
 $7B78 DEFB $1E,$9E,$5E,$DE,$3E,$BE,$7E,$FE
 $7B80 DEFB $01,$81,$41,$C1,$21,$A1,$61,$E1
 $7B88 DEFB $11,$91,$51,$D1,$31,$B1,$71,$F1
 $7B90 DEFB $09,$89,$49,$C9,$29,$A9,$69,$E9
 $7B98 DEFB $19,$99,$59,$D9,$39,$B9,$79,$F9
 $7BA0 DEFB $05,$85,$45,$C5,$25,$A5,$65,$E5
 $7BA8 DEFB $15,$95,$55,$D5,$35,$B5,$75,$F5
 $7BB0 DEFB $0D,$8D,$4D,$CD,$2D,$AD,$6D,$ED
 $7BB8 DEFB $1D,$9D,$5D,$DD,$3D,$BD,$7D,$FD
 $7BC0 DEFB $03,$83,$43,$C3,$23,$A3,$63,$E3
 $7BC8 DEFB $13,$93,$53,$D3,$33,$B3,$73,$F3
 $7BD0 DEFB $0B,$8B,$4B,$CB,$2B,$AB,$6B,$EB
 $7BD8 DEFB $1B,$9B,$5B,$DB,$3B,$BB,$7B,$FB
 $7BE0 DEFB $07,$87,$47,$C7,$27,$A7,$67,$E7
 $7BE8 DEFB $17,$97,$57,$D7,$37,$B7,$77,$F7
 $7BF0 DEFB $0F,$8F,$4F,$CF,$2F,$AF,$6F,$EF
 $7BF8 DEFB $1F,$9F,$5F,$DF,$3F,$BF,$7F,$FF

; Messaging: Wally
t$7C00 DEFM "WALLY",$FF ; "#STR$7C00,$08($b==$FF)".

; Messaging: Wilma
t$7C06 DEFM "WILMA",$FF ; "#STR$7C06,$08($b==$FF)".

; Messaging: Tom
t$7C0C DEFM "TOM",$FF ; "#STR$7C0C,$08($b==$FF)".

; Messaging: Dick
t$7C10 DEFM "DICK",$FF ; "#STR$7C10,$08($b==$FF)".

; Messaging: Harry
t$7C15 DEFM "HARRY",$FF ; "#STR$7C15,$08($b==$FF)".

; Messaging: Wages
@label=Messaging_Wages
t$7C1B DEFB $FE,$43         ; Attribute: #COLOUR(#PEEK(#PC+$01)).
 $7C1D DEFM "TODAY'S WAGES" ; #FONT:(TODAY'S WAGES)$E0DC,attr=$43(wages-01)
 $7C2A DEFB $B8,$04         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $7C2C DEFB $FE,$46         ; Attribute: #COLOUR(#PEEK(#PC+$01)).
 $7C2E DEFM "WALLY'S PAY"   ; #FONT:(WALLY'S PAY)$E0DC,attr=$46(wages-02)
 $7C39 DEFB $BD,$03         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $7C3B DEFM "WILMA'S PAY"   ; #FONT:(WILMA'S PAY)$E0DC,attr=$46(wages-03)
 $7C46 DEFB $BD,$03         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $7C48 DEFM "TOM'S PAY"     ; #FONT:(TOM'S PAY)$E0DC,attr=$46(wages-04)
 $7C51 DEFB $BF,$03         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $7C53 DEFM "DICK'S PAY"    ; #FONT:(DICK'S PAY)$E0DC,attr=$46(wages-05)
 $7C5D DEFB $BE,$03         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $7C5F DEFM "HARRY'S PAY"   ; #FONT:(HARRY'S PAY)$E0DC,attr=$46(wages-06)
 $7C6A DEFB $FE,$43         ; Attribute: #COLOUR(#PEEK(#PC+$01)).
 $7C6C DEFB $BF,$04         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $7C6E DEFM "OVERALL"       ; #FONT:(OVERALL)$E0DC,attr=$43(wages-07)
 $7C75 DEFB $FF             ; Terminator.

; Messaging: Congratulations
@label=Messaging_Congratulations
t$7C76 DEFB $FE,$44                       ; Attribute: #COLOUR(#PEEK(#PC+$01)).
 $7C78 DEFM "YOU CLEVER DICK  (PLUS TOM," ; #FONT:(YOU CLEVER DICK  PLUS
                                          ; TOM,)$E0DC,attr=$44(congratulations-01)
 $7C93 DEFB $AD,$03                       ; Move cursor: #N(#PEEK(#PC)-$C8),
                                          ; #N(#PEEK(#PC+$01)).
 $7C95 DEFM "HARRY, WILMA AND WALLY)."    ; #FONT:(HARRY, WILMA AND
                                          ; WALLY.)$E0DC,attr=$44(congratulations-02)
 $7CAD DEFB $B0,$03                       ; Move cursor: #N(#PEEK(#PC)-$C8),
                                          ; #N(#PEEK(#PC+$01)).
 $7CAF DEFM "YOU'VE OPENED THE SAFE."     ; #FONT:(YOU'VE OPENED THE
                                          ; SAFE.)$E0DC,attr=$44(congratulations-03)
 $7CC6 DEFB $B1,$03                       ; Move cursor: #N(#PEEK(#PC)-$C8),
                                          ; #N(#PEEK(#PC+$01)).
 $7CC8 DEFM "PERHAPS  EVERYONE'S  NOT  A" ; #FONT:(PERHAPS  EVERYONE'S  NOT
                                          ; A)$E0DC,attr=$44(congratulations-04)
 $7CE3 DEFB $AD,$03                       ; Move cursor: #N(#PEEK(#PC)-$C8),
                                          ; #N(#PEEK(#PC+$01)).
 $7CE5 DEFM "WALLY AFTER ALL."            ; #FONT:(WALLY AFTER
                                          ; ALL.)$E0DC,attr=$44(congratulations-05)
 $7CF5 DEFB $B8,$03                       ; Move cursor: #N(#PEEK(#PC)-$C8),
                                          ; #N(#PEEK(#PC+$01)).
 $7CF7 DEFM "THE GANG HAVE BEEN PAID AND" ; #FONT:(THE GANG HAVE BEEN PAID
                                          ; AND)$E0DC,attr=$44(congratulations-06)
 $7D12 DEFB $AD,$03                       ; Move cursor: #N(#PEEK(#PC)-$C8),
                                          ; #N(#PEEK(#PC+$01)).
 $7D14 DEFM "ARE NOW OFF ON THEIR HOLS."  ; #FONT:(ARE NOW OFF ON THEIR
                                          ; HOLS.)$E0DC,attr=$44(congratulations-07)
 $7D2E DEFB $AE,$03                       ; Move cursor: #N(#PEEK(#PC)-$C8),
                                          ; #N(#PEEK(#PC+$01)).
 $7D30 DEFM "SEE YOU AGAIN SOMETIME."     ; #FONT:(SEE YOU AGAIN
                                          ; SOMETIME.)$E0DC,attr=$44(congratulations-08)
 $7D47 DEFB $FF                           ; Terminator.

; Messaging: Tough Luck
@label=Messaging_ToughLuck
t$7D48 DEFB $FE,$44                     ; Attribute: #COLOUR(#PEEK(#PC+$01)).
 $7D4A DEFM "TOUGH LUCK.  THE GANG HAS" ; #FONT:(TOUGH LUCK.  THE GANG
                                        ; HAS)$E0DC,attr=$44(tough-luck-01)
 $7D63 DEFB $AF,$03                     ; Move cursor: #N(#PEEK(#PC)-$C8),
                                        ; #N(#PEEK(#PC+$01)).
 $7D65 DEFM "EARNED"                    ; #FONT:(EARNED)$E0DC,attr=$44(tough-luck-02)
 $7D6B DEFB $CE,$00                     ; Move cursor: #N(#PEEK(#PC)-$C8),
                                        ; #N(#PEEK(#PC+$01)).
 $7D6D DEFM ",  BUT  CAN'T"             ; #FONT:(,  BUT
                                        ; CAN'T)$E0DC,attr=$44(tough-luck-03)
 $7D7A DEFB $AF,$03                     ; Move cursor: #N(#PEEK(#PC)-$C8),
                                        ; #N(#PEEK(#PC+$01)).
 $7D7C DEFM "HAVE  IT  'COS  THE  SAFE" ; #FONT:(HAVE  IT  'COS  THE
                                        ; SAFE)$E0DC,attr=$44(tough-luck-04)
 $7D95 DEFB $AF,$03                     ; Move cursor: #N(#PEEK(#PC)-$C8),
                                        ; #N(#PEEK(#PC+$01)).
 $7D97 DEFM "WASN'T OPENED, AND THAT'S" ; #FONT:(WASN'T OPENED, AND
                                        ; THAT'S)$E0DC,attr=$44(tough-luck-05)
 $7DB0 DEFB $AF,$03                     ; Move cursor: #N(#PEEK(#PC)-$C8),
                                        ; #N(#PEEK(#PC+$01)).
 $7DB2 DEFM "WHERE THE MONEY IS."       ; #FONT:(WHERE THE MONEY
                                        ; IS.)$E0DC,attr=$44(tough-luck-06)
 $7DC5 DEFB $FF                         ; Terminator.

; Messaging: Splash Screen
@label=Messaging_Splash
t$7DC6 DEFB $FE,$42                  ; Attribute: #COLOUR(#PEEK(#PC+$01)).
 $7DC8 DEFM "KEY:-"                  ; #FONT:(KEY:-)$E0DC,attr=$42(key)
 $7DCD DEFB $FE,$46                  ; Attribute: #COLOUR(#PEEK(#PC+$01)).
 $7DCF DEFM "   1.SINCLAIR JOYSTICK" ; #FONT:(   1.SINCLAIR
                                     ; JOYSTICK)$E0DC,attr=$46(sinclair)
 $7DE5 DEFB $AD,$07                  ; Move cursor: #N(#PEEK(#PC)-$C8),
                                     ; #N(#PEEK(#PC+$01)).
 $7DE7 DEFB $FE,$42                  ; Attribute: #COLOUR(#PEEK(#PC+$01)).
 $7DE9 DEFM "KEY:-"                  ; #FONT:(KEY:-)$E0DC,attr=$42(key)
 $7DEE DEFB $FE,$46                  ; Attribute: #COLOUR(#PEEK(#PC+$01)).
 $7DF0 DEFM "   2.KEMPSTON JOYSTICK" ; #FONT:(   2.KEMPSTON
                                     ; JOYSTICK)$E0DC,attr=$46(kempston)
 $7E06 DEFB $AD,$07                  ; Move cursor: #N(#PEEK(#PC)-$C8),
                                     ; #N(#PEEK(#PC+$01)).
 $7E08 DEFB $FE,$42                  ; Attribute: #COLOUR(#PEEK(#PC+$01)).
 $7E0A DEFM "KEY:-"                  ; #FONT:(KEY:-)$E0DC,attr=$42(key)
 $7E0F DEFB $FE,$46                  ; Attribute: #COLOUR(#PEEK(#PC+$01)).
 $7E11 DEFM "   3.KEYBOARD"          ; #FONT:(
                                     ; 3.KEYBOARD)$E0DC,attr=$46(keyboard)
 $7E1E DEFB $BA,$08                  ; Move cursor: #N(#PEEK(#PC)-$C8),
                                     ; #N(#PEEK(#PC+$01)).
 $7E20 DEFB $FE,$45                  ; Attribute: #COLOUR(#PEEK(#PC+$01)).
 $7E22 DEFM "PRESS KEY 4 TO START"   ; #FONT:(PRESS KEY 4 TO
                                     ; START)$E0DC,attr=$46(start)
 $7E36 DEFB $FF                      ; Terminator.

; Messaging: Key
@label=Messaging_Key
t$7E37 DEFB $FE,$47     ; Attribute: #COLOUR(#PEEK(#PC+$01)).
 $7E39 DEFM "KEY:-",$FF ; #FONT:(KEY:-)$E0DC,attr=$47(key-chosen)

; Messaging: Banner
@label=Messaging_Banner
t$7E3F DEFB $FB          ; {Sprite Bank:
 $7E40 DEFW $DFDC        ; #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).}
 $7E42 DEFB $FE,$44      ; Attribute: #COLOUR(#PEEK(#PC+$01)).
 $7E44 DEFM "CHARACTER:" ; #FONT:(CHARACTER:)$E0DC,attr=$47(character)
 $7E4E DEFB $BE,$02      ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $7E50 DEFB $FE,$47      ; Attribute: #COLOUR(#PEEK(#PC+$01)).
 $7E52 DEFM "ENDURANCE:" ; #FONT:(ENDURANCE:)$E0DC,attr=$47(endurance)
 $7E5C DEFB $AE,$00      ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $7E5E DEFB $FE,$47      ; Attribute: #COLOUR(#PEEK(#PC+$01)).
 $7E60 DEFM "  "         ; #FONT:(  )$E0DC,attr=$47(whitespace) (whitespace).
 $7E62 DEFB $C6,$01      ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $7E64 DEFM "  "         ; #FONT:(  )$E0DC,attr=$47(whitespace) (whitespace).
 $7E66 DEFB $C6,$01      ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
@label=Messaging_Banner_Underline
 $7E68 DEFB $FB          ; {Sprite Bank:
 $7E69 DEFW $DFDC        ; #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).}
 $7E6B DEFB $FE,$42      ; Attribute: #COLOUR(#PEEK(#PC+$01)).
 $7E6D DEFB $FD,$20,$5B  ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                         ; #UDGTABLE { =h,c32 Columns } { #FOR$01,$20(n,=h #Nn, | ) }
                         ; { #FOR$01,$20(n,#UDG($E2B4,attr=$42), | ) }
                         ; UDGTABLE#
 $7E70 DEFM $FF          ; Terminator.

; Messaging: Tea Break
@label=Messaging_TeaBreak
t$7E71 DEFB $FE,$45                  ; Attribute: #COLOUR(#PEEK(#PC+$01)).
 $7E73 DEFB $CD,$0C                  ; Move cursor: #N(#PEEK(#PC)-$C8),
                                     ; #N(#PEEK(#PC+$01)).
 $7E75 DEFM "HO HUM, TIME FOR A BUN" ; #FONT:(HO HUM, TIME FOR A
                                     ; BUN)$E0DC,attr=$45(tea-break-01)
 $7E8B DEFB $B4,$04                  ; Move cursor: #N(#PEEK(#PC)-$C8),
                                     ; #N(#PEEK(#PC+$01)).
 $7E8D DEFM "MORNING TEA BREAK"      ; #FONT:(MORNING TEA
                                     ; BREAK)$E0DC,attr=$45(tea-break-02)
 $7E9E DEFB $FF                      ; Terminator.

; Messaging: Lunch Time
@label=Messaging_LunchTime
t$7E9F DEFB $FE,$43                        ; Attribute:
                                           ; #COLOUR(#PEEK(#PC+$01)).
 $7EA1 DEFB $CA,$0C                        ; Move cursor: #N(#PEEK(#PC)-$C8),
                                           ; #N(#PEEK(#PC+$01)).
 $7EA3 DEFM "RUBBA DUB DUB, TIME FOR GRUB" ; #FONT:(RUBBA DUB DUB, TIME FOR
                                           ; GRUB)$E0DC,attr=$43(lunch-time-01)
 $7EBF DEFB $B5,$04                        ; Move cursor: #N(#PEEK(#PC)-$C8),
                                           ; #N(#PEEK(#PC+$01)).
 $7EC1 DEFM "LUNCH TIME"                   ; #FONT:(LUNCH
                                           ; TIME)$E0DC,attr=$43(lunch-time-02)
 $7ECB DEFB $FF                            ; Terminator.

; Messaging: Afternoon Tea Break
@label=Messaging_AfternoonTeaBreak
t$7ECC DEFB $FE,$46                        ; Attribute:
                                           ; #COLOUR(#PEEK(#PC+$01)).
 $7ECE DEFB $CA,$0C                        ; Move cursor: #N(#PEEK(#PC)-$C8),
                                           ; #N(#PEEK(#PC+$01)).
 $7ED0 DEFM "FIDDLE DEE DEE, TIME FOR TEA" ; #FONT:(FIDDLE DEE DEE, TIME FOR
                                           ; TEA)$E0DC,attr=$46(afternoon-01)
 $7EEC DEFB $B1,$04                        ; Move cursor: #N(#PEEK(#PC)-$C8),
                                           ; #N(#PEEK(#PC+$01)).
 $7EEE DEFM "AFTERNOON TEA BREAK"          ; #FONT:(AFTERNOON TEA
                                           ; BREAK)$E0DC,attr=$46(afternoon-02)
 $7F01 DEFB $FF                            ; Terminator.

; Data block at 7F02
b$7F02 DEFB $FE,$42     ; Attribute: #COLOUR(#PEEK(#PC+$01)).
 $7F04 DEFB $FB         ; {Sprite Bank: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $7F05 DEFW $D7BC       ; }
 $7F07 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE {{
                        ; #UDG($D7BC,attr=$42) }} UDGTABLE#
 $7F08 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE {{
                        ; #UDG($D7C4,attr=$42) }} UDGTABLE#
 $7F09 DEFB $C6,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $7F0B DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE {{
                        ; #UDG($D7CC,attr=$42) }} UDGTABLE#
 $7F0C DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE {{
                        ; #UDG($D7CC,attr=$42) }} UDGTABLE#
 $7F0D DEFB $DC,$FF     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $7F0F DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE {{
                        ; #UDG($D7BC,attr=$42) }} UDGTABLE#
 $7F10 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE {{
                        ; #UDG($D7C4,attr=$42) }} UDGTABLE#
 $7F11 DEFB $C6,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $7F13 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE {{
                        ; #UDG($D7BC,attr=$42) }} UDGTABLE#
 $7F14 DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE {{
                        ; #UDG($D7C4,attr=$42) }} UDGTABLE#
 $7F15 DEFB $FF         ; Terminator.
 $7F16 DEFB $FB         ; {Sprite Bank: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $7F17 DEFW $DFDC       ; }
 $7F19 DEFB $FE,$46     ; Attribute: #COLOUR(#PEEK(#PC+$01)).
 $7F1B DEFB $FD,$04,$20 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c32 Columns } { #FOR$01,$20(n,=h #Nn, | ) }
                        ; { #FOR$01,$20(n,#UDG($DFFC,attr=$46), | ) }
                        ; UDGTABLE#
 $7F1E DEFB $FF         ; Terminator.

; Messaging: The Town Square
@label=Messaging_TownSquare
t$7F1F DEFM "THE TOWN SQUARE" ; "#STR$7F1F,$08($b==$FF)".
 $7F2E DEFB $FF               ; Terminator.

; Messaging: Stamp Street
@label=Messaging_StampStreet
t$7F2F DEFM "STAMP STREET" ; "#STR$7F2F,$08($b==$FF)".
 $7F3B DEFB $FF            ; Terminator.

; Messaging: The Post Office
@label=Messaging_PostOffice
t$7F3C DEFM "THE POST OFFICE" ; "#STR$7F3C,$08($b==$FF)".
 $7F4B DEFB $FF               ; Terminator.

; Messaging: Market Street
@label=Messaging_MarketStreet
t$7F4C DEFM "MARKET STREET" ; "#STR$7F4C,$08($b==$FF)".
 $7F59 DEFB $FF             ; Terminator.

; Messaging: The Super Market
@label=Messaging_SuperMarket
t$7F5A DEFM "THE SUPER MARKET" ; "#STR$7F5A,$08($b==$FF)".
 $7F6A DEFB $FF                ; Terminator.

; Messaging: The Park
@label=Messaging_ThePark
t$7F6B DEFM "THE PARK" ; "#STR$7F6B,$08($b==$FF)".
 $7F73 DEFB $FF        ; Terminator.

; Messaging: Wobbly Walk
@label=Messaging_WobblyWalk
t$7F74 DEFM "WOBBLY WALK" ; "#STR$7F74,$08($b==$FF)".
 $7F7F DEFB $FF           ; Terminator.

; Messaging: Rubble Road
@label=Messaging_RubbleRoad
t$7F80 DEFM "RUBBLE ROAD" ; "#STR$7F80,$08($b==$FF)".
 $7F8B DEFB $FF           ; Terminator.

; Messaging: Wall Street
@label=Messaging_WallStreet
t$7F8C DEFM "WALL STREET" ; "#STR$7F8C,$08($b==$FF)".
 $7F97 DEFB $FF           ; Terminator.

; Messaging: Pete Street
@label=Messaging_PeteStreet
t$7F98 DEFM "PETE STREET" ; "#STR$7F98,$08($b==$FF)".
 $7FA3 DEFB $FF           ; Terminator.

; Messaging: The Work Shed
@label=Messaging_WorkShed
t$7FA4 DEFM "THE WORK SHED" ; "#STR$7FA4,$08($b==$FF)".
 $7FB1 DEFB $FF             ; Terminator.

; Messaging: School Lane
@label=Messaging_SchoolLane
t$7FB2 DEFM "SCHOOL LANE" ; "#STR$7FB2,$08($b==$FF)".
 $7FBD DEFB $FF           ; Terminator.

; Messaging: The School
@label=Messaging_TheSchool
t$7FBE DEFM "THE SCHOOL" ; "#STR$7FBE,$08($b==$FF)".
 $7FC8 DEFB $FF          ; Terminator.

; Messaging: Baker Street
@label=Messaging_BakerStreet
t$7FC9 DEFM "BAKER STREET" ; "#STR$7FC9,$08($b==$FF)".
 $7FD5 DEFB $FF            ; Terminator.

; Messaging: The Bakers
@label=Messaging_TheBakers
t$7FD6 DEFM "THE BAKERS" ; "#STR$7FD6,$08($b==$FF)".
 $7FE0 DEFB $FF          ; Terminator.

; Messaging: The Pub
@label=Messaging_ThePub
t$7FE1 DEFM "THE PUB" ; "#STR$7FE1,$08($b==$FF)".
 $7FE8 DEFB $FF       ; Terminator.

; Messaging: Motor Way
@label=Messaging_MotorWay
t$7FE9 DEFM "MOTOR WAY" ; "#STR$7FE9,$08($b==$FF)".
 $7FF2 DEFB $FF         ; Terminator.

; Messaging: The Laboratory
@label=Messaging_Laboratory
t$7FF3 DEFM "THE LABORATORY" ; "#STR$7FF3,$08($b==$FF)".
 $8001 DEFB $FF              ; Terminator.

; Messaging: The Garage
@label=Messaging_TheGarage
t$8002 DEFM "THE GARAGE" ; "#STR$8002,$08($b==$FF)".
 $800C DEFB $FF          ; Terminator.

; Messaging: Reference Road
@label=Messaging_ReferenceRoad
t$800D DEFM "REFERENCE ROAD" ; "#STR$800D,$08($b==$FF)".
 $801B DEFB $FF              ; Terminator.

; Messaging: The Library
@label=Messaging_Library
t$801C DEFM "THE LIBRARY" ; "#STR$801C,$08($b==$FF)".
 $8027 DEFB $FF           ; Terminator.

; Messaging: Penny Lane
@label=Messaging_PennyLane
t$8028 DEFM "PENNY LANE" ; "#STR$8028,$08($b==$FF)".
 $8032 DEFB $FF          ; Terminator.

; Messaging: The Bank
@label=Messaging_TheBank
t$8033 DEFM "THE BANK" ; "#STR$8033,$08($b==$FF)".
 $803B DEFB $FF        ; Terminator.

; Messaging: Wally's House
@label=Messaging_WallysHouse
t$803C DEFM "WALLY'S HOUSE" ; "#STR$803C,$08($b==$FF)".
 $8049 DEFB $FF             ; Terminator.

; Messaging: Meat Street
@label=Messaging_MeatStreet
t$804A DEFM "MEAT STREET" ; "#STR$804A,$08($b==$FF)".
 $8055 DEFB $FF           ; Terminator.

; Messaging: The Butchers
@label=Messaging_Butchers
t$8056 DEFM "THE BUTCHERS" ; "#STR$8056,$08($b==$FF)".
 $8062 DEFB $FF            ; Terminator.

; Messaging: Trunk Road
@label=Messaging_TrunkRoad
t$8063 DEFM "TRUNK ROAD" ; "#STR$8063,$08($b==$FF)".
 $806D DEFB $FF          ; Terminator.

; Messaging: The Zoo
@label=Messaging_TheZoo
t$806E DEFM "THE ZOO" ; "#STR$806E,$08($b==$FF)".
 $8075 DEFB $FF       ; Terminator.

; Messaging: Rail Road
@label=Messaging_RailRoad
t$8076 DEFM "RAIL ROAD" ; "#STR$8076,$08($b==$FF)".
 $807F DEFB $FF         ; Terminator.

; Messaging: The Station
@label=Messaging_TheStation
t$8080 DEFM "THE STATION" ; "#STR$8080,$08($b==$FF)".
 $808B DEFB $FF           ; Terminator.

; Messaging: The Docks
@label=Messaging_TheDocks
t$808C DEFM "THE DOCKS" ; "#STR$808C,$08($b==$FF)".
 $8095 DEFB $FF         ; Terminator.

; Messaging: The Sewer
@label=Messaging_TheSewer
t$8096 DEFM "THE SEWER" ; "#STR$8096,$08($b==$FF)".
 $809F DEFB $FF         ; Terminator.

; Messaging: The Cave
@label=Messaging_TheCave
t$80A0 DEFM "THE CAVE" ; "#STR$80A0,$08($b==$FF)".
 $80A8 DEFB $FF        ; Terminator.

; Data block at 80A9
b$80A9 DEFB $FF,$00,$00,$00,$00,$FF,$00,$00
 $80B1 DEFB $00,$00,$FF,$00,$00,$00,$00,$FF
 $80B9 DEFB $00,$00,$00,$00,$FF,$00,$00,$00
 $80C1 DEFB $00,$FF,$00,$00,$00,$00,$FF,$00
 $80C9 DEFB $00,$00,$00,$FF,$00,$00,$00,$00
 $80D1 DEFB $FF,$00,$00,$00,$00,$FF,$00,$00
 $80D9 DEFB $00,$00,$FF,$00,$00,$00,$00,$FF
 $80E1 DEFB $00,$00,$00,$00

; Game Selection Menu
;
; Used by the routines at #R$8155 and #R$8184.
@label=GameMenu
c$80E5 CALL $B8ED    ; Call #R$B8ED.
 $80E8 CALL $B471    ; Call #R$B471.
@label=GameMenu_Loop
*$80EB LD HL,$7DC6   ; #REGhl=#R$7DC6.
 $80EE LD DE,$0003   ; #REGde=#N($0003,$04,$04).
 $80F1 CALL $B8C4    ; Call #R$B8C4.
; Set up displaying the active game option.
 $80F4 LD HL,$7E37   ; #REGhl=#R$7E37.
; Calculate the screen position of the active control method.
 $80F7 LD A,($B2DB)  ; {#REGb=#N$02-*#R$B2DB.
 $80FA LD B,A        ;
 $80FB LD A,$02      ;
 $80FD SUB B         ;
 $80FE LD B,A        ; }
; #REGd contains the vertical position.
 $80FF ADD A,A       ; {#REGd=(#REGb*#N$08)-#REGb.
 $8100 ADD A,A       ;
 $8101 ADD A,A       ;
 $8102 SUB B         ;
 $8103 LD D,A        ; }
 $8104 LD E,$03      ; #REGe=#N$03.
 $8106 CALL $B8C4    ; Call #R$B8C4.
*$8109 LD A,$FF      ; {Write #N$FF to #R$B4E9.
 $810B LD ($B4E9),A  ; }
 $810E CALL $B482    ; Call #R$B482.
 $8111 LD A,($B55F)  ;
 $8114 OR A          ;
 $8115 JR NZ,$8155   ;
 $8117 LD A,($B4E9)  ;
 $811A BIT 0,A       ; {If bit 0 is not set, jump to #R$8123.
 $811C JR NZ,$8123   ; }
 $811E CALL $B2DC    ; Call #R$B2DC.
 $8121 JR $80EB      ; Jump to #R$80EB.
@label=GameMenu_Kempston
*$8123 BIT 1,A       ; {If bit 1 is not set, jump to #R$812C.
 $8125 JR NZ,$812C   ; }
 $8127 CALL $B2E2    ; Call #R$B2E2.
 $812A JR $80EB      ; Jump to #R$80EB.
@label=GameMenu_Keyboard
*$812C BIT 2,A       ; {If bit 2 is not set, jump to #R$8135.
 $812E JR NZ,$8135   ; }
 $8130 CALL $B2E8    ; Call #R$B2E8.
 $8133 JR $80EB      ; Jump to #R$80EB.
*$8135 BIT 3,A       ; {If bit 3 is not set, jump to #R$8109.
 $8137 JR NZ,$8109   ; }
 $8139 RET           ; Return.
 $813A NOP           ;

; Routine at 813B
;
; Used by the routines at #R$8155 and #R$8184.
c$813B CALL $B952    ; Call #R$B952.
 $813E LD BC,$0014   ; #REGbc=#N($0014,$04,$04).
*$8141 PUSH BC       ; Stash #REGbc on the stack.
 $8142 CALL $EEA2    ; Call #R$EEA2.
 $8145 CALL $F578    ; Call #R$F578.
 $8148 CALL $B9D6    ; Call #R$B9D6.
 $814B CALL $B9FB    ; Call #R$B9FB.
 $814E POP BC        ; Restore #REGbc from the stack.
 $814F DEC BC        ; Decrease #REGbc by one.
 $8150 LD A,B        ; {Jump to #R$8141 until #REGbc is zero.
 $8151 OR C          ;
 $8152 JR NZ,$8141   ; }
 $8154 RET           ; Return.

; Start Demo Mode
;
; Used by the routine at #R$80E5.
@label=Demo_Start
c$8155 CALL $BAD8    ; Call #R$BAD8.
 $8158 CALL $B8ED    ; Call #R$B8ED.
 $815B CALL $E3FD    ; Call #R$E3FD.
 $815E CALL $813B    ; Call #R$813B.
 $8161 LD ($813A),A  ; Write #REGa to #R$813A.
*$8164 LD A,($813A)  ; #REGa=*#R$813A.
 $8167 CP (IY+$0F)   ; {If #REGiy+#N$0F is zero, jump to #R$8175.
 $816A JR Z,$8175    ; }
 $816C LD A,(IY+$0F) ; {Write #REGiy+#N$0F to #R$813A.
 $816F LD ($813A),A  ; }
 $8172 CALL $B952    ; Call #R$B952.
*$8175 CALL $81AE    ; Call #R$81AE.
 $8178 XOR A         ; #REGa=#N$00.
 $8179 IN A,($FE)    ;
 $817B OR %11100000  ; Set bits 5-7.
 $817D CP $FF        ; {Jump to #R$80E5 if not #N$FF.
 $817F JP NZ,$80E5   ; }
 $8182 JR $8164      ; Jump to #R$8164.

; Game Loop
;
; Used by the routines at #R$5B80, #R$B3BE and #R$B451.
@label=GameLoop
c$8184 DI            ; Disable interrupts.
 $8185 LD SP,$FC00   ; Set the stack pointer to #R$FC00.
 $8188 CALL $80E5    ; Call #R$80E5.
 $818B CALL $BAD8    ; Call #R$BAD8.
 $818E CALL $E3FD    ; Call #R$E3FD.
 $8191 CALL $813B    ; Call #R$813B.
; This entry point is used by the routine at #R$ED2A.
@label=Game_Running_Loop
*$8194 CALL $EB55    ; Call #R$EB55.
 $8197 CALL $EABF    ; Call #R$EABF.
 $819A CALL $AC06    ; Call #R$AC06.
 $819D CALL $E79B    ; Call #R$E79B.
 $81A0 CALL $B09F    ; Call #R$B09F.
 $81A3 CALL $81AE    ; Call #R$81AE.
 $81A6 CALL $81C4    ; Call #R$81C4.
 $81A9 CALL $ED2A    ; Call #R$ED2A.
 $81AC JR $8194      ; Jump to #R$8194.

; Routine at 81AE
;
; Used by the routines at #R$8155, #R$8184 and #R$EFC7.
c$81AE CALL $BAB4    ; Call #R$BAB4.
 $81B1 CALL $A92C    ; Call #R$A92C.
 $81B4 CALL $EEC1    ; Call #R$EEC1.
 $81B7 CALL $F10E    ; Call #R$F10E.
 $81BA CALL $F814    ; Call #R$F814.
 $81BD CALL $F277    ; Call #R$F277.
 $81C0 CALL $B9D6    ; Call #R$B9D6.
 $81C3 RET           ; Return.

; Routine at 81C4
;
; Used by the routine at #R$8184.
c$81C4 LD A,$FE      ;
 $81C6 IN A,($FE)    ;
 $81C8 LD B,A        ;
 $81C9 LD A,$7F      ;
 $81CB IN A,($FE)    ;
 $81CD OR B          ;
 $81CE BIT 0,A       ;
 $81D0 RET NZ        ;
 $81D1 JP $81C4      ; Jump to #R$81C4.

; Routine at 81D4
;
; Used by the routines at #R$B1A6 and #R$EFC7.
c$81D4 EXX           ;
 $81D5 XOR $01       ;
 $81D7 LD (IY-$3C),A ;
 $81DA LD E,(IY+$23) ;
 $81DD LD D,(IY+$28) ;
 $81E0 LD BC,$0400   ;
; This entry point is used by the routine at #R$EFC7.
*$81E3 LD A,(DE)     ;
 $81E4 EX AF,AF'     ;
 $81E5 INC DE        ;
 $81E6 LD A,(DE)     ;
 $81E7 DEC DE        ;
 $81E8 LD L,A        ;
 $81E9 LD H,$7B      ;
 $81EB LDI           ;
 $81ED EX AF,AF'     ;
 $81EE LD H,$7B      ;
 $81F0 LD L,A        ;
 $81F1 LDI           ;
 $81F3 JP PE,$81E3   ;
 $81F6 EXX           ;
 $81F7 RET           ;

; Screen Buffer Locations
@label=ScreenBuffer_Locations
b$81F8 DEFW $4000
 $81FA DEFW $4100
 $81FC DEFW $4200
 $81FE DEFW $4300
 $8200 DEFW $4400
 $8202 DEFW $4500
 $8204 DEFW $4600
 $8206 DEFW $4700
 $8208 DEFW $4020
 $820A DEFW $4120
 $820C DEFW $4220
 $820E DEFW $4320
 $8210 DEFW $4420
 $8212 DEFW $4520
 $8214 DEFW $4620
 $8216 DEFW $4720
 $8218 DEFW $4040
 $821A DEFW $4140
 $821C DEFW $4240
 $821E DEFW $4340
 $8220 DEFW $4440
 $8222 DEFW $4540
 $8224 DEFW $4640
 $8226 DEFW $4740
 $8228 DEFW $4060
 $822A DEFW $4160
 $822C DEFW $4260
 $822E DEFW $4360
 $8230 DEFW $4460
 $8232 DEFW $4560
 $8234 DEFW $4660
 $8236 DEFW $4760
 $8238 DEFW $4080
 $823A DEFW $4180
 $823C DEFW $4280
 $823E DEFW $4380
 $8240 DEFW $4480
 $8242 DEFW $4580
 $8244 DEFW $4680
 $8246 DEFW $4780
 $8248 DEFW $40A0
 $824A DEFW $41A0
 $824C DEFW $42A0
 $824E DEFW $43A0
 $8250 DEFW $44A0
 $8252 DEFW $45A0
 $8254 DEFW $46A0
 $8256 DEFW $47A0
 $8258 DEFW $40C0
 $825A DEFW $41C0
 $825C DEFW $42C0
 $825E DEFW $43C0
 $8260 DEFW $44C0
 $8262 DEFW $45C0
 $8264 DEFW $46C0
 $8266 DEFW $47C0
 $8268 DEFW $40E0
 $826A DEFW $41E0
 $826C DEFW $42E0
 $826E DEFW $43E0
 $8270 DEFW $44E0
 $8272 DEFW $45E0
 $8274 DEFW $46E0
 $8276 DEFW $47E0
 $8278 DEFW $4800
 $827A DEFW $4900
 $827C DEFW $4A00
 $827E DEFW $4B00
 $8280 DEFW $4C00
 $8282 DEFW $4D00
 $8284 DEFW $4E00
 $8286 DEFW $4F00
 $8288 DEFW $4820
 $828A DEFW $4920
 $828C DEFW $4A20
 $828E DEFW $4B20
 $8290 DEFW $4C20
 $8292 DEFW $4D20
 $8294 DEFW $4E20
 $8296 DEFW $4F20
 $8298 DEFW $4840
 $829A DEFW $4940
 $829C DEFW $4A40
 $829E DEFW $4B40
 $82A0 DEFW $4C40
 $82A2 DEFW $4D40
 $82A4 DEFW $4E40
 $82A6 DEFW $4F40
 $82A8 DEFW $4860
 $82AA DEFW $4960
 $82AC DEFW $4A60
 $82AE DEFW $4B60
 $82B0 DEFW $4C60
 $82B2 DEFW $4D60
 $82B4 DEFW $4E60
 $82B6 DEFW $4F60
 $82B8 DEFW $4880
 $82BA DEFW $4980
 $82BC DEFW $4A80
 $82BE DEFW $4B80
 $82C0 DEFW $4C80
 $82C2 DEFW $4D80
 $82C4 DEFW $4E80
 $82C6 DEFW $4F80
 $82C8 DEFW $48A0
 $82CA DEFW $49A0
 $82CC DEFW $4AA0
 $82CE DEFW $4BA0
 $82D0 DEFW $4CA0
 $82D2 DEFW $4DA0
 $82D4 DEFW $4EA0
 $82D6 DEFW $4FA0
 $82D8 DEFW $48C0
 $82DA DEFW $49C0
 $82DC DEFW $4AC0
 $82DE DEFW $4BC0
 $82E0 DEFW $4CC0
 $82E2 DEFW $4DC0
 $82E4 DEFW $4EC0
 $82E6 DEFW $4FC0
 $82E8 DEFW $48E0
 $82EA DEFW $49E0
 $82EC DEFW $4AE0
 $82EE DEFW $4BE0
 $82F0 DEFW $4CE0
 $82F2 DEFW $4DE0
 $82F4 DEFW $4EE0
 $82F6 DEFW $4FE0
 $82F8 DEFW $5000
 $82FA DEFW $5100
 $82FC DEFW $5200
 $82FE DEFW $5300
 $8300 DEFW $5400
 $8302 DEFW $5500
 $8304 DEFW $5600
 $8306 DEFW $5700
 $8308 DEFW $5020
 $830A DEFW $5120
 $830C DEFW $5220
 $830E DEFW $5320
 $8310 DEFW $5420
 $8312 DEFW $5520
 $8314 DEFW $5620
 $8316 DEFW $5720
 $8318 DEFW $5040
 $831A DEFW $5140
 $831C DEFW $5240
 $831E DEFW $5340
 $8320 DEFW $5440
 $8322 DEFW $5540
 $8324 DEFW $5640
 $8326 DEFW $5740
 $8328 DEFW $5060
 $832A DEFW $5160
 $832C DEFW $5260
 $832E DEFW $5360
 $8330 DEFW $5460
 $8332 DEFW $5560
 $8334 DEFW $5660
 $8336 DEFW $5760
 $8338 DEFW $5080
 $833A DEFW $5180
 $833C DEFW $5280
 $833E DEFW $5380
 $8340 DEFW $5480
 $8342 DEFW $5580
 $8344 DEFW $5680
 $8346 DEFW $5780
 $8348 DEFW $50A0
 $834A DEFW $51A0
 $834C DEFW $52A0
 $834E DEFW $53A0
 $8350 DEFW $54A0
 $8352 DEFW $55A0
 $8354 DEFW $56A0
 $8356 DEFW $57A0
 $8358 DEFW $50C0
 $835A DEFW $51C0
 $835C DEFW $52C0
 $835E DEFW $53C0
 $8360 DEFW $54C0
 $8362 DEFW $55C0
 $8364 DEFW $56C0
 $8366 DEFW $57C0
 $8368 DEFW $50E0
 $836A DEFW $51E0
 $836C DEFW $52E0
 $836E DEFW $53E0
 $8370 DEFW $54E0
 $8372 DEFW $55E0
 $8374 DEFW $56E0
 $8376 DEFW $57E0

; Graphics: Items
;
; .
;
; .
;
; Item: The Plunger.
@label=Graphics_Items
b$8378 DEFB $01,$80  ; {#ITEM(#PC)(item-the-plunger.png)
 $837A DEFB $01,$80  ;
 $837C DEFB $01,$80  ;
 $837E DEFB $01,$80  ;
 $8380 DEFB $01,$80  ;
 $8382 DEFB $01,$80  ;
 $8384 DEFB $01,$80  ;
 $8386 DEFB $01,$80  ;
 $8388 DEFB $01,$80  ;
 $838A DEFB $01,$80  ;
 $838C DEFB $00,$00  ;
 $838E DEFB $03,$C0  ;
 $8390 DEFB $0D,$F0  ;
 $8392 DEFB $13,$F8  ;
 $8394 DEFB $17,$F8  ;
 $8396 DEFB $3F,$FC  ; }
; Item: The Letter A.
 $8398 DEFB $03,$C0  ; {#ITEM(#PC)(item-the-letter-a.png)
 $839A DEFB $03,$C0  ;
 $839C DEFB $03,$C0  ;
 $839E DEFB $07,$E0  ;
 $83A0 DEFB $06,$60  ;
 $83A2 DEFB $06,$60  ;
 $83A4 DEFB $0E,$70  ;
 $83A6 DEFB $0C,$30  ;
 $83A8 DEFB $0C,$30  ;
 $83AA DEFB $1C,$38  ;
 $83AC DEFB $1F,$F8  ;
 $83AE DEFB $1F,$F8  ;
 $83B0 DEFB $38,$1C  ;
 $83B2 DEFB $30,$0C  ;
 $83B4 DEFB $78,$1E  ;
 $83B6 DEFB $FC,$3F  ; }
; Item: Book Two.
 $83B8 DEFB $6F,$EF  ; {#ITEM(#PC)(item-book-two.png)
 $83BA DEFB $6F,$F7  ;
 $83BC DEFB $2F,$FB  ;
 $83BE DEFB $2F,$FD  ;
 $83C0 DEFB $6E,$1E  ;
 $83C2 DEFB $6C,$CF  ;
 $83C4 DEFB $2F,$CF  ;
 $83C6 DEFB $6F,$9F  ;
 $83C8 DEFB $6F,$3F  ;
 $83CA DEFB $6E,$7F  ;
 $83CC DEFB $6C,$FF  ;
 $83CE DEFB $2C,$0E  ;
 $83D0 DEFB $2F,$FD  ;
 $83D2 DEFB $2F,$FB  ;
 $83D4 DEFB $6F,$F7  ;
 $83D6 DEFB $6F,$EF  ; }
; Item: The Sand.
 $83D8 DEFB $00,$00  ; {#ITEM(#PC)(item-the-sand.png)
 $83DA DEFB $00,$00  ;
 $83DC DEFB $00,$00  ;
 $83DE DEFB $00,$00  ;
 $83E0 DEFB $00,$00  ;
 $83E2 DEFB $00,$00  ;
 $83E4 DEFB $00,$00  ;
 $83E6 DEFB $00,$00  ;
 $83E8 DEFB $00,$00  ;
 $83EA DEFB $03,$00  ;
 $83EC DEFB $06,$80  ;
 $83EE DEFB $0D,$40  ;
 $83F0 DEFB $1A,$A0  ;
 $83F2 DEFB $3D,$50  ;
 $83F4 DEFB $7A,$A8  ;
 $83F6 DEFB $FD,$54  ; }
; Item: The Battery.
 $83F8 DEFB $00,$00  ; {#ITEM(#PC)(item-the-battery.png)
 $83FA DEFB $38,$1C  ;
 $83FC DEFB $39,$9C  ;
 $83FE DEFB $00,$00  ;
 $8400 DEFB $BF,$FF  ;
 $8402 DEFB $BF,$FF  ;
 $8404 DEFB $00,$00  ;
 $8406 DEFB $7F,$FE  ;
 $8408 DEFB $7D,$BE  ;
 $840A DEFB $6F,$FE  ;
 $840C DEFB $45,$A2  ;
 $840E DEFB $6F,$FE  ;
 $8410 DEFB $7D,$BE  ;
 $8412 DEFB $7F,$FE  ;
 $8414 DEFB $7D,$BE  ;
 $8416 DEFB $00,$00  ; }
; Item: The Letter K.
 $8418 DEFB $7E,$7E  ; {#ITEM(#PC)(item-the-letter-k.png)
 $841A DEFB $3C,$38  ;
 $841C DEFB $18,$70  ;
 $841E DEFB $18,$E0  ;
 $8420 DEFB $19,$C0  ;
 $8422 DEFB $1B,$80  ;
 $8424 DEFB $1F,$00  ;
 $8426 DEFB $1E,$00  ;
 $8428 DEFB $1F,$00  ;
 $842A DEFB $1B,$80  ;
 $842C DEFB $19,$C0  ;
 $842E DEFB $18,$E0  ;
 $8430 DEFB $18,$70  ;
 $8432 DEFB $18,$38  ;
 $8434 DEFB $3C,$1C  ;
 $8436 DEFB $7E,$3F  ; }
; Item: The Cement.
 $8438 DEFB $00,$00  ; {#ITEM(#PC)(item-the-cement.png)
 $843A DEFB $00,$00  ;
 $843C DEFB $00,$00  ;
 $843E DEFB $00,$00  ;
 $8440 DEFB $00,$00  ;
 $8442 DEFB $00,$00  ;
 $8444 DEFB $00,$00  ;
 $8446 DEFB $00,$00  ;
 $8448 DEFB $00,$00  ;
 $844A DEFB $00,$E0  ;
 $844C DEFB $03,$10  ;
 $844E DEFB $04,$E8  ;
 $8450 DEFB $0E,$D4  ;
 $8452 DEFB $17,$2A  ;
 $8454 DEFB $29,$F6  ;
 $8456 DEFB $76,$8D  ; }
; Item: Book Three.
 $8458 DEFB $6F,$EF  ; {#ITEM(#PC)(item-book-three.png)
 $845A DEFB $6F,$F7  ;
 $845C DEFB $2F,$FB  ;
 $845E DEFB $2F,$FD  ;
 $8460 DEFB $6E,$1E  ;
 $8462 DEFB $6C,$CF  ;
 $8464 DEFB $2F,$CF  ;
 $8466 DEFB $6F,$CF  ;
 $8468 DEFB $6F,$1F  ;
 $846A DEFB $6F,$CF  ;
 $846C DEFB $6F,$CF  ;
 $846E DEFB $2C,$CE  ;
 $8470 DEFB $2E,$1D  ;
 $8472 DEFB $2F,$FB  ;
 $8474 DEFB $6F,$F7  ;
 $8476 DEFB $6F,$EF  ; }
; Item: The Trowel.
 $8478 DEFB $00,$80  ; {#ITEM(#PC)(item-the-trowel.png)
 $847A DEFB $00,$80  ;
 $847C DEFB $01,$40  ;
 $847E DEFB $01,$40  ;
 $8480 DEFB $02,$E0  ;
 $8482 DEFB $02,$E0  ;
 $8484 DEFB $05,$F0  ;
 $8486 DEFB $05,$F0  ;
 $8488 DEFB $0B,$78  ;
 $848A DEFB $04,$B0  ;
 $848C DEFB $02,$A0  ;
 $848E DEFB $00,$80  ;
 $8490 DEFB $01,$C0  ;
 $8492 DEFB $01,$C0  ;
 $8494 DEFB $01,$C0  ;
 $8496 DEFB $01,$C0  ; }
; Item: The Matches.
 $8498 DEFB $1F,$FC  ; {#ITEM(#PC)(item-the-matches.png)
 $849A DEFB $10,$04  ;
 $849C DEFB $15,$54  ;
 $849E DEFB $15,$54  ;
 $84A0 DEFB $15,$54  ;
 $84A2 DEFB $10,$04  ;
 $84A4 DEFB $1F,$FC  ;
 $84A6 DEFB $18,$0C  ;
 $84A8 DEFB $17,$F4  ;
 $84AA DEFB $17,$74  ;
 $84AC DEFB $16,$34  ;
 $84AE DEFB $16,$B4  ;
 $84B0 DEFB $16,$B4  ;
 $84B2 DEFB $17,$74  ;
 $84B4 DEFB $18,$0C  ;
 $84B6 DEFB $1F,$FC  ; }
; Item: The Cracked Insulator.
 $84B8 DEFB $00,$00  ; {#ITEM(#PC)(item-the-cracked-insulator.png)
 $84BA DEFB $00,$00  ;
 $84BC DEFB $41,$04  ;
 $84BE DEFB $E3,$8E  ;
 $84C0 DEFB $E3,$8A  ;
 $84C2 DEFB $F3,$C7  ;
 $84C4 DEFB $FB,$EF  ;
 $84C6 DEFB $FB,$EF  ;
 $84C8 DEFB $C1,$EF  ;
 $84CA DEFB $98,$E9  ;
 $84CC DEFB $32,$47  ;
 $84CE DEFB $63,$8E  ;
 $84D0 DEFB $E3,$8E  ;
 $84D2 DEFB $41,$04  ;
 $84D4 DEFB $00,$00  ;
 $84D6 DEFB $00,$00  ; }
; Item: Book One.
 $84D8 DEFB $6F,$EF  ; {#ITEM(#PC)(item-book-one.png)
 $84DA DEFB $6F,$F7  ;
 $84DC DEFB $2F,$FB  ;
 $84DE DEFB $2F,$FD  ;
 $84E0 DEFB $6F,$9E  ;
 $84E2 DEFB $6F,$1F  ;
 $84E4 DEFB $2F,$9F  ;
 $84E6 DEFB $6F,$9F  ;
 $84E8 DEFB $6F,$9F  ;
 $84EA DEFB $6F,$9F  ;
 $84EC DEFB $6F,$9F  ;
 $84EE DEFB $2F,$0E  ;
 $84F0 DEFB $2F,$FD  ;
 $84F2 DEFB $2F,$FB  ;
 $84F4 DEFB $6F,$F7  ;
 $84F6 DEFB $6F,$EF  ; }
; Item: The Monkey Nuts.
 $84F8 DEFB $00,$00  ; {#ITEM(#PC)(item-the-monkey-nuts.png)
 $84FA DEFB $00,$00  ;
 $84FC DEFB $00,$00  ;
 $84FE DEFB $00,$00  ;
 $8500 DEFB $00,$00  ;
 $8502 DEFB $1C,$E0  ;
 $8504 DEFB $3F,$F0  ;
 $8506 DEFB $1C,$E2  ;
 $8508 DEFB $00,$07  ;
 $850A DEFB $0E,$E7  ;
 $850C DEFB $1F,$F7  ;
 $850E DEFB $0E,$E2  ;
 $8510 DEFB $00,$07  ;
 $8512 DEFB $1D,$C7  ;
 $8514 DEFB $3F,$E7  ;
 $8516 DEFB $1D,$C2  ; }
; Item: The Money.
 $8518 DEFB $00,$00  ; {#ITEM(#PC)(item-the-money.png)
 $851A DEFB $00,$00  ;
 $851C DEFB $00,$00  ;
 $851E DEFB $00,$00  ;
 $8520 DEFB $00,$00  ;
 $8522 DEFB $FF,$FF  ;
 $8524 DEFB $FF,$D5  ;
 $8526 DEFB $FF,$85  ;
 $8528 DEFB $DD,$D3  ;
 $852A DEFB $A9,$83  ;
 $852C DEFB $BD,$C3  ;
 $852E DEFB $9D,$D7  ;
 $8530 DEFB $BD,$B3  ;
 $8532 DEFB $88,$83  ;
 $8534 DEFB $FF,$FF  ;
 $8536 DEFB $00,$00  ; }
; Item: Superglue.
 $8538 DEFB $00,$80  ; {#ITEM(#PC)(item-superglue.png)
 $853A DEFB $00,$80  ;
 $853C DEFB $00,$80  ;
 $853E DEFB $00,$00  ;
 $8540 DEFB $01,$C0  ;
 $8542 DEFB $01,$C0  ;
 $8544 DEFB $00,$00  ;
 $8546 DEFB $07,$F0  ;
 $8548 DEFB $06,$30  ;
 $854A DEFB $04,$90  ;
 $854C DEFB $04,$F0  ;
 $854E DEFB $06,$30  ;
 $8550 DEFB $07,$90  ;
 $8552 DEFB $04,$90  ;
 $8554 DEFB $06,$30  ;
 $8556 DEFB $07,$F0  ; }
; Item: The Chewing Gum.
 $8558 DEFB $00,$00  ; {#ITEM(#PC)(item-the-chewing-gum.png)
 $855A DEFB $00,$00  ;
 $855C DEFB $00,$00  ;
 $855E DEFB $00,$00  ;
 $8560 DEFB $00,$00  ;
 $8562 DEFB $00,$00  ;
 $8564 DEFB $00,$00  ;
 $8566 DEFB $00,$00  ;
 $8568 DEFB $FF,$DF  ;
 $856A DEFB $FD,$C0  ;
 $856C DEFB $FE,$D8  ;
 $856E DEFB $80,$40  ;
 $8570 DEFB $FE,$D8  ;
 $8572 DEFB $FD,$C0  ;
 $8574 DEFB $FF,$D8  ;
 $8576 DEFB $00,$00  ; }
; Item: The Bucket.
 $8578 DEFB $00,$00  ; {#ITEM(#PC)(item-the-bucket.png)
 $857A DEFB $5F,$FE  ;
 $857C DEFB $5F,$FE  ;
 $857E DEFB $00,$00  ;
 $8580 DEFB $2B,$7C  ;
 $8582 DEFB $2B,$7C  ;
 $8584 DEFB $2C,$7C  ;
 $8586 DEFB $2E,$3C  ;
 $8588 DEFB $17,$18  ;
 $858A DEFB $17,$88  ;
 $858C DEFB $17,$C0  ;
 $858E DEFB $17,$E6  ;
 $8590 DEFB $17,$F6  ;
 $8592 DEFB $00,$00  ;
 $8594 DEFB $17,$F8  ;
 $8596 DEFB $17,$F8  ; }
; Item: The Jump Leads.
 $8598 DEFB $00,$00  ; {#ITEM(#PC)(item-the-jump-leads.png)
 $859A DEFB $00,$00  ;
 $859C DEFB $00,$00  ;
 $859E DEFB $00,$00  ;
 $85A0 DEFB $00,$00  ;
 $85A2 DEFB $00,$00  ;
 $85A4 DEFB $03,$00  ;
 $85A6 DEFB $44,$9C  ;
 $85A8 DEFB $64,$A2  ;
 $85AA DEFB $38,$02  ;
 $85AC DEFB $FB,$FC  ;
 $85AE DEFB $00,$00  ;
 $85B0 DEFB $44,$AC  ;
 $85B2 DEFB $74,$A2  ;
 $85B4 DEFB $18,$A2  ;
 $85B6 DEFB $FB,$1C  ; }
; Item: The Bunsen Burner.
 $85B8 DEFB $00,$E0  ; {#ITEM(#PC)(item-the-bunsen-burner.png)
 $85BA DEFB $00,$A0  ;
 $85BC DEFB $00,$A0  ;
 $85BE DEFB $00,$A0  ;
 $85C0 DEFB $00,$A0  ;
 $85C2 DEFB $00,$A0  ;
 $85C4 DEFB $00,$A0  ;
 $85C6 DEFB $00,$E0  ;
 $85C8 DEFB $00,$00  ;
 $85CA DEFB $00,$E0  ;
 $85CC DEFB $0E,$C0  ;
 $85CE DEFB $3E,$E0  ;
 $85D0 DEFB $70,$00  ;
 $85D2 DEFB $63,$F8  ;
 $85D4 DEFB $C4,$FC  ;
 $85D6 DEFB $D9,$FF  ; }
; Item: The Letter B.
 $85D8 DEFB $7F,$F0  ; {#ITEM(#PC)(item-the-letter-b.png)
 $85DA DEFB $3F,$F8  ;
 $85DC DEFB $18,$1C  ;
 $85DE DEFB $18,$0C  ;
 $85E0 DEFB $18,$0C  ;
 $85E2 DEFB $18,$0C  ;
 $85E4 DEFB $18,$1C  ;
 $85E6 DEFB $1F,$F8  ;
 $85E8 DEFB $1F,$FC  ;
 $85EA DEFB $18,$0E  ;
 $85EC DEFB $18,$06  ;
 $85EE DEFB $18,$06  ;
 $85F0 DEFB $18,$06  ;
 $85F2 DEFB $18,$0E  ;
 $85F4 DEFB $3F,$FC  ;
 $85F6 DEFB $7F,$F8  ; }
; Item: Gas Mask.
 $85F8 DEFB $00,$00  ; {#ITEM(#PC)(item-gas-mask.png)
 $85FA DEFB $00,$00  ;
 $85FC DEFB $00,$00  ;
 $85FE DEFB $1C,$1C  ;
 $8600 DEFB $22,$22  ;
 $8602 DEFB $5D,$5D  ;
 $8604 DEFB $5D,$5D  ;
 $8606 DEFB $5D,$5D  ;
 $8608 DEFB $2E,$3A  ;
 $860A DEFB $2D,$DA  ;
 $860C DEFB $53,$65  ;
 $860E DEFB $56,$B5  ;
 $8610 DEFB $05,$50  ;
 $8612 DEFB $06,$B0  ;
 $8614 DEFB $03,$60  ;
 $8616 DEFB $01,$C0  ; }
; Item: The Parcel.
 $8618 DEFB $01,$40  ; {#ITEM(#PC)(item-the-parcel.png)
 $861A DEFB $03,$60  ;
 $861C DEFB $07,$F0  ;
 $861E DEFB $01,$80  ;
 $8620 DEFB $FE,$7F  ;
 $8622 DEFB $FE,$7F  ;
 $8624 DEFB $82,$41  ;
 $8626 DEFB $7E,$7E  ;
 $8628 DEFB $AA,$55  ;
 $862A DEFB $D6,$6B  ;
 $862C DEFB $AA,$55  ;
 $862E DEFB $01,$00  ;
 $8630 DEFB $00,$80  ;
 $8632 DEFB $AA,$55  ;
 $8634 DEFB $D6,$6B  ;
 $8636 DEFB $FE,$7F  ; }
; Item: The Fuse.
 $8638 DEFB $00,$00  ; {#ITEM(#PC)(item-the-fuse.png)
 $863A DEFB $00,$00  ;
 $863C DEFB $00,$00  ;
 $863E DEFB $00,$00  ;
 $8640 DEFB $00,$00  ;
 $8642 DEFB $00,$00  ;
 $8644 DEFB $00,$00  ;
 $8646 DEFB $E0,$07  ;
 $8648 DEFB $0F,$F0  ;
 $864A DEFB $E0,$07  ;
 $864C DEFB $EF,$F7  ;
 $864E DEFB $EF,$F7  ;
 $8650 DEFB $E0,$07  ;
 $8652 DEFB $00,$00  ;
 $8654 DEFB $00,$00  ;
 $8656 DEFB $00,$00  ; }
; Item: The Meat.
 $8658 DEFB $00,$00  ; {#ITEM(#PC)(item-the-meat.png)
 $865A DEFB $00,$00  ;
 $865C DEFB $00,$00  ;
 $865E DEFB $00,$00  ;
 $8660 DEFB $00,$38  ;
 $8662 DEFB $1C,$C4  ;
 $8664 DEFB $23,$3A  ;
 $8666 DEFB $5C,$FD  ;
 $8668 DEFB $5F,$FD  ;
 $866A DEFB $B3,$FD  ;
 $866C DEFB $B3,$FA  ;
 $866E DEFB $BF,$F2  ;
 $8670 DEFB $5F,$0C  ;
 $8672 DEFB $20,$F0  ;
 $8674 DEFB $1F,$00  ;
 $8676 DEFB $00,$00  ; }
; Item: The Monkey Wrench.
 $8678 DEFB $3F,$E0  ; {#ITEM(#PC)(item-the-monkey-wrench.png)
 $867A DEFB $3F,$E0  ;
 $867C DEFB $2A,$E0  ;
 $867E DEFB $00,$E0  ;
 $8680 DEFB $00,$E0  ;
 $8682 DEFB $2A,$00  ;
 $8684 DEFB $3F,$F0  ;
 $8686 DEFB $1F,$10  ;
 $8688 DEFB $07,$B0  ;
 $868A DEFB $03,$10  ;
 $868C DEFB $03,$F0  ;
 $868E DEFB $01,$F0  ;
 $8690 DEFB $01,$F0  ;
 $8692 DEFB $00,$00  ;
 $8694 DEFB $00,$E0  ;
 $8696 DEFB $00,$E0  ; }
; Item: Screwdriver.
 $8698 DEFB $00,$00  ; {#ITEM(#PC)(item-screwdriver.png)
 $869A DEFB $00,$02  ;
 $869C DEFB $00,$07  ;
 $869E DEFB $00,$06  ;
 $86A0 DEFB $00,$08  ;
 $86A2 DEFB $00,$30  ;
 $86A4 DEFB $00,$70  ;
 $86A6 DEFB $00,$E0  ;
 $86A8 DEFB $07,$C0  ;
 $86AA DEFB $0A,$80  ;
 $86AC DEFB $14,$80  ;
 $86AE DEFB $29,$00  ;
 $86B0 DEFB $52,$00  ;
 $86B2 DEFB $74,$00  ;
 $86B4 DEFB $58,$00  ;
 $86B6 DEFB $30,$00  ; }
; Item: The Letter E.
 $86B8 DEFB $7F,$FE  ; {#ITEM(#PC)(item-the-letter-e.png)
 $86BA DEFB $3F,$FE  ;
 $86BC DEFB $18,$06  ;
 $86BE DEFB $18,$02  ;
 $86C0 DEFB $18,$00  ;
 $86C2 DEFB $18,$20  ;
 $86C4 DEFB $18,$60  ;
 $86C6 DEFB $1F,$E0  ;
 $86C8 DEFB $1F,$E0  ;
 $86CA DEFB $18,$60  ;
 $86CC DEFB $18,$20  ;
 $86CE DEFB $18,$00  ;
 $86D0 DEFB $18,$02  ;
 $86D2 DEFB $18,$06  ;
 $86D4 DEFB $3F,$FE  ;
 $86D6 DEFB $7F,$FE  ; }
; Item: The Hook.
 $86D8 DEFB $03,$C0  ; {#ITEM(#PC)(item-the-hook.png)
 $86DA DEFB $00,$00  ;
 $86DC DEFB $01,$80  ;
 $86DE DEFB $01,$80  ;
 $86E0 DEFB $01,$C0  ;
 $86E2 DEFB $00,$E0  ;
 $86E4 DEFB $00,$70  ;
 $86E6 DEFB $08,$30  ;
 $86E8 DEFB $18,$30  ;
 $86EA DEFB $18,$30  ;
 $86EC DEFB $1C,$70  ;
 $86EE DEFB $0F,$E0  ;
 $86F0 DEFB $03,$80  ;
 $86F2 DEFB $00,$00  ;
 $86F4 DEFB $00,$00  ;
 $86F6 DEFB $00,$00  ; }
; Item: The Patch.
 $86F8 DEFB $07,$C0  ; {#ITEM(#PC)(item-the-patch.png)
 $86FA DEFB $1F,$F0  ;
 $86FC DEFB $3F,$F8  ;
 $86FE DEFB $7F,$FC  ;
 $8700 DEFB $7D,$7C  ;
 $8702 DEFB $FA,$BE  ;
 $8704 DEFB $F5,$5E  ;
 $8706 DEFB $FA,$BE  ;
 $8708 DEFB $F5,$5E  ;
 $870A DEFB $FA,$BE  ;
 $870C DEFB $7D,$7C  ;
 $870E DEFB $7F,$FC  ;
 $8710 DEFB $3F,$F8  ;
 $8712 DEFB $1F,$F0  ;
 $8714 DEFB $07,$C0  ;
 $8716 DEFB $00,$00  ; }
; Item: The Pipe.
 $8718 DEFB $00,$00  ; {#ITEM(#PC)(item-the-pipe.png)
 $871A DEFB $00,$00  ;
 $871C DEFB $00,$00  ;
 $871E DEFB $00,$00  ;
 $8720 DEFB $00,$00  ;
 $8722 DEFB $00,$00  ;
 $8724 DEFB $00,$00  ;
 $8726 DEFB $00,$00  ;
 $8728 DEFB $00,$00  ;
 $872A DEFB $7F,$F6  ;
 $872C DEFB $80,$09  ;
 $872E DEFB $FF,$E9  ;
 $8730 DEFB $FF,$E9  ;
 $8732 DEFB $7F,$F6  ;
 $8734 DEFB $00,$00  ;
 $8736 DEFB $00,$00  ; }
; Item: The Letter R.
 $8738 DEFB $7F,$F0  ; {#ITEM(#PC)(item-the-letter-r.png)
 $873A DEFB $3F,$F8  ;
 $873C DEFB $18,$1C  ;
 $873E DEFB $18,$0C  ;
 $8740 DEFB $18,$0C  ;
 $8742 DEFB $18,$0C  ;
 $8744 DEFB $18,$1C  ;
 $8746 DEFB $1F,$F8  ;
 $8748 DEFB $1F,$F0  ;
 $874A DEFB $18,$60  ;
 $874C DEFB $18,$70  ;
 $874E DEFB $18,$30  ;
 $8750 DEFB $18,$38  ;
 $8752 DEFB $18,$18  ;
 $8754 DEFB $3C,$1C  ;
 $8756 DEFB $7E,$3F  ; }
; Item: The Oil Can.
 $8758 DEFB $00,$00  ; {#ITEM(#PC)(item-the-oil-can.png)
 $875A DEFB $00,$00  ;
 $875C DEFB $00,$00  ;
 $875E DEFB $00,$00  ;
 $8760 DEFB $00,$00  ;
 $8762 DEFB $00,$00  ;
 $8764 DEFB $00,$00  ;
 $8766 DEFB $78,$03  ;
 $8768 DEFB $08,$0C  ;
 $876A DEFB $3C,$30  ;
 $876C DEFB $01,$E0  ;
 $876E DEFB $DD,$80  ;
 $8770 DEFB $BD,$00  ;
 $8772 DEFB $BE,$00  ;
 $8774 DEFB $BE,$00  ;
 $8776 DEFB $DE,$00  ; }
; Item: The Fuse Wire.
 $8778 DEFB $00,$00  ; {#ITEM(#PC)(item-the-fuse-wire.png)
 $877A DEFB $3F,$FC  ;
 $877C DEFB $7F,$FE  ;
 $877E DEFB $7F,$FE  ;
 $8780 DEFB $3F,$FC  ;
 $8782 DEFB $20,$04  ;
 $8784 DEFB $1F,$F8  ;
 $8786 DEFB $20,$04  ;
 $8788 DEFB $1F,$F8  ;
 $878A DEFB $20,$04  ;
 $878C DEFB $1F,$F8  ;
 $878E DEFB $20,$04  ;
 $8790 DEFB $1F,$F8  ;
 $8792 DEFB $7F,$FE  ;
 $8794 DEFB $7F,$FE  ;
 $8796 DEFB $3F,$FC  ; }
; Item: The Good Insulator.
 $8798 DEFB $00,$00  ; {#ITEM(#PC)(item-the-good-insulator.png)
 $879A DEFB $00,$00  ;
 $879C DEFB $41,$04  ;
 $879E DEFB $E3,$8E  ;
 $87A0 DEFB $E3,$8E  ;
 $87A2 DEFB $F3,$CF  ;
 $87A4 DEFB $FB,$EF  ;
 $87A6 DEFB $FB,$EF  ;
 $87A8 DEFB $FB,$EF  ;
 $87AA DEFB $FB,$EF  ;
 $87AC DEFB $F3,$CF  ;
 $87AE DEFB $E3,$8E  ;
 $87B0 DEFB $E3,$8E  ;
 $87B2 DEFB $41,$04  ;
 $87B4 DEFB $00,$00  ;
 $87B6 DEFB $00,$00  ; }
; Item: The Bottle.
 $87B8 DEFB $01,$C0  ; {#ITEM(#PC)(item-the-bottle.png)
 $87BA DEFB $01,$C0  ;
 $87BC DEFB $00,$00  ;
 $87BE DEFB $01,$40  ;
 $87C0 DEFB $01,$40  ;
 $87C2 DEFB $01,$40  ;
 $87C4 DEFB $02,$E0  ;
 $87C6 DEFB $05,$F0  ;
 $87C8 DEFB $05,$70  ;
 $87CA DEFB $05,$00  ;
 $87CC DEFB $05,$70  ;
 $87CE DEFB $05,$50  ;
 $87D0 DEFB $05,$60  ;
 $87D2 DEFB $05,$70  ;
 $87D4 DEFB $05,$80  ;
 $87D6 DEFB $07,$F0  ; }
; Item: The Red Herring.
 $87D8 DEFB $00,$00  ; {#ITEM(#PC)(item-the-red-herring.png)
 $87DA DEFB $00,$00  ;
 $87DC DEFB $00,$00  ;
 $87DE DEFB $00,$00  ;
 $87E0 DEFB $00,$00  ;
 $87E2 DEFB $00,$00  ;
 $87E4 DEFB $00,$00  ;
 $87E6 DEFB $0F,$80  ;
 $87E8 DEFB $3F,$C1  ;
 $87EA DEFB $7F,$F3  ;
 $87EC DEFB $5E,$7E  ;
 $87EE DEFB $FD,$BE  ;
 $87F0 DEFB $EF,$7E  ;
 $87F2 DEFB $67,$F3  ;
 $87F4 DEFB $1F,$81  ;
 $87F6 DEFB $00,$00  ; }
; Item: The Test Tube.
 $87F8 DEFB $00,$00  ; {#ITEM(#PC)(item-the-test-tube.png)
 $87FA DEFB $04,$10  ;
 $87FC DEFB $02,$20  ;
 $87FE DEFB $02,$20  ;
 $8800 DEFB $02,$20  ;
 $8802 DEFB $02,$20  ;
 $8804 DEFB $03,$E0  ;
 $8806 DEFB $02,$E0  ;
 $8808 DEFB $02,$E0  ;
 $880A DEFB $02,$E0  ;
 $880C DEFB $02,$E0  ;
 $880E DEFB $02,$E0  ;
 $8810 DEFB $02,$E0  ;
 $8812 DEFB $02,$E0  ;
 $8814 DEFB $02,$20  ;
 $8816 DEFB $01,$C0  ; }
; Item: The Can Of Beans.
 $8818 DEFB $17,$FC  ; {#ITEM(#PC)(item-the-can-of-beans.png)
 $881A DEFB $00,$00  ;
 $881C DEFB $17,$FC  ;
 $881E DEFB $17,$FC  ;
 $8820 DEFB $17,$00  ;
 $8822 DEFB $16,$FC  ;
 $8824 DEFB $16,$C4  ;
 $8826 DEFB $16,$D8  ;
 $8828 DEFB $16,$C4  ;
 $882A DEFB $16,$D8  ;
 $882C DEFB $16,$C4  ;
 $882E DEFB $16,$FC  ;
 $8830 DEFB $17,$00  ;
 $8832 DEFB $17,$FC  ;
 $8834 DEFB $00,$00  ;
 $8836 DEFB $17,$FC  ; }
; Item: The Rubber Stamp.
 $8838 DEFB $00,$00  ; {#ITEM(#PC)(item-the-rubber-stamp.png)
 $883A DEFB $01,$80  ;
 $883C DEFB $02,$C0  ;
 $883E DEFB $02,$C0  ;
 $8840 DEFB $05,$E0  ;
 $8842 DEFB $05,$E0  ;
 $8844 DEFB $02,$C0  ;
 $8846 DEFB $02,$C0  ;
 $8848 DEFB $02,$C0  ;
 $884A DEFB $01,$80  ;
 $884C DEFB $01,$80  ;
 $884E DEFB $03,$C0  ;
 $8850 DEFB $1F,$F8  ;
 $8852 DEFB $00,$00  ;
 $8854 DEFB $1F,$F8  ;
 $8856 DEFB $00,$00  ; }
; Item: The Pliers.
 $8858 DEFB $01,$40  ; {#ITEM(#PC)(item-the-pliers.png)
 $885A DEFB $01,$40  ;
 $885C DEFB $01,$40  ;
 $885E DEFB $03,$60  ;
 $8860 DEFB $03,$60  ;
 $8862 DEFB $03,$60  ;
 $8864 DEFB $03,$A0  ;
 $8866 DEFB $01,$40  ;
 $8868 DEFB $00,$C0  ;
 $886A DEFB $03,$60  ;
 $886C DEFB $02,$20  ;
 $886E DEFB $06,$30  ;
 $8870 DEFB $06,$30  ;
 $8872 DEFB $06,$30  ;
 $8874 DEFB $06,$30  ;
 $8876 DEFB $04,$10  ; }
; Item: The Whistle.
 $8878 DEFB $00,$00  ; {#ITEM(#PC)(item-the-whistle.png)
 $887A DEFB $00,$00  ;
 $887C DEFB $00,$00  ;
 $887E DEFB $00,$00  ;
 $8880 DEFB $00,$00  ;
 $8882 DEFB $00,$00  ;
 $8884 DEFB $00,$00  ;
 $8886 DEFB $67,$F0  ;
 $8888 DEFB $7F,$FC  ;
 $888A DEFB $00,$5E  ;
 $888C DEFB $00,$BE  ;
 $888E DEFB $01,$7F  ;
 $8890 DEFB $01,$7E  ;
 $8892 DEFB $00,$BE  ;
 $8894 DEFB $00,$7C  ;
 $8896 DEFB $00,$10  ; }

; Data block at 8898
b$8898 DEFB $80,$03,$00,$00                 ; {#UDGARRAY$04,step=$04($8898-$88C8-$01-$20)(item-13.png)
 $889C DEFB $80,$03,$3F,$F8                 ;
 $88A0 DEFB $80,$03,$15,$50                 ;
 $88A4 DEFB $C0,$03,$17,$80                 ;
 $88A8 DEFB $C0,$01,$0B,$78                 ;
 $88AC DEFB $E0,$01,$0B,$7C                 ;
 $88B0 DEFB $E0,$01,$0B,$8C                 ;
 $88B4 DEFB $E0,$01,$0B,$EC                 ;
 $88B8 DEFB $E0,$01,$0B,$EC                 ;
 $88BC DEFB $C0,$01,$0B,$EC                 ;
 $88C0 DEFB $C0,$01,$17,$9C                 ;
 $88C4 DEFB $C0,$01,$17,$78                 ;
 $88C8 DEFB $80,$03,$17,$60                 ;
 $88CC DEFB $80,$03,$35,$90                 ;
 $88D0 DEFB $80,$03,$3F,$F8                 ;
 $88D4 DEFB $80,$03,$00,$00                 ; }
 $88D8 DEFB $00,$00,$00,$00,$C0,$00,$C0,$00
 $88E0 DEFB $40,$00,$40,$00,$C0,$00,$C0,$00
 $88E8 DEFB $C0,$00,$40,$00,$40,$00,$C0,$00
 $88F0 DEFB $C0,$00,$E0,$00,$E7,$F8,$7B,$FF
 $88F8 DEFB $E0,$00,$0F,$FE,$E0,$00,$0F,$E6
 $8900 DEFB $E0,$00,$07,$E2,$F0,$08,$07,$C0
 $8908 DEFB $F0,$1F,$07,$C0,$F0,$1F,$03,$C0
 $8910 DEFB $F8,$1F,$03,$C0,$F8,$1F,$03,$C0
 $8918 DEFB $F8,$1F,$03,$C0,$F0,$0F,$03,$C0
 $8920 DEFB $F0,$0F,$07,$E0,$E0,$0F,$07,$60
 $8928 DEFB $C0,$07,$0E,$E0,$80,$07,$1E,$70
 $8930 DEFB $00,$03,$38,$30,$03,$83,$60,$18
 $8938 DEFB $E0,$00,$0F,$FE,$E0,$00,$0F,$EE
 $8940 DEFB $E0,$00,$07,$C6,$F0,$10,$07,$C2
 $8948 DEFB $F0,$18,$07,$C0,$F0,$1F,$07,$C0
 $8950 DEFB $F0,$1F,$03,$C0,$F8,$0F,$03,$C0
 $8958 DEFB $F8,$0F,$03,$E0,$F8,$0F,$03,$E0
 $8960 DEFB $F0,$0F,$02,$E0,$F0,$07,$06,$E0
 $8968 DEFB $E0,$03,$07,$70,$E0,$01,$0E,$38
 $8970 DEFB $C0,$80,$0C,$1C,$C1,$C0,$10,$06
 $8978 DEFB $F1,$FF,$00,$00,$E0,$FF,$04,$00
 $8980 DEFB $E0,$3F,$0E,$00,$C0,$3F,$0F,$80
 $8988 DEFB $C0,$1F,$1F,$80,$80,$1F,$1F,$C0
 $8990 DEFB $80,$0F,$3F,$C0,$80,$0F,$3E,$60
 $8998 DEFB $80,$0F,$1F,$60,$C0,$0F,$0E,$60
 $89A0 DEFB $00,$0F,$07,$E0,$00,$07,$43,$E0
 $89A8 DEFB $00,$03,$70,$F0,$00,$01,$3F,$F8
 $89B0 DEFB $80,$00,$1F,$FC,$C0,$00,$0F,$FE
 $89B8 DEFB $F0,$1F,$00,$00,$E0,$03,$07,$C0
 $89C0 DEFB $C0,$01,$0D,$78,$80,$01,$1A,$AC
 $89C8 DEFB $80,$01,$35,$54,$80,$01,$3A,$AC
 $89D0 DEFB $80,$01,$15,$58,$C0,$03,$1A,$A8
 $89D8 DEFB $C0,$03,$0D,$58,$C0,$03,$1A,$B0
 $89E0 DEFB $C0,$03,$15,$58,$C0,$03,$1A,$A8
 $89E8 DEFB $C0,$03,$15,$58,$C0,$03,$1A,$A8
 $89F0 DEFB $C0,$03,$1F,$F8,$C0,$03,$00,$00
 $89F8 DEFB $FE,$3F,$00,$00,$FC,$1F,$00,$80
 $8A00 DEFB $F8,$0F,$01,$40,$F0,$0F,$03,$A0
 $8A08 DEFB $E0,$0F,$07,$C0,$C0,$1F,$0E,$80
 $8A10 DEFB $80,$3F,$1D,$00,$00,$1F,$3B,$80
 $8A18 DEFB $00,$0F,$5D,$C0,$00,$07,$28,$E0
 $8A20 DEFB $82,$03,$10,$70,$C7,$01,$00,$38
 $8A28 DEFB $FF,$80,$00,$1C,$FF,$C0,$00,$0E
 $8A30 DEFB $FF,$E0,$00,$06,$FF,$F0,$00,$00
 $8A38 DEFB $00,$00,$00,$00,$00,$00,$FF,$FB
 $8A40 DEFB $00,$00,$AA,$AB,$00,$00,$55,$5A
 $8A48 DEFB $00,$00,$6A,$AC,$00,$01,$35,$54
 $8A50 DEFB $80,$01,$2A,$AC,$80,$01,$15,$54
 $8A58 DEFB $C0,$01,$1F,$FC,$C0,$01,$00,$0C
 $8A60 DEFB $C7,$81,$00,$1C,$C0,$01,$10,$38
 $8A68 DEFB $C0,$03,$0F,$F0,$80,$01,$10,$08
 $8A70 DEFB $83,$C1,$38,$1C,$83,$C1,$10,$08
 $8A78 DEFB $FE,$03,$00,$00,$FE,$03,$00,$F8
 $8A80 DEFB $FC,$03,$00,$F0,$FC,$07,$01,$F0
 $8A88 DEFB $F8,$07,$01,$E0,$F8,$01,$03,$E0
 $8A90 DEFB $F0,$01,$03,$CC,$F0,$01,$07,$F8
 $8A98 DEFB $E0,$03,$07,$F8,$E0,$03,$0C,$70
 $8AA0 DEFB $E0,$07,$00,$60,$FE,$0F,$00,$E0
 $8AA8 DEFB $FC,$0F,$00,$C0,$FC,$1F,$01,$80
 $8AB0 DEFB $FC,$3F,$01,$00,$FC,$7F,$00,$00
 $8AB8 DEFB $FE,$03,$00,$00,$FE,$03,$00,$F8
 $8AC0 DEFB $FC,$03,$00,$90,$FC,$07,$01,$10
 $8AC8 DEFB $F8,$07,$01,$20,$F8,$01,$02,$20
 $8AD0 DEFB $F0,$01,$02,$4C,$F0,$01,$04,$78
 $8AD8 DEFB $E0,$03,$07,$88,$E0,$03,$0C,$90
 $8AE0 DEFB $E0,$07,$00,$90,$FC,$07,$00,$A0
 $8AE8 DEFB $FC,$0F,$01,$40,$FC,$1F,$01,$80
 $8AF0 DEFB $FC,$3F,$01,$00,$FC,$7F,$00,$00
 $8AF8 DEFB $FF,$FF,$00,$00,$FF,$FF,$00,$00
 $8B00 DEFB $FF,$FF,$00,$00,$FF,$FF,$00,$00
 $8B08 DEFB $FF,$FF,$00,$00,$00,$00,$00,$00
 $8B10 DEFB $00,$00,$72,$4E,$00,$00,$1B,$D8
 $8B18 DEFB $C0,$03,$0F,$F0,$E0,$07,$05,$A0
 $8B20 DEFB $F0,$0F,$03,$C0,$F8,$1F,$01,$80
 $8B28 DEFB $FC,$3F,$00,$00,$FF,$FF,$00,$00
 $8B30 DEFB $FF,$FF,$00,$00,$FF,$FF,$00,$00
 $8B38 DEFB $FF,$FF,$00,$00,$FF,$FF,$00,$00
 $8B40 DEFB $FF,$FF,$00,$00,$FF,$FF,$00,$00
 $8B48 DEFB $F8,$1F,$00,$00,$F8,$1F,$02,$40
 $8B50 DEFB $F0,$0F,$03,$C0,$C0,$03,$07,$E0
 $8B58 DEFB $80,$01,$1D,$B8,$00,$00,$33,$CC
 $8B60 DEFB $00,$00,$41,$82,$1C,$38,$00,$00
 $8B68 DEFB $FF,$FF,$00,$00,$FF,$FF,$00,$00
 $8B70 DEFB $FF,$FF,$00,$00,$FF,$FF,$00,$00
 $8B78 DEFB $FF,$F8,$00,$00,$FF,$80,$00,$02
 $8B80 DEFB $FF,$00,$00,$3D,$FE,$00,$00,$7A
 $8B88 DEFB $FE,$00,$00,$EE,$FE,$00,$00,$8C
 $8B90 DEFB $06,$00,$00,$DE,$00,$00,$70,$6F
 $8B98 DEFB $00,$00,$FB,$7E,$00,$00,$FB,$EC
 $8BA0 DEFB $00,$01,$FB,$E0,$00,$07,$F3,$E0
 $8BA8 DEFB $00,$07,$4B,$70,$00,$07,$38,$70
 $8BB0 DEFB $01,$01,$5C,$30,$01,$81,$7C,$3C
 $8BB8 DEFB $FF,$FF,$00,$00,$FF,$F8,$00,$00
 $8BC0 DEFB $FF,$80,$00,$02,$FF,$00,$00,$3D
 $8BC8 DEFB $FE,$00,$00,$7A,$06,$00,$00,$EE
 $8BD0 DEFB $00,$00,$70,$8C,$00,$00,$FB,$DE
 $8BD8 DEFB $00,$00,$FB,$6F,$00,$00,$FB,$FE
 $8BE0 DEFB $00,$00,$FB,$EC,$00,$01,$73,$60
 $8BE8 DEFB $00,$0F,$4B,$60,$00,$0F,$38,$60
 $8BF0 DEFB $03,$07,$B8,$60,$03,$07,$F8,$30
 $8BF8 DEFB $1F,$FF,$00,$00,$01,$FF,$40,$00
 $8C00 DEFB $00,$FF,$BC,$00,$00,$7F,$5E,$00
 $8C08 DEFB $00,$7F,$77,$00,$00,$7F,$31,$00
 $8C10 DEFB $00,$60,$7B,$00,$00,$00,$F6,$0E
 $8C18 DEFB $00,$00,$7E,$DF,$00,$00,$37,$DF
 $8C20 DEFB $80,$00,$07,$DF,$E0,$00,$07,$CF
 $8C28 DEFB $E0,$00,$0E,$D2,$E0,$00,$0E,$1C
 $8C30 DEFB $80,$80,$0C,$3A,$81,$80,$3C,$3E
 $8C38 DEFB $FF,$FF,$00,$00,$1F,$FF,$00,$00
 $8C40 DEFB $01,$FF,$40,$00,$00,$FF,$BC,$00
 $8C48 DEFB $00,$7F,$5E,$00,$00,$60,$77,$00
 $8C50 DEFB $00,$00,$31,$0E,$00,$00,$7B,$DF
 $8C58 DEFB $00,$00,$F6,$DF,$00,$00,$7F,$DF
 $8C60 DEFB $00,$00,$37,$DF,$80,$00,$06,$CE
 $8C68 DEFB $F0,$00,$06,$D2,$F0,$00,$06,$1C
 $8C70 DEFB $E0,$C0,$06,$1D,$E0,$C0,$0C,$1F
 $8C78 DEFB $F0,$0F,$00,$00,$F0,$0F,$07,$E0
 $8C80 DEFB $F0,$0F,$01,$80,$FC,$3F,$01,$80
 $8C88 DEFB $F0,$0F,$01,$80,$E0,$07,$06,$E0
 $8C90 DEFB $E0,$07,$0B,$30,$E0,$07,$0A,$90
 $8C98 DEFB $E0,$07,$09,$D0,$E0,$07,$0D,$50
 $8CA0 DEFB $E0,$07,$07,$E0,$F0,$0F,$00,$00
 $8CA8 DEFB $FC,$3F,$01,$80,$F8,$1F,$01,$80
 $8CB0 DEFB $E0,$07,$02,$C0,$E0,$07,$0D,$F0
 $8CB8 DEFB $FF,$FF,$00,$00,$FF,$FF,$00,$00
 $8CC0 DEFB $F0,$0F,$00,$00,$F0,$0F,$07,$E0
 $8CC8 DEFB $F0,$0F,$01,$80,$F0,$0F,$01,$80
 $8CD0 DEFB $E0,$07,$06,$E0,$E0,$07,$0B,$30
 $8CD8 DEFB $E0,$07,$0A,$90,$E0,$07,$09,$D0
 $8CE0 DEFB $E0,$07,$0D,$50,$E0,$07,$07,$E0
 $8CE8 DEFB $F0,$0F,$00,$00,$F8,$1F,$01,$80
 $8CF0 DEFB $E0,$07,$02,$C0,$E0,$07,$0D,$F0
 $8CF8 DEFB $00,$00,$00,$00,$00,$00,$00,$80
 $8D00 DEFB $00,$80,$00,$80,$01,$C0,$01,$C0
 $8D08 DEFB $03,$E0,$03,$60,$07,$70,$06,$B0
 $8D10 DEFB $06,$B0,$03,$60,$01,$40,$01,$40
 $8D18 DEFB $00,$00,$00,$00,$02,$00,$00,$00
 $8D20 DEFB $02,$00,$03,$00,$07,$80,$07,$C0
 $8D28 DEFB $07,$C0,$0E,$E0,$0E,$E0,$0D,$70
 $8D30 DEFB $0D,$B0,$06,$70,$03,$60,$01,$40
 $8D38 DEFB $00,$80,$00,$00,$00,$80,$00,$80
 $8D40 DEFB $01,$C0,$01,$C0,$03,$E0,$03,$E0
 $8D48 DEFB $07,$F0,$07,$70,$0F,$78,$0E,$B8
 $8D50 DEFB $0E,$B8,$07,$70,$03,$60,$01,$40
 $8D58 DEFB $00,$00,$00,$00,$00,$20,$00,$20
 $8D60 DEFB $00,$60,$00,$F0,$01,$F0,$03,$F0
 $8D68 DEFB $03,$F0,$07,$B8,$07,$78,$06,$B8
 $8D70 DEFB $06,$B0,$03,$70,$01,$40,$01,$40
 $8D78 DEFB $C0,$00,$40,$00,$60,$00,$60,$00
 $8D80 DEFB $60,$00,$50,$00,$70,$00,$70,$00
 $8D88 DEFB $70,$00,$50,$00,$70,$00,$70,$00
 $8D90 DEFB $78,$00,$E8,$00,$B8,$00,$FC,$00
 $8D98 DEFB $C0,$00,$40,$00,$60,$00,$60,$00
 $8DA0 DEFB $60,$00,$70,$00,$70,$00,$70,$00
 $8DA8 DEFB $50,$00,$70,$00,$70,$00,$70,$00
 $8DB0 DEFB $7E,$00,$D9,$80,$FB,$80,$FE,$00
 $8DB8 DEFB $C0,$00,$40,$00,$60,$00,$40,$00
 $8DC0 DEFB $60,$00,$70,$00,$70,$00,$70,$00
 $8DC8 DEFB $70,$00,$70,$00,$70,$00,$70,$00
 $8DD0 DEFB $58,$00,$F8,$00,$F8,$C0,$B4,$20
 $8DD8 DEFB $00,$03,$00,$02,$00,$06,$00,$06
 $8DE0 DEFB $00,$06,$00,$0A,$00,$0E,$00,$0E
 $8DE8 DEFB $00,$0E,$00,$0A,$00,$0E,$00,$0E
 $8DF0 DEFB $00,$1E,$00,$17,$00,$1D,$00,$3F
 $8DF8 DEFB $00,$03,$00,$02,$00,$06,$00,$06
 $8E00 DEFB $00,$06,$00,$0E,$00,$0E,$00,$0E
 $8E08 DEFB $00,$0A,$00,$0E,$00,$0E,$00,$0E
 $8E10 DEFB $00,$7E,$01,$9B,$01,$DF,$00,$7F
 $8E18 DEFB $00,$03,$00,$02,$00,$06,$00,$02
 $8E20 DEFB $00,$06,$00,$0E,$00,$0E,$00,$0E
 $8E28 DEFB $00,$0E,$00,$0E,$00,$0E,$00,$0E
 $8E30 DEFB $00,$1A,$00,$1F,$03,$1F,$04,$2D
 $8E38 DEFB $00,$80,$00,$00,$01,$C0,$00,$00
 $8E40 DEFB $01,$C0,$00,$00,$01,$C0,$03,$E0
 $8E48 DEFB $02,$E0,$05,$F0,$05,$D0,$0B,$E8
 $8E50 DEFB $0B,$E8,$09,$E8,$04,$D0,$03,$E0
 $8E58 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $8E60 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $8E68 DEFB $FF,$FF,$FF,$FF,$00,$00,$FF,$F4
 $8E70 DEFB $FF,$F4,$FF,$EC,$00,$0C,$00,$0C
 $8E78 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $8E80 DEFB $00,$00,$00,$0E,$00,$FE,$1F,$F8
 $8E88 DEFB $FF,$80,$F0,$00,$00,$00,$FF,$F4
 $8E90 DEFB $FF,$F4,$FF,$EC,$00,$0C,$00,$0C
 $8E98 DEFB $00,$00,$00,$00,$00,$1C,$00,$7C
 $8EA0 DEFB $01,$F0,$07,$C0,$1F,$00,$7C,$00
 $8EA8 DEFB $F0,$00,$C0,$00,$00,$00,$FF,$F4
 $8EB0 DEFB $FF,$F4,$FF,$EC,$00,$0C,$00,$0C
 $8EB8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $8EC0 DEFB $00,$00,$00,$0E,$00,$FE,$1F,$F8
 $8EC8 DEFB $FF,$80,$F0,$00,$00,$00,$FF,$F4
 $8ED0 DEFB $FF,$F4,$FF,$EC,$00,$0C,$00,$0C
 $8ED8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $8EE0 DEFB $00,$00,$00,$00,$00,$00,$0B,$70
 $8EE8 DEFB $3F,$DC,$6E,$F6,$00,$00,$AA,$AA
 $8EF0 DEFB $55,$55,$00,$00,$7F,$FE,$3F,$FC
 $8EF8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $8F00 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $8F08 DEFB $00,$00,$7F,$FE,$FF,$FF,$79,$FE
 $8F10 DEFB $86,$3D,$EF,$43,$BD,$EF,$77,$7A
 $8F18 DEFB $5F,$F0,$00,$00,$7F,$F0,$43,$30
 $8F20 DEFB $4F,$D0,$45,$D0,$4F,$F0,$49,$10
 $8F28 DEFB $49,$90,$79,$30,$79,$90,$5F,$90
 $8F30 DEFB $5E,$90,$5E,$30,$67,$F0,$3F,$E0
 $8F38 DEFB $00,$00,$30,$00,$48,$00,$58,$00
 $8F40 DEFB $3C,$00,$0F,$00,$07,$E0,$03,$98
 $8F48 DEFB $03,$E6,$01,$FA,$01,$FD,$00,$FD
 $8F50 DEFB $00,$FD,$00,$7A,$00,$3E,$00,$00
 $8F58 DEFB $1C,$60,$16,$C0,$1A,$80,$0D,$80
 $8F60 DEFB $02,$00,$01,$C0,$01,$C0,$02,$E0
 $8F68 DEFB $02,$E0,$05,$F0,$05,$F0,$0B,$E8
 $8F70 DEFB $0B,$E8,$0B,$E8,$0D,$D8,$07,$70
 $8F78 DEFB $01,$C0,$03,$60,$06,$30,$06,$00
 $8F80 DEFB $06,$00,$E6,$00,$6F,$00,$6F,$80
 $8F88 DEFB $3F,$C0,$3D,$F0,$03,$F8,$03,$78
 $8F90 DEFB $06,$E8,$0C,$78,$06,$30,$03,$00
 $8F98 DEFB $01,$C0,$03,$60,$06,$30,$06,$00
 $8FA0 DEFB $06,$00,$07,$00,$EF,$80,$6F,$E0
 $8FA8 DEFB $3D,$F0,$1C,$FE,$00,$FE,$01,$9F
 $8FB0 DEFB $03,$1B,$01,$8E,$00,$C6,$00,$00
 $8FB8 DEFB $01,$F0,$03,$38,$06,$00,$06,$00
 $8FC0 DEFB $06,$00,$06,$00,$0F,$C0,$0F,$F8
 $8FC8 DEFB $7E,$FE,$DC,$FA,$80,$DE,$00,$CF
 $8FD0 DEFB $00,$62,$00,$30,$00,$18,$00,$00
 $8FD8 DEFB $01,$C0,$03,$60,$06,$20,$06,$00
 $8FE0 DEFB $06,$00,$07,$00,$6F,$80,$2F,$E0
 $8FE8 DEFB $3D,$F0,$1C,$FE,$08,$FE,$01,$9F
 $8FF0 DEFB $03,$1B,$01,$8E,$00,$C6,$00,$00
 $8FF8 DEFB $00,$00,$00,$08,$00,$1C,$00,$1C
 $9000 DEFB $00,$3C,$0E,$38,$09,$78,$10,$F0
 $9008 DEFB $1E,$F0,$21,$64,$03,$9C,$0C,$C4
 $9010 DEFB $33,$84,$CE,$08,$78,$10,$00,$00
 $9018 DEFB $FF,$FF,$00,$00,$FC,$3F,$00,$00
 $9020 DEFB $FC,$3F,$01,$80,$E0,$07,$00,$00
 $9028 DEFB $20,$00,$0F,$F0,$00,$00,$80,$06
 $9030 DEFB $00,$00,$DF,$F9,$00,$00,$DB,$F9
 $9038 DEFB $00,$00,$57,$FD,$00,$00,$37,$FD
 $9040 DEFB $80,$00,$37,$FE,$80,$00,$1B,$F8
 $9048 DEFB $C0,$03,$1C,$F8,$C0,$03,$0F,$F0
 $9050 DEFB $E0,$07,$03,$C0,$F8,$1F,$00,$00
 $9058 DEFB $FF,$8F,$00,$00,$C0,$81,$00,$20
 $9060 DEFB $C0,$81,$12,$24,$C0,$01,$12,$84
 $9068 DEFB $00,$01,$04,$88,$00,$01,$44,$28
 $9070 DEFB $00,$01,$48,$24,$00,$00,$21,$84
 $9078 DEFB $80,$00,$23,$42,$80,$00,$0E,$A0
 $9080 DEFB $C0,$03,$15,$58,$00,$00,$00,$00
 $9088 DEFB $00,$00,$7F,$FE,$00,$00,$0F,$F0
 $9090 DEFB $E0,$07,$00,$00,$FF,$FF,$00,$00
 $9098 DEFB $FF,$0F,$00,$00,$FF,$03,$00,$60
 $90A0 DEFB $FE,$00,$00,$58,$FE,$00,$00,$D6
 $90A8 DEFB $C0,$00,$00,$B2,$80,$00,$19,$2C
 $90B0 DEFB $80,$01,$3D,$C4,$80,$01,$26,$68
 $90B8 DEFB $80,$03,$07,$18,$E0,$00,$0B,$D0
 $90C0 DEFB $C0,$00,$0D,$FE,$C0,$00,$1F,$D6
 $90C8 DEFB $C0,$00,$0F,$E2,$E0,$08,$03,$E0
 $90D0 DEFB $F8,$0F,$00,$C0,$FE,$1F,$00,$00
 $90D8 DEFB $FF,$FF,$00,$00,$FF,$FF,$00,$00
 $90E0 DEFB $FE,$0F,$00,$00,$FC,$0F,$00,$E0
 $90E8 DEFB $F8,$0F,$01,$C0,$F0,$0F,$03,$80
 $90F0 DEFB $E0,$0F,$07,$E0,$E0,$0F,$0F,$C0
 $90F8 DEFB $E0,$1F,$01,$80,$F0,$3F,$03,$00
 $9100 DEFB $F0,$7F,$06,$00,$F0,$FF,$04,$00
 $9108 DEFB $F1,$FF,$00,$00,$FF,$FF,$00,$00
 $9110 DEFB $FF,$FF,$00,$00,$FF,$FF,$00,$00
 $9118 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $9120 DEFB $00,$80,$02,$A0,$01,$40,$06,$B0
 $9128 DEFB $01,$40,$02,$A0,$00,$80,$00,$00
 $9130 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $9138 DEFB $00,$00,$01,$80,$01,$80,$02,$C0
 $9140 DEFB $03,$40,$02,$C0,$07,$60,$06,$E0
 $9148 DEFB $07,$60,$0F,$F0,$0E,$70,$1C,$38
 $9150 DEFB $18,$18,$00,$00,$00,$00,$00,$00
 $9158 DEFB $00,$00,$00,$00,$00,$0C,$00,$3C
 $9160 DEFB $00,$F8,$03,$D8,$0F,$B0,$3F,$70
 $9168 DEFB $7E,$E0,$7D,$E0,$07,$C0,$03,$C0
 $9170 DEFB $03,$80,$03,$80,$03,$00,$00,$00
 $9178 DEFB $00,$00,$00,$00,$00,$00,$18,$00
 $9180 DEFB $1E,$00,$0F,$C0,$07,$F8,$03,$56
 $9188 DEFB $02,$AE,$07,$F8,$0F,$C0,$1E,$00
 $9190 DEFB $18,$00,$00,$00,$00,$00,$00,$00
 $9198 DEFB $00,$00,$03,$00,$03,$80,$03,$80
 $91A0 DEFB $03,$C0,$07,$C0,$7D,$E0,$7E,$E0
 $91A8 DEFB $3F,$70,$0F,$B0,$03,$D8,$00,$F8
 $91B0 DEFB $00,$3C,$00,$0C,$00,$00,$00,$00
 $91B8 DEFB $00,$00,$00,$00,$00,$00,$18,$18
 $91C0 DEFB $1C,$38,$0E,$70,$0F,$F0,$06,$E0
 $91C8 DEFB $07,$60,$06,$E0,$03,$40,$02,$C0
 $91D0 DEFB $03,$40,$01,$80,$01

; Data block at 91D5
b$91D5 DEFB $80,$00,$00,$00,$00,$00,$C0,$01
 $91DD DEFB $C0,$01,$C0,$03,$C0,$03,$E0,$07
 $91E5 DEFB $BE,$07,$7E,$0E,$FC,$0D,$F0,$1B
 $91ED DEFB $C0,$1F,$00,$3C,$00,$30,$00,$00
 $91F5 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $91FD DEFB $00,$00,$18,$00,$78,$03,$F0,$1F
 $9205 DEFB $E0,$75,$40,$6A,$C0,$1F,$E0,$03
 $920D DEFB $F0,$00,$78,$00,$18,$00,$00,$00
 $9215 DEFB $00,$00,$00,$00,$00,$00,$00,$30
 $921D DEFB $00,$3C,$00,$1F,$00,$1B,$C0,$0D
 $9225 DEFB $F0,$0E,$FC,$07,$7E,$07,$BE,$03
 $922D DEFB $E0,$03,$C0,$01,$C0,$01,$C0,$00
 $9235 DEFB $C0,$00,$00,$F0,$07,$00,$00,$E0
 $923D DEFB $03,$07,$F0,$E0,$03,$0F,$F8,$E0
 $9245 DEFB $03,$0E,$38,$E0,$83,$0E,$00,$E0
 $924D DEFB $FF,$0E,$00,$00,$0F,$0E,$00,$00
 $9255 DEFB $0F,$7F,$E0,$00,$0F,$7F,$E0,$00
 $925D DEFB $0F,$0E,$00,$80,$E3,$0E,$00,$00
 $9265 DEFB $23,$3E,$08,$00,$03,$7F,$88,$00
 $926D DEFB $03,$4F,$F8,$00,$03,$39,$F0,$80
 $9275 DEFB $07,$00,$00,$80,$01,$00,$00,$00
 $927D DEFB $00,$33,$CC,$00,$00,$4F,$F2,$00
 $9285 DEFB $00,$57,$FA,$00,$00,$3B,$F4,$00
 $928D DEFB $00,$3C,$2C,$00,$00,$7A,$5E,$00
 $9295 DEFB $00,$78,$1E,$00,$00,$78,$1E,$00
 $929D DEFB $00,$7A,$5E,$00,$00,$34,$3C,$00
 $92A5 DEFB $00,$2F,$DC,$00,$00,$5F,$EA,$00
 $92AD DEFB $00,$4F,$F2,$00,$00,$33,$CC,$80
 $92B5 DEFB $01,$00,$00,$80,$01,$2A,$AA,$80
 $92BD DEFB $01,$7E,$FC,$80,$01,$3D,$5E,$80
 $92C5 DEFB $01,$78,$8C,$80,$01,$3A,$56,$80
 $92CD DEFB $01,$75,$2C,$80,$01,$2F,$AE,$80
 $92D5 DEFB $01,$77,$DC,$80,$01,$33,$BE,$80
 $92DD DEFB $01,$7D,$BC,$80,$01,$3D,$5E,$80
 $92E5 DEFB $01,$7A,$EC,$80,$01,$33,$CE,$80
 $92ED DEFB $01,$60,$04,$80,$01,$3F,$FE,$80
 $92F5 DEFB $01,$55,$54,$FF,$FF,$00,$00,$FF
 $92FD DEFB $FF,$00,$00,$F1,$FF,$00,$00,$E0
 $9305 DEFB $C7,$04,$00,$E0,$C7,$0E,$10,$E0
 $930D DEFB $C7,$0E,$00,$E0,$1F,$04,$00,$F0
 $9315 DEFB $01,$00,$40,$C6,$01,$00,$E4,$C6
 $931D DEFB $01,$10,$E0,$C0,$01,$00,$40,$E0
 $9325 DEFB $00,$04,$04,$E0,$00,$0E,$0E,$E0
 $932D DEFB $00,$0E,$4E,$E0,$00,$04,$04,$F1
 $9335 DEFB $F1,$00,$00,$FF,$FF,$00,$00,$FF
 $933D DEFB $C7,$00,$00,$FF,$83,$00,$10,$F1
 $9345 DEFB $83,$00,$38,$E0,$83,$04,$38,$E0
 $934D DEFB $83,$0A,$10,$E0,$00,$04,$04,$C0
 $9355 DEFB $00,$00,$4E,$82,$00,$10,$AE,$82
 $935D DEFB $00,$38,$44,$83,$11,$38,$00,$80
 $9365 DEFB $09,$10,$40,$C0,$00,$04,$E4,$E0
 $936D DEFB $00,$0A,$EA,$E0,$00,$04,$44,$F1
 $9375 DEFB $11,$00,$00,$FF,$FF,$00,$00,$FF
 $937D DEFB $C7,$00,$00,$FF,$83,$00,$10,$FF
 $9385 DEFB $83,$00,$28,$F1,$83,$00,$10,$F1
 $938D DEFB $C1,$04,$00,$F1,$E0,$00,$04,$C7
 $9395 DEFB $00,$00,$0A,$83,$00,$10,$44,$83
 $939D DEFB $11,$28,$00,$83,$FF,$10,$00,$C7
 $93A5 DEFB $1F,$00,$00,$F0,$01,$00,$40,$F0
 $93AD DEFB $01,$04,$A4,$F0,$01,$00,$40,$FF
 $93B5 DEFB $1F,$00,$00,$FF,$FF,$00,$00,$FF
 $93BD DEFB $FF,$00,$00,$F1,$FF,$00,$00,$E1
 $93C5 DEFB $FF,$04,$00,$C1,$FF,$0C,$00,$80
 $93CD DEFB $00,$1C,$00,$00,$00,$3B,$FE,$00
 $93D5 DEFB $00,$77,$FE,$00,$00,$76,$02,$00
 $93DD DEFB $00,$3B,$FE,$80,$00,$1C,$00,$C1
 $93E5 DEFB $FF,$0C,$00,$E1,$FF,$04,$00,$F1
 $93ED DEFB $FF,$00,$00,$FF,$FF,$00,$00,$FF
 $93F5 DEFB $FF,$00,$00,$FF,$FF,$00,$00,$FF
 $93FD DEFB $FF,$00,$00,$FF,$8F,$00,$00,$FF
 $9405 DEFB $87,$00,$20,$FF,$83,$00,$30,$00
 $940D DEFB $01,$00,$38,$00,$00,$7F,$DC,$00
 $9415 DEFB $00,$7F,$EE,$00,$00,$40,$6E,$00
 $941D DEFB $00,$7F,$DC,$00,$01,$00,$38,$FF
 $9425 DEFB $83,$00,$30,$FF,$87,$00,$20,$FF
 $942D DEFB $8F,$00,$00,$FF,$FF,$00,$00,$FF
 $9435 DEFB $FF,$00,$00,$F0,$00,$00,$00,$E0
 $943D DEFB $00,$07,$3E,$E0,$00,$0F,$FF,$80
 $9445 DEFB $00,$07,$FE,$80,$00,$3C,$3C,$80
 $944D DEFB $01,$01,$80,$F0,$01,$06,$B4,$F0
 $9455 DEFB $01,$07,$F4,$F0,$01,$01,$FC,$FC
 $945D DEFB $01,$01,$F8,$FC,$03,$00,$00,$F8
 $9465 DEFB $01,$01,$F8,$F0,$00,$03,$8C,$E0
 $946D DEFB $00,$07,$76,$C0,$00,$0F,$76,$C0
 $9475 DEFB $00,$1F,$8A,$80,$00,$3F,$BA,$00
 $947D DEFB $00,$00,$5A,$00,$00,$7F,$DA,$00
 $9485 DEFB $00,$7F,$BC,$00,$00,$7F,$A8,$00
 $948D DEFB $01,$3B,$D0,$80,$03,$17,$F0,$C0
 $9495 DEFB $03,$0F,$E8,$E0,$03,$0F,$88,$E0
 $949D DEFB $03,$0F,$98,$E0,$03,$07,$D8,$F0
 $94A5 DEFB $01,$03,$38,$80,$01,$07,$BC,$00
 $94AD DEFB $00,$20,$00,$00,$00,$77,$9E,$00
 $94B5 DEFB $00,$76,$9A,$E0,$00,$07,$3E,$E0
 $94BD DEFB $00,$0F,$FF,$80,$00,$07,$FE,$80
 $94C5 DEFB $00,$3C,$1C,$80,$01,$01,$80,$F0
 $94CD DEFB $01,$06,$B4,$F0,$01,$07,$F4,$F0
 $94D5 DEFB $01,$01,$FC,$FC,$01,$01,$F8,$FC
 $94DD DEFB $03,$00,$00,$FC,$01,$01,$F8,$F8
 $94E5 DEFB $01,$01,$9C,$F0,$00,$03,$6C,$E0
 $94ED DEFB $00,$06,$F6,$80,$00,$0F,$0E,$80
 $94F5 DEFB $00,$3F,$6E,$00,$00,$01,$68,$00
 $94FD DEFB $00,$7F,$6E,$00,$00,$7F,$6E,$00
 $9505 DEFB $00,$7E,$F6,$00,$00,$3E,$AC,$80
 $950D DEFB $01,$1F,$58,$C0,$03,$0F,$F0,$E0
 $9515 DEFB $07,$07,$F0,$F0,$03,$07,$E0,$F0
 $951D DEFB $01,$03,$E8,$F8,$01,$03,$EC,$F8
 $9525 DEFB $01,$01,$DC,$E0,$01,$03,$E8,$C0
 $952D DEFB $03,$08,$10,$C0,$07,$1D,$E0,$C0
 $9535 DEFB $0F,$1D,$A0,$E0,$00,$07,$3E,$E0
 $953D DEFB $00,$0F,$FF,$80,$00,$07,$FE,$80
 $9545 DEFB $00,$3C,$1C,$80,$01,$01,$80,$F0
 $954D DEFB $01,$06,$B4,$F0,$01,$07,$F4,$F0
 $9555 DEFB $01,$01,$FC,$FC,$01,$01,$F8,$FC
 $955D DEFB $03,$00,$00,$FC,$01,$01,$F8,$F8
 $9565 DEFB $01,$01,$9C,$F0,$00,$03,$6C,$E0
 $956D DEFB $00,$06,$F6,$80,$00,$0E,$06,$80
 $9575 DEFB $00,$3F,$6E,$00,$00,$02,$D0,$00
 $957D DEFB $00,$7E,$DE,$00,$00,$7E,$DE,$00
 $9585 DEFB $00,$7D,$EE,$00,$00,$3D,$5C,$80
 $958D DEFB $01,$1E,$B8,$C0,$03,$0B,$F0,$C0
 $9595 DEFB $07,$13,$F0,$C0,$07,$1B,$F0,$C0
 $959D DEFB $03,$0D,$F0,$E0,$03,$02,$F8,$C0
 $95A5 DEFB $03,$0A,$70,$C0,$03,$1D,$78,$C0
 $95AD DEFB $03,$1A,$00,$C0,$03,$07,$78,$F0
 $95B5 DEFB $03,$07,$68,$F0,$00,$00,$00,$E0
 $95BD DEFB $00,$07,$3E,$E0,$00,$0F,$FF,$80
 $95C5 DEFB $00,$07,$FE,$80,$00,$3C,$1C,$80
 $95CD DEFB $01,$01,$80,$F0,$01,$06,$B4,$F0
 $95D5 DEFB $01,$07,$F4,$F0,$01,$01,$FC,$FC
 $95DD DEFB $01,$01,$F8,$FC,$03,$00,$00,$F8
 $95E5 DEFB $01,$01,$FC,$F0,$00,$03,$9C,$E0
 $95ED DEFB $00,$07,$6E,$C0,$00,$0E,$F6,$C0
 $95F5 DEFB $00,$1F,$2E,$80,$00,$3E,$DE,$00
 $95FD DEFB $00,$02,$D0,$00,$00,$7D,$DE,$00
 $9605 DEFB $00,$7B,$BE,$00,$00,$7A,$BC,$00
 $960D DEFB $01,$3D,$78,$80,$03,$1F,$F8,$C0
 $9615 DEFB $03,$07,$F8,$E0,$03,$0B,$F8,$E0
 $961D DEFB $03,$0D,$F8,$E0,$03,$06,$F8,$F0
 $9625 DEFB $01,$03,$78,$80,$01,$07,$3C,$00
 $962D DEFB $00,$20,$80,$00,$00,$75,$DE,$00
 $9635 DEFB $00,$75,$DA,$E0,$00,$07,$3E,$E0
 $963D DEFB $00,$0F,$FF,$80,$00,$07,$FE,$80
 $9645 DEFB $00,$3C,$1C,$80,$01,$01,$80,$F0
 $964D DEFB $01,$06,$B4,$F0,$01,$07,$F4,$F0
 $9655 DEFB $01,$01,$FC,$FC,$01,$01,$F8,$FC
 $965D DEFB $03,$00,$00,$FC,$01,$01,$F8,$F8
 $9665 DEFB $01,$01,$9C,$F0,$00,$03,$6C,$E0
 $966D DEFB $00,$06,$F6,$80,$00,$0E,$06,$80
 $9675 DEFB $00,$3F,$6E,$00,$00,$02,$D0,$00
 $967D DEFB $00,$7E,$DE,$00,$00,$7E,$DE,$00
 $9685 DEFB $00,$7D,$EE,$00,$00,$3D,$5C,$80
 $968D DEFB $01,$1E,$B8,$C0,$03,$0F,$F0,$E0
 $9695 DEFB $07,$07,$80,$F0,$03,$07,$A0,$F0
 $969D DEFB $01,$07,$E8,$F0,$01,$01,$EC,$F8
 $96A5 DEFB $01,$02,$1C,$E0,$01,$02,$D0,$C0
 $96AD DEFB $07,$08,$E0,$C0,$0F,$1D,$00,$C0
 $96B5 DEFB $0F,$1D,$A0,$E0,$00,$07,$3E,$E0
 $96BD DEFB $00,$0F,$FF,$80,$00,$07,$FE,$80
 $96C5 DEFB $00,$3C,$1C,$80,$01,$01,$80,$F0
 $96CD DEFB $01,$06,$B4,$F0,$01,$07,$F4,$F0
 $96D5 DEFB $01,$01,$FC,$FC,$01,$01,$F8,$FC
 $96DD DEFB $03,$00,$00,$FC,$01,$01,$F8,$F8
 $96E5 DEFB $01,$01,$9C,$F0,$00,$03,$6C,$E0
 $96ED DEFB $00,$06,$F6,$80,$00,$0F,$0E,$80
 $96F5 DEFB $00,$3F,$6E,$00,$00,$01,$68,$00
 $96FD DEFB $00,$7F,$6E,$00,$00,$7E,$F6,$00
 $9705 DEFB $00,$7E,$AC,$00,$01,$37,$58,$80
 $970D DEFB $03,$17,$F0,$C0,$03,$0F,$E0,$C0
 $9715 DEFB $03,$1F,$88,$C0,$03,$1F,$38,$C0
 $971D DEFB $03,$0F,$D8,$E0,$03,$03,$E8,$C0
 $9725 DEFB $03,$08,$18,$C0,$03,$1D,$E8,$C0
 $972D DEFB $03,$1D,$A0,$C0,$03,$02,$58,$F0
 $9735 DEFB $03,$07,$68,$F0,$00,$00,$00,$E0
 $973D DEFB $00,$07,$3E,$E0,$00,$0F,$FF,$80
 $9745 DEFB $00,$07,$FE,$80,$00,$3C,$3C,$80
 $974D DEFB $01,$01,$80,$F0,$01,$06,$B4,$F0
 $9755 DEFB $01,$07,$F4,$F0,$01,$01,$FC,$FC
 $975D DEFB $01,$01,$F8,$FC,$03,$00,$00,$F8
 $9765 DEFB $01,$01,$F8,$F0,$00,$03,$8C,$E0
 $976D DEFB $00,$07,$76,$C0,$00,$0F,$76,$C0
 $9775 DEFB $00,$1E,$AE,$80,$00,$39,$DE,$00
 $977D DEFB $00,$17,$A0,$00,$00,$6F,$7E,$00
 $9785 DEFB $00,$6C,$FC,$00,$01,$73,$FC,$00
 $978D DEFB $01,$3F,$F8,$80,$01,$17,$F4,$C0
 $9795 DEFB $01,$0F,$EC,$00,$00,$0F,$DC,$00
 $979D DEFB $00,$DF,$3A,$00,$00,$CE,$15,$00
 $97A5 DEFB $80,$AC,$0E,$01,$80,$70,$34,$03
 $97AD DEFB $81,$28,$38,$83,$83,$10,$10,$C7
 $97B5 DEFB $C7,$00,$00,$F0,$00,$00,$00,$E0
 $97BD DEFB $00,$07,$3E,$E0,$00,$0F,$FF,$80
 $97C5 DEFB $00,$07,$FE,$80,$00,$3C,$1C,$80
 $97CD DEFB $01,$01,$80,$F0,$01,$06,$B4,$F0
 $97D5 DEFB $01,$07,$F4,$F0,$01,$01,$FC,$FC
 $97DD DEFB $01,$01,$F8,$FC,$01,$00,$00,$F8
 $97E5 DEFB $01,$01,$FC,$80,$00,$02,$1C,$00
 $97ED DEFB $00,$31,$EE,$00,$00,$6F,$F6,$00
 $97F5 DEFB $00,$6F,$EE,$80,$00,$00,$0E,$00
 $97FD DEFB $00,$1F,$F0,$00,$00,$7F,$FE,$00
 $9805 DEFB $00,$7B,$FE,$00,$00,$37,$FC,$00
 $980D DEFB $00,$17,$F8,$00,$00,$CF,$E3,$00
 $9815 DEFB $00,$EF,$DA
 $9818 DEFB $00,$00,$CF,$3B,$00,$00,$1E,$FB
 $9820 DEFB $00,$00,$DC,$18,$01,$C0,$D8,$03
 $9828 DEFB $03,$F0,$50,$07,$07,$F0,$C0,$03
 $9830 DEFB $1F,$F8,$00,$00,$FF,$FF,$00,$00
 $9838 DEFB $E0,$0F,$07,$C0,$C0,$07,$0D,$60
 $9840 DEFB $C0,$07,$1F,$B0,$C0,$03,$19,$D0
 $9848 DEFB $C0,$03,$16,$F8,$C0,$03,$06,$D0
 $9850 DEFB $F0,$03,$02,$F8,$E0,$03,$02,$D0
 $9858 DEFB $E0,$07,$0E,$B0,$E0,$07,$06,$E0
 $9860 DEFB $F0,$07,$00,$E0,$F0,$07,$00,$70
 $9868 DEFB $E0,$07,$07,$60,$E0,$07,$0B,$70
 $9870 DEFB $E0,$03,$0B,$60,$E0,$03,$0B,$78
 $9878 DEFB $E0,$1F,$0B,$40,$E0,$1F,$07,$40
 $9880 DEFB $F0,$0F,$03,$40,$F8,$0F,$03,$60
 $9888 DEFB $F8,$0F,$03,$60,$F8,$0F,$02,$E0
 $9890 DEFB $F8,$07,$03,$60,$F8,$07,$02,$F0
 $9898 DEFB $F0,$03,$01,$F0,$F0,$03,$07,$F8
 $98A0 DEFB $F0,$03,$00,$00,$F0,$03,$07,$38
 $98A8 DEFB $F0,$03,$06,$18,$E0,$C1,$04,$08
 $98B0 DEFB $C1,$C1,$0C,$0C,$C1,$C1,$14,$14
 $98B8 DEFB $E0,$0F,$07,$C0,$C0,$07,$0E,$E0
 $98C0 DEFB $C0,$07,$1F,$F0,$C0,$07,$19,$D0
 $98C8 DEFB $C0,$03,$06,$F0,$F0,$03,$06,$F8
 $98D0 DEFB $F0,$03,$02,$F0,$E0,$07,$02,$D0
 $98D8 DEFB $E0,$07,$0E,$F0,$E0,$07,$06,$E0
 $98E0 DEFB $F0,$07,$00,$F0,$F0,$07,$00,$60
 $98E8 DEFB $E0,$07,$07,$70,$E0,$03,$0B,$60
 $98F0 DEFB $E0,$03,$0B,$78,$E0,$03,$0B,$00
 $98F8 DEFB $E0,$1F,$0B,$40,$E0,$1F,$07,$40
 $9900 DEFB $F0,$0F,$03,$40,$F8,$0F,$03,$60
 $9908 DEFB $F0,$0F,$03,$60,$F0,$0F,$06,$E0
 $9910 DEFB $F0,$0F,$06,$E0,$F0,$0F,$01,$C0
 $9918 DEFB $F0,$1F,$07,$C0,$F0,$1F,$00,$00
 $9920 DEFB $F0,$07,$06,$C0,$F0,$07,$02,$D0
 $9928 DEFB $F8,$07,$00,$D0,$FC,$07,$00,$A0
 $9930 DEFB $F8,$0F,$01,$A0,$F8,$0F,$02,$80
 $9938 DEFB $E0,$0F,$07,$C0,$C0,$07,$0D,$60
 $9940 DEFB $C0,$07,$1F,$B0,$C0,$03,$19,$D0
 $9948 DEFB $C0,$03,$06,$F8,$F0,$03,$06,$D0
 $9950 DEFB $F0,$03,$02,$F8,$E0,$03,$02,$D0
 $9958 DEFB $E0,$07,$0E,$B0,$E0,$07,$06,$E0
 $9960 DEFB $F0,$07,$00,$E0,$F0,$07,$00,$70
 $9968 DEFB $E0,$03,$07,$60,$E0,$03,$0B,$78
 $9970 DEFB $E0,$03,$0B,$00,$E0,$1F,$0B,$40
 $9978 DEFB $F0,$1F,$07,$40,$E0,$0F,$06,$C0
 $9980 DEFB $C0,$0F,$0E,$E0,$C0,$0F,$1D,$E0
 $9988 DEFB $C0,$0F,$1B,$E0,$C0,$0F,$03,$E0
 $9990 DEFB $F0,$0F,$07,$C0,$F0,$0F,$07,$C0
 $9998 DEFB $F0,$0F,$07,$E0,$F0,$0F,$00,$00
 $99A0 DEFB $F0,$0F,$06,$E0,$F0,$0F,$04,$60
 $99A8 DEFB $E0,$0F,$06,$60,$E0,$07,$0A,$20
 $99B0 DEFB $E0,$07,$00,$30,$FF,$07,$00,$50
 $99B8 DEFB $E0,$0F,$07,$C0,$C0,$07,$0D,$60
 $99C0 DEFB $C0,$07,$1F,$B0,$C0,$03,$19,$D0
 $99C8 DEFB $C0,$03,$06,$F8,$F0,$03,$06,$D0
 $99D0 DEFB $F0,$03,$02,$F8,$E0,$03,$02,$D0
 $99D8 DEFB $E0,$07,$0E,$B0,$E0,$07,$06,$E0
 $99E0 DEFB $F0,$07,$00,$E0,$F0,$07,$00,$70
 $99E8 DEFB $E0,$03,$07,$60,$E0,$03,$0B,$78
 $99F0 DEFB $E0,$03,$0B,$00,$E0,$1F,$0B,$40
 $99F8 DEFB $E0,$1F,$0B,$40,$C0,$0F,$07,$40
 $9A00 DEFB $C0,$0F,$1E,$E0,$C0,$0F,$19,$E0
 $9A08 DEFB $C0,$0F,$03,$E0,$F8,$0F,$03,$E0
 $9A10 DEFB $F8,$07,$03,$E0,$F0,$03,$03,$F0
 $9A18 DEFB $F0,$03,$07,$F8,$F0,$03,$00,$00
 $9A20 DEFB $F0,$03,$07,$38,$F0,$03,$06,$18
 $9A28 DEFB $F0,$C3,$06,$18,$E0,$C1,$04,$08
 $9A30 DEFB $C1,$C1,$0C,$0C,$C1,$C1,$14,$14
 $9A38 DEFB $E0,$0F,$07,$C0,$C0,$07,$0D,$60
 $9A40 DEFB $C0,$07,$1F,$B0,$C0,$03,$19,$D0
 $9A48 DEFB $C0,$03,$06,$F8,$F0,$03,$06,$D0
 $9A50 DEFB $F0,$03,$02,$F8,$E0,$03,$02,$D0
 $9A58 DEFB $E0,$07,$0E,$B0,$E0,$07,$06,$E0
 $9A60 DEFB $F0,$07,$00,$E0,$F0,$07,$00,$70
 $9A68 DEFB $E0,$03,$07,$60,$E0,$03,$0B,$78
 $9A70 DEFB $E0,$03,$0B,$00,$E0,$1F,$0B,$40
 $9A78 DEFB $F0,$1F,$07,$40,$F0,$1F,$06,$C0
 $9A80 DEFB $E0,$0F,$06,$C0,$E0,$0F,$0E,$E0
 $9A88 DEFB $C0,$0F,$0D,$E0,$C0,$0F,$1B,$E0
 $9A90 DEFB $C0,$0F,$1B,$E0,$C0,$0F,$07,$C0
 $9A98 DEFB $F0,$1F,$07,$C0,$F0,$1F,$00,$00
 $9AA0 DEFB $F0,$07,$07,$80,$F0,$07,$01,$F0
 $9AA8 DEFB $FC,$07,$00,$20,$FC,$0F,$00,$A0
 $9AB0 DEFB $F8,$0F,$01,$80,$F8,$3F,$02,$80
 $9AB8 DEFB $E0,$0F,$07,$C0,$C0,$07,$0E,$E0
 $9AC0 DEFB $C0,$07,$1F,$F0,$C0,$07,$19,$D0
 $9AC8 DEFB $C0,$03,$06,$F0,$F0,$03,$06,$F8
 $9AD0 DEFB $F0,$03,$02,$F0,$E0,$07,$02,$D0
 $9AD8 DEFB $E0,$07,$0E,$F0,$E0,$07,$06,$E0
 $9AE0 DEFB $F0,$07,$00,$F0,$F0,$07,$00,$60
 $9AE8 DEFB $E0,$07,$07,$70,$E0,$03,$0B,$60
 $9AF0 DEFB $E0,$03,$0B,$78,$E0,$03,$0B,$00
 $9AF8 DEFB $E0,$1F,$0B,$40,$E0,$1F,$07,$40
 $9B00 DEFB $F0,$0F,$03,$40,$F0,$0F,$06,$E0
 $9B08 DEFB $E0,$0F,$06,$E0,$E0,$0F,$0D,$E0
 $9B10 DEFB $E0,$0F,$0D,$C0,$E0,$0F,$03,$C0
 $9B18 DEFB $F0,$0F,$07,$E0,$F0,$0F,$00,$00
 $9B20 DEFB $F0,$0F,$06,$E0,$F0,$0F,$04,$60
 $9B28 DEFB $E0,$0F,$06,$60,$E0,$07,$0A,$20
 $9B30 DEFB $E0,$07,$00,$30,$FF,$07,$00,$50
 $9B38 DEFB $E0,$0F,$07,$C0,$C0,$07,$0D,$60
 $9B40 DEFB $C0,$07,$1F,$B0,$C0,$03,$19,$D0
 $9B48 DEFB $C0,$03,$16,$F8,$C0,$03,$06,$D0
 $9B50 DEFB $F0,$03,$02,$F8,$E0,$03,$02,$D0
 $9B58 DEFB $E0,$07,$0E,$B0,$E0,$07,$06,$E0
 $9B60 DEFB $F0,$07,$00,$E0,$F0,$07,$00,$70
 $9B68 DEFB $E0,$07,$07,$60,$E0,$07,$0B,$70
 $9B70 DEFB $E0,$03,$0B,$60,$E0,$03,$0B,$78
 $9B78 DEFB $E0,$1F,$0B,$40,$C0,$0F,$07,$40
 $9B80 DEFB $C0,$0F,$1E,$E0,$C0,$0F,$19,$E0
 $9B88 DEFB $C0,$0F,$03,$E0,$F0,$07,$03,$E0
 $9B90 DEFB $F0,$07,$07,$F0,$E0,$03,$07,$F0
 $9B98 DEFB $E0,$03,$0F,$F8,$C0,$03,$03,$C0
 $9BA0 DEFB $80,$01,$1C,$38,$01,$80,$38,$1C
 $9BA8 DEFB $03,$C0,$40,$02,$1F,$F8,$C0,$03
 $9BB0 DEFB $1F,$F8,$00,$00,$FF,$FF,$00,$00
 $9BB8 DEFB $E0,$0F,$07,$C0,$C0,$07,$0D,$60
 $9BC0 DEFB $C0,$07,$1F,$B0,$C0,$03,$19,$D0
 $9BC8 DEFB $C0,$03,$16,$F8,$C0,$03,$06,$D0
 $9BD0 DEFB $F0,$03,$02,$F8,$E0,$03,$02,$D0
 $9BD8 DEFB $E0,$07,$0E,$B0,$E0,$07,$06,$E0
 $9BE0 DEFB $F0,$07,$00,$F0,$F0,$07,$00,$60
 $9BE8 DEFB $E0,$07,$07,$70,$E0,$03,$0B,$60
 $9BF0 DEFB $E0,$03,$06,$78,$E0,$03,$0E,$80
 $9BF8 DEFB $80,$1F,$1D,$C0,$80,$1F,$3B,$C0
 $9C00 DEFB $80,$0F,$31,$C0,$80,$0F,$03,$E0
 $9C08 DEFB $F8,$07,$03,$E0,$F0,$07,$03,$F0
 $9C10 DEFB $E0,$03,$07,$F0,$E0,$00,$0F,$F8
 $9C18 DEFB $E0,$00,$08,$FA,$E0,$00,$06,$77
 $9C20 DEFB $F0,$00,$04,$00,$F0,$FF,$06,$00
 $9C28 DEFB $F0,$FF,$06,$00,$F0,$FF,$04,$00
 $9C30 DEFB $F1,$FF,$00,$00,$FF,$FF,$00,$00
 $9C38 DEFB $01,$FF,$00,$00,$00,$FF,$54,$00
 $9C40 DEFB $00,$7F,$7E,$00,$00,$7F,$C3,$00
 $9C48 DEFB $00,$3F,$3D,$00,$00,$3F,$7E,$80
 $9C50 DEFB $00,$3F,$1A,$80,$00,$0F,$F6,$00
 $9C58 DEFB $00,$07,$3D,$E0,$80,$03,$1B,$30
 $9C60 DEFB $80,$03,$36,$D8,$80,$03,$05,$E8
 $9C68 DEFB $F0,$03,$05,$E8,$F0,$03,$05,$E8
 $9C70 DEFB $F0,$03,$05,$E8,$F0,$03,$04,$D8
 $9C78 DEFB $F8,$07,$02,$D0,$F8,$03,$00,$C0
 $9C80 DEFB $F0,$03,$02,$D8,$F0,$03,$06,$D8
 $9C88 DEFB $E0,$03,$05,$D0,$E0,$03,$0D,$C8
 $9C90 DEFB $E0,$03,$0E,$38,$E0,$83,$0C,$38
 $9C98 DEFB $E0,$83,$0E,$38,$C0,$81,$04,$08
 $9CA0 DEFB $C0,$81,$1E,$3C,$C0,$81,$04,$08
 $9CA8 DEFB $E1,$C3,$0C,$18,$80,$01,$0C,$18
 $9CB0 DEFB $80,$01,$2E,$5C,$80,$01,$32,$64
 $9CB8 DEFB $00,$FF,$54,$00,$00,$7F,$7E,$00
 $9CC0 DEFB $00,$7F,$C3,$00,$00,$3F,$3D,$00
 $9CC8 DEFB $00,$3F,$7E,$80,$00,$3F,$1A,$80
 $9CD0 DEFB $00,$0F,$F6,$00,$00,$07,$3D,$E0
 $9CD8 DEFB $80,$03,$1B,$30,$80,$03,$36,$D8
 $9CE0 DEFB $80,$03,$05,$E8,$F0,$03,$05,$E8
 $9CE8 DEFB $F0,$03,$05,$E8,$F0,$03,$05,$D8
 $9CF0 DEFB $F0,$03,$05,$D8,$F0,$03,$05,$D0
 $9CF8 DEFB $F0,$03,$03,$80,$F0,$03,$07,$78
 $9D00 DEFB $C0,$03,$06,$F8,$C0,$03,$1C,$F0
 $9D08 DEFB $C0,$07,$19,$E0,$C0,$0F,$03,$C0
 $9D10 DEFB $F8,$1F,$03,$80,$F8,$1F,$03,$C0
 $9D18 DEFB $F8,$07,$01,$C0,$F8,$07,$01,$B0
 $9D20 DEFB $F8,$07,$03,$D0,$F8,$01,$00,$B0
 $9D28 DEFB $FC,$01,$01,$9C,$E0,$01,$01,$9C
 $9D30 DEFB $E0,$01,$0B,$D8,$E0,$03,$0E,$50
 $9D38 DEFB $00,$FF,$54,$00,$00,$7F,$7E,$00
 $9D40 DEFB $00,$7F,$C3,$00,$00,$3F,$3D,$00
 $9D48 DEFB $00,$3F,$7E,$80,$00,$3F,$1A,$80
 $9D50 DEFB $00,$0F,$F6,$00,$00,$07,$3D,$E0
 $9D58 DEFB $80,$03,$1B,$30,$80,$03,$36,$D8
 $9D60 DEFB $80,$03,$05,$E8,$F0,$03,$05,$E8
 $9D68 DEFB $F0,$03,$03,$E8,$F0,$03,$03,$D8
 $9D70 DEFB $C0,$03,$07,$B8,$00,$03,$1F,$70
 $9D78 DEFB $00,$03,$FC,$00,$00,$03,$D1,$F8
 $9D80 DEFB $00,$03,$01,$F8,$F0,$03,$02,$F0
 $9D88 DEFB $F0,$07,$06,$F0,$E0,$07,$06,$E0
 $9D90 DEFB $E0,$0F,$0E,$E0,$E0,$0F,$0C,$C0
 $9D98 DEFB $E0,$0F,$06,$60,$F0,$03,$07,$60
 $9DA0 DEFB $C0,$03,$02,$F8,$C0,$03,$17,$10
 $9DA8 DEFB $C0,$07,$1D,$30,$C0,$03,$00,$30
 $9DB0 DEFB $FC,$03,$01,$78,$FC,$03,$01,$C8
 $9DB8 DEFB $01,$FF,$00,$00,$00,$FF,$54,$00
 $9DC0 DEFB $00,$7F,$7E,$00,$00,$7F,$C3,$00
 $9DC8 DEFB $00,$3F,$3D,$00,$00,$3F,$7E,$80
 $9DD0 DEFB $00,$3F,$1A,$80,$00,$0F,$F6,$00
 $9DD8 DEFB $00,$07,$3D,$E0,$80,$03,$1B,$30
 $9DE0 DEFB $80,$03,$36,$D8,$80,$03,$06,$E8
 $9DE8 DEFB $F0,$03,$05,$E8,$F0,$03,$03,$E8
 $9DF0 DEFB $F0,$03,$03,$D8,$00,$03,$07,$B8
 $9DF8 DEFB $00,$03,$DF,$70,$00,$03,$FE,$00
 $9E00 DEFB $00,$03,$00,$F8,$F0,$03,$03,$78
 $9E08 DEFB $F0,$03,$07,$78,$E0,$03,$07,$B8
 $9E10 DEFB $E0,$03,$0F,$38,$E0,$03,$0C,$38
 $9E18 DEFB $E0,$83,$0E,$38,$E0,$83,$04,$10
 $9E20 DEFB $E0,$83,$0E,$38,$E0,$83,$04,$10
 $9E28 DEFB $E1,$C3,$0C,$18,$80,$01,$0C,$18
 $9E30 DEFB $80,$01,$2E,$5C,$80,$01,$32,$64
 $9E38 DEFB $00,$FF,$54,$00,$00,$7F,$7E,$00
 $9E40 DEFB $00,$7F,$C3,$00,$00,$3F,$3D,$00
 $9E48 DEFB $00,$3F,$7E,$80,$00,$3F,$1A,$80
 $9E50 DEFB $00,$0F,$F6,$00,$00,$07,$3D,$E0
 $9E58 DEFB $80,$03,$1B,$30,$80,$03,$36,$D8
 $9E60 DEFB $80,$03,$05,$E8,$F0,$03,$05,$E8
 $9E68 DEFB $F0,$03,$05,$E8,$F0,$03,$05,$E8
 $9E70 DEFB $F0,$03,$03,$D8,$E0,$03,$07,$B0
 $9E78 DEFB $00,$03,$0F,$00,$00,$03,$7C,$F8
 $9E80 DEFB $00,$03,$71,$F0,$04,$07,$21,$E0
 $9E88 DEFB $88,$07,$01,$E0,$F8,$07,$02,$F0
 $9E90 DEFB $F8,$07,$03,$70,$F8,$03,$03,$70
 $9E98 DEFB $F8,$01,$03,$98,$F0,$01,$01,$BC
 $9EA0 DEFB $F0,$01,$07,$C8,$F0,$01,$00,$98
 $9EA8 DEFB $FC,$01,$01,$9C,$F0,$01,$01,$9C
 $9EB0 DEFB $F0,$01,$05,$98,$F0,$03,$06,$B0
 $9EB8 DEFB $00,$FF,$54,$00,$00,$7F,$7E,$00
 $9EC0 DEFB $00,$7F,$C3,$00,$00,$3F,$3D,$00
 $9EC8 DEFB $00,$3F,$7E,$80,$00,$3F,$1A,$80
 $9ED0 DEFB $00,$0F,$F6,$00,$00,$07,$3D,$E0
 $9ED8 DEFB $80,$03,$1B,$30,$80,$03,$36,$D8
 $9EE0 DEFB $80,$03,$05,$E8,$F0,$03,$05,$E8
 $9EE8 DEFB $F0,$03,$05,$E8,$F0,$03,$05,$E8
 $9EF0 DEFB $F0,$03,$05,$E8,$F0,$03,$05,$D0
 $9EF8 DEFB $F8,$03,$01,$C0,$F0,$03,$03,$B8
 $9F00 DEFB $E0,$03,$07,$78,$E0,$03,$0E,$F0
 $9F08 DEFB $E0,$07,$0D,$E0,$E0,$07,$03,$90
 $9F10 DEFB $E0,$07,$0E,$30,$E0,$07,$04,$70
 $9F18 DEFB $E0,$07,$0F,$70,$E0,$03,$02,$20
 $9F20 DEFB $C0,$03,$03,$78,$C0,$03,$17,$90
 $9F28 DEFB $C0,$07,$1C,$B0,$C0,$03,$00,$30
 $9F30 DEFB $FC,$03,$01,$78,$FC,$03,$01,$C8
 $9F38 DEFB $00,$FF,$54,$00,$00,$7F,$7E,$00
 $9F40 DEFB $00,$7F,$C3,$00,$00,$3F,$3D,$00
 $9F48 DEFB $00,$3F,$7E,$80,$00,$3F,$1A,$80
 $9F50 DEFB $00,$0F,$F6,$00,$00,$07,$3D,$E0
 $9F58 DEFB $80,$03,$1B,$30,$80,$03,$36,$D8
 $9F60 DEFB $80,$03,$05,$E8,$F0,$03,$05,$E8
 $9F68 DEFB $F0,$03,$03,$E8,$F0,$03,$03,$D8
 $9F70 DEFB $C0,$03,$07,$B8,$00,$03,$1F,$70
 $9F78 DEFB $00,$03,$FC,$00,$00,$03,$D1,$F8
 $9F80 DEFB $00,$03,$01,$F8,$E0,$03,$06,$F8
 $9F88 DEFB $E0,$03,$0E,$F0,$C0,$01,$0F,$78
 $9F90 DEFB $C0,$01,$16,$3C,$80,$81,$0C,$0C
 $9F98 DEFB $81,$C0,$30,$18,$03,$C0,$18,$06
 $9FA0 DEFB $03,$F0,$B0,$07,$03,$C0,$F8,$04
 $9FA8 DEFB $03,$C1,$08,$14,$E3,$C1,$00,$18
 $9FB0 DEFB $FF,$C3,$00,$00,$FF,$FF,$00,$00
 $9FB8 DEFB $00,$FF,$54,$00,$00,$7F,$7E,$00
 $9FC0 DEFB $00,$7F,$C3,$00,$00,$3F,$3D,$00
 $9FC8 DEFB $00,$3F,$7E,$80,$00,$3F,$1A,$80
 $9FD0 DEFB $00,$0F,$F6,$00,$00,$07,$3D,$E0
 $9FD8 DEFB $80,$03,$1B,$30,$00,$03,$34,$D8
 $9FE0 DEFB $00,$03,$C3,$E8,$00,$03,$FF,$E8
 $9FE8 DEFB $00,$03,$FF,$D8,$00,$03,$00,$38
 $9FF0 DEFB $F0,$03,$07,$F8,$F0,$03,$03,$F0
 $9FF8 DEFB $C0,$03,$00,$00,$80,$03,$1B,$F8
 $A000 DEFB $80,$03,$3D,$F8,$80,$03,$3D,$F0
 $A008 DEFB $80,$07,$35,$E0,$80,$07,$39,$E0
 $A010 DEFB $80,$00,$10,$F0,$00,$00,$18,$F3
 $A018 DEFB $00,$00,$BC,$7E,$01,$00,$E4,$16
 $A020 DEFB $01,$C0,$00,$03,$FF,$F8,$00,$01
 $A028 DEFB $FF,$F8,$00,$03,$FF,$F8,$00,$00
 $A030 DEFB $FF,$FF,$00,$00,$FF,$FF,$00,$00
 $A038 DEFB $FC,$3F,$00,$00,$FC,$3F,$01,$80
 $A040 DEFB $F8,$0F,$00,$00,$F0,$07,$03,$E0
 $A048 DEFB $E0,$07,$04,$10,$E0,$07,$0F,$F0
 $A050 DEFB $E0,$07,$00,$00,$C0,$07,$09,$90
 $A058 DEFB $C0,$07,$1F,$10,$C0,$07,$07,$A0
 $A060 DEFB $E0,$0F,$0E,$E0,$E0,$01,$0D,$00
 $A068 DEFB $E0,$01,$03,$FC,$F0,$01,$07,$18
 $A070 DEFB $E0,$01,$06,$E8,$E0,$01,$0E,$EC
 $A078 DEFB $C0,$01,$1F,$74,$C0,$01,$00,$30
 $A080 DEFB $C0,$01,$1F,$B4,$C0,$01,$1F,$C0
 $A088 DEFB $C0,$03,$0F,$D8,$E0,$03,$07,$D8
 $A090 DEFB $F0,$03,$03,$E0,$F0,$03,$03,$F0
 $A098 DEFB $F0,$03,$07,$C8,$F0,$03,$07,$B8
 $A0A0 DEFB $F0,$03,$07,$38,$E0,$01,$00,$00
 $A0A8 DEFB $E0,$01,$0F,$3C,$E0,$01,$00,$00
 $A0B0 DEFB $80,$01,$0F,$3C,$80,$01,$3B,$6C
 $A0B8 DEFB $FF,$0F,$00,$60,$FC,$07,$00,$00
 $A0C0 DEFB $F8,$03,$01,$F0,$F0,$03,$02,$08
 $A0C8 DEFB $F0,$03,$07,$F8,$F0,$03,$00,$00
 $A0D0 DEFB $E0,$03,$04,$C8,$E0,$03,$0F,$88
 $A0D8 DEFB $E0,$03,$03,$D0,$F0,$01,$07,$70
 $A0E0 DEFB $F0,$01,$06,$8C,$F0,$01,$01,$F8
 $A0E8 DEFB $F0,$03,$03,$38,$E0,$01,$06,$D8
 $A0F0 DEFB $C0,$01,$0E,$EC,$C0,$01,$1E,$EC
 $A0F8 DEFB $C0,$01,$00,$E0,$C0,$01,$1F,$6C
 $A100 DEFB $C0,$01,$1F,$6C,$C0,$01,$1F,$9C
 $A108 DEFB $C0,$01,$0F,$6C,$E0,$01,$07,$68
 $A110 DEFB $F0,$03,$03,$90,$F8,$07,$03,$E0
 $A118 DEFB $F8,$0F,$03,$C0,$F8,$0F,$03,$80
 $A120 DEFB $F8,$0F,$03,$A0,$F8,$03,$00,$20
 $A128 DEFB $F8,$03,$03,$D8,$F0,$03,$00,$30
 $A130 DEFB $C0,$07,$07,$A0,$C0,$0F,$1D,$80
 $A138 DEFB $FF,$0F,$00,$60,$FC,$07,$00,$00
 $A140 DEFB $F8,$03,$01,$F0,$F0,$03,$02,$08
 $A148 DEFB $F0,$03,$07,$F8,$F0,$03,$00,$00
 $A150 DEFB $E0,$03,$04,$C8,$E0,$03,$0F,$88
 $A158 DEFB $E0,$03,$03,$D0,$F0,$01,$07,$70
 $A160 DEFB $F0,$01,$06,$8C,$F0,$01,$01,$F8
 $A168 DEFB $F0,$03,$03,$18,$E0,$01,$06,$E8
 $A170 DEFB $C0,$01,$0E,$EC,$C0,$01,$1E,$EC
 $A178 DEFB $C0,$01,$01,$C0,$C0,$01,$1D,$BC
 $A180 DEFB $C0,$01,$1D,$BC,$C0,$01,$0C,$7C
 $A188 DEFB $E0,$01,$03,$7C,$F0,$01,$03,$78
 $A190 DEFB $E0,$03,$04,$F8,$E0,$03,$0F,$78
 $A198 DEFB $E0,$03,$00,$78,$F0,$03,$07,$B8
 $A1A0 DEFB $E0,$03,$00,$38,$80,$03,$0F,$00
 $A1A8 DEFB $80,$03,$3B,$78,$80,$03,$00,$00
 $A1B0 DEFB $F8,$07,$00,$F0,$F8,$07,$03,$B0
 $A1B8 DEFB $FF,$0F,$00,$00,$FF,$0F,$00,$60
 $A1C0 DEFB $F8,$0F,$00,$00,$F0,$07,$03,$E0
 $A1C8 DEFB $E0,$07,$04,$10,$E0,$07,$0F,$F0
 $A1D0 DEFB $E0,$07,$00,$00,$C0,$07,$09,$90
 $A1D8 DEFB $C0,$07,$1F,$10,$C0,$07,$07,$A0
 $A1E0 DEFB $E0,$0F,$0E,$E0,$E0,$01,$0D,$00
 $A1E8 DEFB $E0,$01,$03,$FC,$F0,$01,$07,$18
 $A1F0 DEFB $E0,$01,$06,$E8,$E0,$01,$0E,$EC
 $A1F8 DEFB $C0,$01,$1E,$EC,$C0,$01,$00,$E0
 $A200 DEFB $C0,$01,$1E,$EC,$C0,$01,$1E,$EC
 $A208 DEFB $C0,$01,$0F,$1C,$E0,$01,$06,$DC
 $A210 DEFB $F0,$01,$02,$D8,$F8,$03,$01,$38
 $A218 DEFB $F0,$03,$02,$F8,$F0,$03,$07,$78
 $A220 DEFB $F0,$03,$07,$B8,$E0,$01,$00,$00
 $A228 DEFB $E0,$01,$0F,$3C,$E0,$01,$00,$00
 $A230 DEFB $80,$01,$0F,$3C,$80,$01,$3A,$EC
 $A238 DEFB $FF,$0F,$00,$60,$FC,$07,$00,$00
 $A240 DEFB $F8,$03,$01,$F0,$F0,$03,$02,$08
 $A248 DEFB $F0,$03,$07,$F8,$F0,$03,$00,$00
 $A250 DEFB $E0,$03,$04,$C8,$E0,$03,$0F,$88
 $A258 DEFB $E0,$03,$03,$D0,$F0,$01,$07,$70
 $A260 DEFB $F0,$01,$06,$8C,$F0,$01,$01,$F8
 $A268 DEFB $F0,$03,$03,$18,$E0,$01,$06,$E8
 $A270 DEFB $C0,$01,$0E,$F4,$C0,$01,$1E,$F4
 $A278 DEFB $C0,$01,$00,$70,$C0,$01,$1F,$74
 $A280 DEFB $C0,$01,$1F,$74,$C0,$01,$1F,$8C
 $A288 DEFB $C0,$01,$0F,$6C,$E0,$01,$07,$6C
 $A290 DEFB $F0,$01,$03,$98,$F8,$03,$01,$F0
 $A298 DEFB $F8,$07,$02,$E0,$F8,$07,$02,$E0
 $A2A0 DEFB $F8,$07,$03,$70,$F8,$03,$00,$40
 $A2A8 DEFB $F8,$03,$03,$B8,$F0,$03,$00,$30
 $A2B0 DEFB $C0,$07,$06,$E0,$C0,$0F,$1D,$00
 $A2B8 DEFB $FF,$0F,$00,$60,$FC,$07,$00,$00
 $A2C0 DEFB $F8,$03,$01,$F0,$F0,$03,$02,$08
 $A2C8 DEFB $F0,$03,$07,$F8,$F0,$03,$00,$00
 $A2D0 DEFB $E0,$03,$04,$C8,$E0,$03,$0F,$88
 $A2D8 DEFB $E0,$03,$03,$D0,$F0,$01,$07,$70
 $A2E0 DEFB $F0,$01,$06,$8C,$F0,$01,$01,$F8
 $A2E8 DEFB $F0,$03,$03,$18,$E0,$01,$06,$E8
 $A2F0 DEFB $C0,$01,$0E,$EC,$C0,$01,$1F,$74
 $A2F8 DEFB $C0,$01,$00,$70,$C0,$01,$1F,$74
 $A300 DEFB $C0,$01,$1F,$8C,$C0,$01,$0D,$B4
 $A308 DEFB $E0,$01,$03,$B4,$F0,$01,$03,$C8
 $A310 DEFB $E0,$03,$07,$D0,$E0,$03,$0F,$B8
 $A318 DEFB $E0,$03,$00,$78,$F0,$03,$07,$B8
 $A320 DEFB $F0,$03,$00,$38,$C0,$03,$07,$80
 $A328 DEFB $C0,$03,$1D,$B8,$C0,$03,$00,$00
 $A330 DEFB $FC,$03,$00,$78,$FC,$03,$01,$D8
 $A338 DEFB $FF,$0F,$00,$60,$FC,$07,$00,$00
 $A340 DEFB $F8,$03,$01,$F0,$F0,$03,$02,$08
 $A348 DEFB $F0,$03,$07,$F8,$F0,$03,$00,$00
 $A350 DEFB $E0,$03,$04,$C8,$E0,$03,$0F,$88
 $A358 DEFB $E0,$03,$03,$D0,$F0,$01,$07,$70
 $A360 DEFB $F0,$01,$06,$8C,$F0,$01,$01,$F8
 $A368 DEFB $F0,$03,$03,$18,$E0,$01,$06,$E8
 $A370 DEFB $C0,$01,$0E,$EC,$C0,$01,$1E,$EC
 $A378 DEFB $C0,$01,$1E,$EC,$C0,$01,$04,$C0
 $A380 DEFB $C0,$01,$1B,$3C,$C0,$01,$1B,$78
 $A388 DEFB $C0,$03,$0C,$F8,$E0,$03,$07,$F8
 $A390 DEFB $F0,$03,$03,$F0,$E0,$07,$07,$E0
 $A398 DEFB $00,$03,$0F,$D0,$00,$00,$B7,$B8
 $A3A0 DEFB $00,$00,$9A,$76,$00,$00,$E8,$2C
 $A3A8 DEFB $03,$80,$30,$06,$87,$F0,$30,$02
 $A3B0 DEFB $87,$F8,$00,$00,$FF,$FF,$00,$00
 $A3B8 DEFB $FF,$0F,$00,$60,$FC,$07,$00,$00
 $A3C0 DEFB $F8,$03,$01,$F0,$F0,$03,$02,$08
 $A3C8 DEFB $F0,$03,$07,$F8,$F0,$03,$00,$00
 $A3D0 DEFB $E0,$03,$04,$C8,$E0,$03,$0F,$88
 $A3D8 DEFB $E0,$03,$03,$D0,$F0,$01,$07,$F0
 $A3E0 DEFB $F0,$01,$07,$04,$00,$01,$00,$F8
 $A3E8 DEFB $00,$03,$6F,$F8,$00,$03,$6F,$F0
 $A3F0 DEFB $00,$03,$00,$08,$C0,$03,$1F,$F8
 $A3F8 DEFB $C0,$01,$00,$00,$C0,$01,$1F,$FC
 $A400 DEFB $C0,$01,$1F,$FC,$C0,$00,$1F,$FC
 $A408 DEFB $00,$00,$0C,$FB,$00,$00,$83,$FB
 $A410 DEFB $00,$00,$97,$F2,$00,$00,$D7,$CB
 $A418 DEFB $00,$00,$56,$01,$00,$FC,$D0,$01
 $A420 DEFB $07,$FC,$C0,$00,$1F,$FF,$00,$00
 $A428 DEFB $FF,$FF,$00,$00,$FF,$FF,$00,$00
 $A430 DEFB $FF,$FF,$00,$00,$FF,$FF,$00,$00
 $A438 DEFB $FF,$FF,$00,$00,$FF,$FF,$00,$00
 $A440 DEFB $FF,$FF,$00,$00,$E0,$FF,$00,$00
 $A448 DEFB $C0,$7F,$0A,$00,$80,$3F,$15,$00
 $A450 DEFB $80,$3F,$2A,$80,$00,$3F,$15,$00
 $A458 DEFB $00,$1F,$CA,$80,$00,$0F,$75,$40
 $A460 DEFB $00,$0F,$6A,$A0,$00,$0F,$35,$40
 $A468 DEFB $80,$0F,$0A,$A0,$C0,$07,$15,$40
 $A470 DEFB $C0,$03,$0A,$10,$C0,$03,$14,$E8
 $A478 DEFB $F8,$03,$02,$E8,$F8,$03,$03,$68
 $A480 DEFB $F8,$03,$03,$68,$F8,$03,$00,$60
 $A488 DEFB $F8,$01,$03,$88,$F8,$01,$03,$B4
 $A490 DEFB $F8,$01,$03,$B4,$F0,$01,$03,$CC
 $A498 DEFB $F0,$01,$07,$FC,$F0,$01,$02,$A8
 $A4A0 DEFB $E0,$03,$05,$50,$E0,$07,$0D,$E0
 $A4A8 DEFB $E0,$0F,$0D,$C0,$E0,$07,$06,$E0
 $A4B0 DEFB $80,$03,$06,$30,$80,$03,$39,$D8
 $A4B8 DEFB $FF,$FF,$00,$00,$E0,$FF,$00,$00
 $A4C0 DEFB $C0,$7F,$0A,$00,$80,$3F,$15,$00
 $A4C8 DEFB $80,$3F,$2A,$80,$00,$3F,$15,$00
 $A4D0 DEFB $00,$1F,$CA,$80,$00,$1F,$75,$40
 $A4D8 DEFB $00,$1F,$6A,$80,$00,$0F,$35,$40
 $A4E0 DEFB $80,$0F,$0A,$A0,$C0,$0F,$15,$40
 $A4E8 DEFB $C0,$07,$0A,$E0,$C0,$03,$15,$10
 $A4F0 DEFB $C0,$03,$02,$E8,$F8,$03,$02,$E8
 $A4F8 DEFB $F8,$03,$02,$E8,$F8,$03,$03,$68
 $A500 DEFB $F8,$03,$00,$60,$F8,$01,$03,$98
 $A508 DEFB $F8,$01,$03,$6C,$F8,$01,$03,$6C
 $A510 DEFB $F0,$01,$03,$9C,$F0,$01,$07,$FC
 $A518 DEFB $F0,$01,$02,$A8,$F0,$03,$01,$50
 $A520 DEFB $F0,$07,$05,$E0,$F0,$0F,$05,$80
 $A528 DEFB $F0,$0F,$05,$C0,$F0,$07,$02,$E0
 $A530 DEFB $C0,$07,$00,$70,$C0,$07,$1B,$80
 $A538 DEFB $FF,$FF,$00,$00,$E0,$FF,$00,$00
 $A540 DEFB $C0,$7F,$0A,$00,$80,$3F,$15,$00
 $A548 DEFB $80,$3F,$2A,$80,$00,$3F,$15,$00
 $A550 DEFB $00,$1F,$CA,$80,$00,$1F,$75,$40
 $A558 DEFB $00,$1F,$6A,$80,$00,$0F,$35,$40
 $A560 DEFB $80,$0F,$0A,$A0,$C0,$0F,$15,$40
 $A568 DEFB $C0,$07,$0A,$E0,$C0,$03,$15,$10
 $A570 DEFB $C0,$03,$02,$E8,$F8,$03,$02,$E8
 $A578 DEFB $F8,$03,$02,$E8,$F8,$03,$02,$E8
 $A580 DEFB $F8,$03,$00,$C0,$F8,$01,$03,$38
 $A588 DEFB $F8,$01,$02,$DC,$F8,$01,$02,$DC
 $A590 DEFB $F0,$01,$03,$3C,$F0,$01,$07,$FC
 $A598 DEFB $F0,$01,$02,$A8,$F8,$03,$01,$50
 $A5A0 DEFB $F8,$07,$03,$D0,$F8,$07,$03,$B0
 $A5A8 DEFB $F8,$07,$01,$B0,$FC,$03,$01,$D0
 $A5B0 DEFB $F0,$03,$00,$E8,$F0,$03,$07,$70
 $A5B8 DEFB $FF,$FF,$00,$00,$FF,$FF,$00,$00
 $A5C0 DEFB $FF,$FF,$00,$00,$C1,$FF,$00,$00
 $A5C8 DEFB $80,$FF,$14,$00,$00,$7F,$2A,$00
 $A5D0 DEFB $00,$3F,$55,$00,$00,$3F,$0A,$80
 $A5D8 DEFB $00,$3F,$D5,$00,$00,$1F,$6A,$80
 $A5E0 DEFB $00,$0F,$35,$40,$80,$0F,$2A,$A0
 $A5E8 DEFB $80,$0F,$15,$40,$C0,$07,$0A,$E0
 $A5F0 DEFB $C0,$03,$15,$10,$C0,$03,$02,$E8
 $A5F8 DEFB $F8,$03,$02,$E8,$F8,$03,$02,$E8
 $A600 DEFB $F8,$03,$02,$E8,$F8,$03,$00,$C0
 $A608 DEFB $F8,$01,$02,$58,$F8,$01,$01,$BC
 $A610 DEFB $F8,$01,$01,$BC,$F0,$01,$02,$7C
 $A618 DEFB $F0,$01,$07,$FC,$F0,$01,$02,$A8
 $A620 DEFB $E0,$03,$05,$D0,$E0,$07,$0F,$20
 $A628 DEFB $E0,$0F,$0E,$E0,$E0,$0F,$07,$60
 $A630 DEFB $80,$07,$07,$60,$80,$07,$3B,$B0
 $A638 DEFB $FF,$FF,$00,$00,$E0,$FF,$00,$00
 $A640 DEFB $C0,$7F,$0A,$00,$80,$3F,$15,$00
 $A648 DEFB $80,$3F,$2A,$80,$00,$3F,$15,$00
 $A650 DEFB $00,$1F,$CA,$80,$00,$1F,$75,$40
 $A658 DEFB $00,$1F,$6A,$80,$00,$0F,$35,$40
 $A660 DEFB $80,$0F,$0A,$A0,$C0,$0F,$15,$40
 $A668 DEFB $C0,$07,$0A,$E0,$C0,$03,$15,$10
 $A670 DEFB $C0,$03,$02,$E8,$F8,$03,$02,$E8
 $A678 DEFB $F8,$03,$02,$E8,$F8,$03,$02,$E8
 $A680 DEFB $F8,$03,$00,$E0,$F8,$01,$03,$28
 $A688 DEFB $F8,$01,$02,$DC,$F8,$01,$02,$DC
 $A690 DEFB $F0,$01,$03,$3C,$F0,$01,$07,$FC
 $A698 DEFB $F0,$01,$02,$A8,$F8,$03,$01,$70
 $A6A0 DEFB $F0,$07,$03,$C0,$F0,$1F,$07,$80
 $A6A8 DEFB $F0,$0F,$07,$40,$F0,$07,$03,$A0
 $A6B0 DEFB $C0,$07,$03,$B0,$C0,$07,$1D,$C0
 $A6B8 DEFB $FF,$FF,$00,$00,$E0,$FF,$00,$00
 $A6C0 DEFB $C0,$7F,$0A,$00,$80,$3F,$15,$00
 $A6C8 DEFB $80,$3F,$2A,$80,$00,$3F,$15,$00
 $A6D0 DEFB $00,$1F,$CA,$80,$00,$1F,$75,$40
 $A6D8 DEFB $00,$1F,$6A,$80,$00,$0F,$35,$40
 $A6E0 DEFB $80,$0F,$0A,$A0,$C0,$0F,$15,$40
 $A6E8 DEFB $C0,$07,$0A,$E0,$C0,$03,$15,$10
 $A6F0 DEFB $C0,$03,$02,$E8,$F8,$03,$02,$E8
 $A6F8 DEFB $F8,$03,$02,$E8,$F8,$03,$03,$68
 $A700 DEFB $F8,$03,$00,$60,$F8,$01,$03,$48
 $A708 DEFB $F8,$01,$03,$B4,$F8,$01,$03,$B4
 $A710 DEFB $F0,$01,$03,$CC,$F0,$01,$07,$FC
 $A718 DEFB $F0,$01,$02,$A8,$F8,$03,$01,$50
 $A720 DEFB $F0,$07,$02,$E0,$F0,$0F,$05,$C0
 $A728 DEFB $F0,$0F,$05,$E0,$F0,$07,$02,$E0
 $A730 DEFB $C0,$03,$00,$70,$C0,$03,$1B,$B8
 $A738 DEFB $FF,$FF,$00,$00,$E0,$FF,$00,$00
 $A740 DEFB $C0,$7F,$0A,$00,$80,$3F,$15,$00
 $A748 DEFB $80,$3F,$2A,$80,$00,$3F,$15,$00
 $A750 DEFB $00,$1F,$CA,$80,$00,$1F,$75,$40
 $A758 DEFB $00,$1F,$6A,$80,$00,$0F,$35,$40
 $A760 DEFB $80,$0F,$0A,$A0,$C0,$0F,$15,$40
 $A768 DEFB $C0,$07,$0A,$E0,$C0,$03,$15,$10
 $A770 DEFB $C0,$03,$02,$E8,$F0,$03,$00,$E8
 $A778 DEFB $C0,$03,$1B,$E8,$C0,$03,$1B,$D8
 $A780 DEFB $C0,$03,$00,$00,$F0,$03,$03,$F8
 $A788 DEFB $F0,$01,$07,$F8,$C0,$01,$07,$FC
 $A790 DEFB $80,$01,$1B,$FC,$80,$00,$3B,$FC
 $A798 DEFB $80,$00,$33,$FD,$80,$00,$32,$AB
 $A7A0 DEFB $80,$00,$38,$16,$83,$80,$38,$3D
 $A7A8 DEFB $01,$80,$18,$1D,$01,$C0,$EC,$01
 $A7B0 DEFB $01,$FC,$00,$00,$FF,$FF,$00,$00
 $A7B8 DEFB $FF,$FF,$00,$00,$E0,$FF,$00,$00
 $A7C0 DEFB $C0,$7F,$0A,$00,$80,$3F,$15,$00
 $A7C8 DEFB $80,$3F,$2A,$80,$00,$3F,$15,$00
 $A7D0 DEFB $00,$1F,$CA,$80,$00,$1F,$75,$40
 $A7D8 DEFB $00,$1F,$6A,$80,$00,$0F,$35,$40
 $A7E0 DEFB $80,$0F,$0A,$A0,$C0,$0F,$15,$40
 $A7E8 DEFB $C0,$07,$0A,$20,$00,$03,$01,$D0
 $A7F0 DEFB $00,$03,$DF,$E8,$00,$03,$DF,$E8
 $A7F8 DEFB $00,$03,$00,$18,$F8,$03,$03,$F8
 $A800 DEFB $F8,$03,$00,$00,$F0,$03,$03,$F8
 $A808 DEFB $E0,$01,$07,$F8,$00,$01,$0B,$FC
 $A810 DEFB $00,$00,$9B,$FC,$00,$00,$BB,$FD
 $A818 DEFB $00,$00,$BA,$AB,$00,$00,$70,$16
 $A820 DEFB $07,$80,$E0,$3D,$0F,$80,$80,$1D
 $A828 DEFB $3F,$C0,$00,$01,$FF,$FC,$00,$00
 $A830 DEFB $FF,$FF,$00,$00,$FF,$FF,$00,$00

; Data block at A838
b$A838 DEFB $00

; Data block at A839
b$A839 DEFB $00,$00

; Temp Stack Pointer Storage
@label=Temp_StackPointer_Storage
g$A83B DEFW $0000

; Routine at A83D
;
; Used by the routines at #R$EEC1, #R$F10E, #R$F578, #R$F5F1 and #R$F814.
c$A83D DI            ; Disable interrupts.
 $A83E EXX           ; Switch to the shadow registers.
 $A83F PUSH AF       ; Stash #REGaf on the stack.
 $A840 LD ($A83B),SP ; Write #REGsp to #R$A83B.
 $A844 LD L,A        ; {Create an offset in #REGhl.
 $A845 LD H,$00      ; }
 $A847 ADD HL,HL     ;
 $A848 ADD HL,HL     ;
 $A849 ADD HL,HL     ;
 $A84A ADD HL,HL     ;
 $A84B ADD HL,HL     ;
 $A84C LD SP,$8378   ; {#REGsp=#R$8378+#REGhl.
 $A84F ADD HL,SP     ;
 $A850 LD SP,HL      ; }
 $A851 LD A,($A838)  ; {#REGb=*#R$A838.
 $A854 LD B,A        ; }
 $A855 AND %00000111 ; Keep only bits 0-2.
 $A857 INC A         ; Increment #REGa by one.
 $A858 LD ($A87B),A  ; Write #REGa to #R$A87A(#N$A87B).
 $A85B LD A,B        ; #REGa=#REGb.
 $A85C AND %11111000 ; Keep only bits 3-7.
 $A85E RRCA          ;
 $A85F RRCA          ;
 $A860 RRCA          ;
 $A861 LD ($EFAF),A  ;
 $A864 ADD A,$02     ;
 $A866 LD E,A        ;
 $A867 LD A,($A839)  ;
 $A86A SUB $40       ;
 $A86C LD L,A        ;
 $A86D LD H,$00      ;
 $A86F ADD HL,HL     ;
 $A870 ADD HL,HL     ;
 $A871 ADD HL,HL     ;
 $A872 ADD HL,HL     ;
 $A873 ADD HL,HL     ;
 $A874 LD D,$6B      ; #REGd=#N$6B.
 $A876 ADD HL,DE     ; #REGhl+=#REGde.
 $A877 LD C,$10      ; #REGc=#N$10.
*$A879 POP DE        ; Restore #REGde from the stack.
; This is modified from #R$A858.
 $A87A LD B,$00      ; #REGb=#N$00.
 $A87C DEC B         ; Decrease #REGb by one.
 $A87D JR Z,$A889    ; Jump to #R$A889 if #REGb is zero.
 $A87F XOR A         ; #REGa=#N$00.
*$A880 SRL E         ;
 $A882 RR D          ;
 $A884 RRA           ;
 $A885 DJNZ $A880    ;
 $A887 OR (HL)       ;
 $A888 LD (HL),A     ;
*$A889 DEC HL        ;
 $A88A LD A,(HL)     ;
 $A88B OR D          ;
 $A88C LD (HL),A     ;
 $A88D DEC HL        ;
 $A88E LD A,(HL)     ;
 $A88F OR E          ;
 $A890 LD (HL),A     ;
 $A891 LD DE,$0022   ;
 $A894 ADD HL,DE     ;
 $A895 DEC C         ;
 $A896 JP NZ,$A879   ;
 $A899 LD SP,($A83B) ; Restore #REGsp from #R$A83B.
 $A89D POP AF        ; Restore #REGaf from the stack.
 $A89E EXX           ; Switch to the normal registers.
 $A89F RET           ; Return.

; Routine at A8A0
;
; Used by the routines at #R$ED2A, #R$EFC7, #R$F10E, #R$F5F1 and #R$F814.
c$A8A0 EXX           ; Switch to the shadow registers.
 $A8A1 PUSH AF       ; Stash #REGaf on the stack.
 $A8A2 LD ($A83B),SP ; Write #REGsp to #R$A83B.
 $A8A6 LD SP,$8378   ; #REGsp=#R$8378.
 $A8A9 LD L,A        ; {Create an offset in #REGhl.
 $A8AA LD H,$00      ; }
 $A8AC ADD HL,HL     ; {#REGsp=(#REGhl*#N$20)+#REGsp.
 $A8AD ADD HL,HL     ;
 $A8AE ADD HL,HL     ;
 $A8AF ADD HL,HL     ;
 $A8B0 ADD HL,HL     ;
 $A8B1 ADD HL,SP     ;
 $A8B2 LD SP,HL      ; }
 $A8B3 LD A,($A838)  ; {#REGb=#R$A838.
 $A8B6 LD B,A        ; }
 $A8B7 AND %00000111 ; Keep only bits 0-2.
 $A8B9 INC A         ; Increment #REGa by one.
 $A8BA LD ($A8E0),A  ; {Write #REGa to #LIST { #R$A8DF(#N$A8E0) } {
 $A8BD LD ($A8FC),A  ; #R$A8FB(#N$A8FC) } LIST#}
 $A8C0 LD A,B        ;
 $A8C1 AND %11111000 ; Keep only bits 3-7.
 $A8C3 RRCA          ;
 $A8C4 RRCA          ;
 $A8C5 RRCA          ;
 $A8C6 LD ($EFAF),A  ; Write #REGa to #R$EFAE(#N$EFAF).
 $A8C9 ADD A,$02     ; {#REGe=#REGa+#N$02.
 $A8CB LD E,A        ; }
 $A8CC LD C,$10      ; #REGc=#N$10.
 $A8CE LD A,($A839)  ; #REGa=*#R$A839.
 $A8D1 SUB $40       ;
 $A8D3 LD L,A        ;
 $A8D4 LD H,$00      ;
 $A8D6 ADD HL,HL     ;
 $A8D7 ADD HL,HL     ;
 $A8D8 ADD HL,HL     ;
 $A8D9 ADD HL,HL     ;
 $A8DA ADD HL,HL     ;
 $A8DB LD D,$6B      ;
 $A8DD ADD HL,DE     ;
*$A8DE POP DE        ;
 $A8DF LD B,$00      ;
 $A8E1 DEC B         ;
 $A8E2 JR Z,$A8F0    ;
 $A8E4 SCF           ;
 $A8E5 LD A,$FF      ;
*$A8E7 RR E          ;
 $A8E9 RR D          ;
 $A8EB RRA           ;
 $A8EC DJNZ $A8E7    ;
 $A8EE AND (HL)      ;
 $A8EF LD (HL),A     ;
*$A8F0 DEC HL        ;
 $A8F1 LD A,(HL)     ;
 $A8F2 AND D         ;
 $A8F3 LD (HL),A     ;
 $A8F4 DEC HL        ;
 $A8F5 LD A,(HL)     ;
 $A8F6 AND E         ;
 $A8F7 LD (HL),A     ;
 $A8F8 INC HL        ;
 $A8F9 INC HL        ;
 $A8FA POP DE        ;
 $A8FB LD B,$00      ;
 $A8FD DEC B         ;
 $A8FE JR Z,$A90A    ;
 $A900 XOR A         ;
*$A901 SRL E         ;
 $A903 RR D          ;
 $A905 RRA           ;
 $A906 DJNZ $A901    ;
 $A908 OR (HL)       ;
 $A909 LD (HL),A     ;
*$A90A DEC HL        ;
 $A90B LD A,(HL)     ;
 $A90C OR D          ;
 $A90D LD (HL),A     ;
 $A90E DEC HL        ;
 $A90F LD A,(HL)     ;
 $A910 OR E          ;
 $A911 LD (HL),A     ;
 $A912 LD DE,$0022   ; {#REGhl+=#N($0022,$04,$04).
 $A915 ADD HL,DE     ; }
 $A916 DEC C         ; Decrease #REGc by one.
 $A917 JP NZ,$A8DE   ; If #REGc is not zero, jump to #R$A8DE.
 $A91A EXX           ; Switch to the normal registers.
 $A91B LD SP,($A83B) ; Restore #REGsp from #R$A83B.
 $A91F POP AF        ; Restore #REGaf from the stack.
 $A920 RET           ; Return.

; Routine at A921
;
; Used by the routines at #R$A92C, #R$AA30, #R$B1A6 and #R$E79B.
c$A921 PUSH IY       ; {#REGhl=#REGiy.
 $A923 POP HL        ; }
 $A924 LD DE,($B09D) ; #REGde=*#R$B09D.
 $A928 AND A         ;
 $A929 SBC HL,DE     ; #REGhl-=#REGde.
 $A92B RET           ; Return.

; Move Non-Player Characters
;
; Used by the routine at #R$81AE.
@label=Handler_Move_Characters
c$A92C PUSH IY         ; Stash #REGiy on the stack.
 $A92E LD A,(IY+$0F)   ; {Write #REGiy+#N$0F to #R$B951.
 $A931 LD ($B951),A    ; }
 $A934 LD IY,$BC67     ; #REGiy=#R$BC67.
 $A938 LD A,($B55F)    ; {#REGb=(*#R$B55F)+#N$04.
 $A93B ADD A,$04       ;
 $A93D LD B,A          ; }
*$A93E PUSH BC         ; Stash #REGbc on the stack.
 $A93F LD A,($B55F)    ;
 $A942 OR A            ;
 $A943 JR NZ,$A94C     ;
 $A945 CALL $A921      ; Call #R$A921.
 $A948 JR NZ,$A94C     ;
 $A94A INC IY          ; Increment #REGiy by one.
*$A94C LD A,(IY+$0F)   ;
 $A94F CP (IY+$5A)     ;
 $A952 JR NZ,$A95B     ;
 $A954 LD A,(IY-$14)   ;
 $A957 OR A            ;
 $A958 JP NZ,$A991     ;
*$A95B CALL $AFC4      ; Call #R$AFC4.
 $A95E LD A,(IY+$46)   ;
 $A961 OR A            ;
 $A962 JR Z,$A96A      ;
 $A964 CALL $B1B9      ; Call #R$B1B9.
 $A967 JP $A989        ; Jump to #R$A989.
*$A96A LD A,(IY+$37)   ; #REGa=*#REGiy+N$37.
 $A96D OR A            ; {If #REGa is zero, jump to #R$A975.
 $A96E JR Z,$A975      ; }
 $A970 CALL $B197      ; Call #R$B197.
 $A973 JR $A989        ; Jump to #R$A989.
*$A975 LD A,(IY+$64)   ; {#REGe=(*#REGiy+#N$64)*#N$02.
 $A978 ADD A,A         ;
 $A979 LD E,A          ; }
 $A97A LD D,$00        ; #REGd=#N$00.
 $A97C LD HL,$AAA0     ; {#REGhl=#R$AAA0+#REGde.
 $A97F ADD HL,DE       ; }
 $A980 LD E,(HL)       ; #REGe=*#REGhl.
 $A981 INC HL          ; Increment #REGhl by one.
 $A982 LD D,(HL)       ; #REGd=*#REGhl.
 $A983 EX DE,HL        ; Switch the #REGde and #REGhl registers.
 $A984 LD DE,$A989     ; #REGde=#R$A989.
 $A987 PUSH DE         ; Stash #REGde on the stack.
 $A988 JP (HL)         ; Jump to *#REGhl.
; TODO.
*$A989 POP BC          ; Restore #REGbc from the stack.
 $A98A INC IY          ; Increment #REGiy by one.
 $A98C DJNZ $A93E      ;
 $A98E POP IY          ; Restore #REGiy from the stack.
 $A990 RET             ; Return.
*$A991 CALL $AFC4      ; Call #R$AFC4.
 $A994 LD A,(IY+$46)   ;
 $A997 OR A            ;
 $A998 JR Z,$A9A0      ;
 $A99A CALL $B1B9      ;
 $A99D JP $A989        ;
*$A9A0 LD A,(IY+$37)   ;
 $A9A3 OR A            ;
 $A9A4 JR Z,$A9AC      ;
 $A9A6 CALL $B197      ;
 $A9A9 JP $A989        ;
*$A9AC LD A,(IY+$0A)   ;
 $A9AF CP $98          ;
 $A9B1 JR Z,$A9CA      ;
 $A9B3 LD A,(IY+$05)   ;
 $A9B6 CP $78          ;
 $A9B8 JR NC,$A9C4     ;
 $A9BA LD (IY+$3C),$01 ;
*$A9BE CALL $B288      ;
 $A9C1 JP $A989        ;
*$A9C4 LD (IY+$3C),$FF ;
 $A9C8 JR $A9BE        ;
*$A9CA LD B,(IY-$0F)   ;
 $A9CD CALL $AA8C      ;
 $A9D0 INC HL          ;
 $A9D1 LD A,(HL)       ;
 $A9D2 PUSH AF         ;
 $A9D3 LD A,(IY+$05)   ;
 $A9D6 CP (HL)         ;
 $A9D7 JR NC,$A9DF     ;
 $A9D9 LD (IY+$3C),$01 ;
 $A9DD JR $A9E3        ;
*$A9DF LD (IY+$3C),$FF ;
*$A9E3 CALL $B288      ;
 $A9E6 POP AF          ;
 $A9E7 CP (IY+$05)     ;
 $A9EA JP NZ,$A989     ;
 $A9ED LD B,(IY-$0F)   ;
 $A9F0 CALL $AA30      ;
 $A9F3 LD (IY-$14),$00 ;
 $A9F7 LD E,(IY+$78)   ;
 $A9FA LD D,(IY+$7D)   ;
 $A9FD LD H,$00        ;
 $A9FF INC (IY-$05)    ;
 $AA02 LD L,(IY-$05)   ;
 $AA05 ADD HL,DE       ;
 $AA06 LD A,(HL)       ;
 $AA07 CP $FF          ;
 $AA09 JR NZ,$AA10     ;
 $AA0B EX DE,HL        ;
 $AA0C LD (IY-$05),$00 ;
*$AA10 LD E,(HL)       ;
 $AA11 CALL $AE8A      ; Call #R$AE8A.
 $AA14 LD A,B          ;
 $AA15 OR A            ;
 $AA16 JR NZ,$AA24     ;
*$AA18 CALL $AED7      ;
 $AA1B LD C,$00        ;
 $AA1D LD D,A          ;
 $AA1E LD A,D          ;
 $AA1F CP (IY+$0F)     ;
 $AA22 JR Z,$AA18      ;
*$AA24 LD (IY+$5A),D   ; Write #REGd to #REGiy+#N$5A.
 $AA27 LD (IY-$0F),C   ; Write #REGc to #REGiy+#N$0F.
 $AA2A CALL $ADBA      ; Call #R$ADBA.
 $AA2D JP $A989        ; Jump to #R$A989.

; Handler: Pick Up Objects
;
; Used by the routines at #R$A92C and #R$EABF.
@label=Handler_PickUpObjects
c$AA30 PUSH HL       ; Stash #REGhl on the stack.
 $AA31 CALL $AA8C    ; Call #R$AA8C.
 $AA34 INC HL        ; {Increment #REGhl by three.
 $AA35 INC HL        ;
 $AA36 INC HL        ; }
 $AA37 LD A,(HL)     ;
 $AA38 AND (IY-$28)  ;
 $AA3B JR Z,$AA74    ;
 $AA3D LD A,(HL)     ;
 $AA3E AND %10000000 ; Keep only bit 7.
 $AA40 JR Z,$AA49    ;
 $AA42 PUSH HL       ; Stash #REGhl on the stack.
 $AA43 CALL $A921    ; Call #R$A921.
 $AA46 POP HL        ; Restore #REGhl from the stack.
 $AA47 JR NZ,$AA74   ;
*$AA49 LD A,(HL)     ;
 $AA4A RES 7,A       ;
 $AA4C LD D,A        ;
 $AA4D LD A,(HL)     ;
 $AA4E AND %10000000 ; Keep only bit 7.
 $AA50 OR (IY-$32)   ;
 $AA53 LD (HL),A     ;
 $AA54 LD A,(IY-$37) ;
 $AA57 LD (IY-$32),A ;
 $AA5A LD (IY-$37),D ;
 $AA5D LD A,(IY+$55) ;
 $AA60 DEC HL        ; {Decrease #REGhl by three.
 $AA61 DEC HL        ;
 $AA62 DEC HL        ; }
 $AA63 LD E,(HL)     ;
 $AA64 LD (HL),A     ;
 $AA65 LD A,(IY+$50) ;
 $AA68 LD (IY+$55),A ;
 $AA6B LD (IY+$50),E ;
 $AA6E CALL $A921    ; Call #R$A921.
 $AA71 CALL Z,$E41D  ;
*$AA74 LD A,($B951)  ;
 $AA77 CP (IY+$0F)   ;
 $AA7A CALL Z,$AA7F  ;
 $AA7D POP HL        ; Restore #REGhl from the stack.
 $AA7E RET           ; Return.

; Routine at AA7F
;
; Used by the routines at #R$AA30 and #R$EABF.
c$AA7F LD BC,$FF0A   ; #REGbc=#N$FF0A.
 $AA82 LD DE,$0114   ; #REGde=#N$0114.
 $AA85 LD HL,$1401   ; #REGhl=#N$1401.
 $AA88 CALL $E3D3    ; Call #R$E3D3.
 $AA8B RET           ; Return.

; Routine at AA8C
;
; Used by the routines at #R$A92C, #R$AA30, #R$EABF, #R$EB55, #R$EB79, #R$EC2B
; and #R$EEC1.
c$AA8C LD A,(IY+$0F) ; #REGa=*#REGiy+#N$0F.
 $AA8F LD HL,$BCE9   ; #REGhl=#R$BCE9.
 $AA92 CALL $AC6C    ; Call #R$AC6C.
 $AA95 LD A,B        ;
 $AA96 OR A          ;
 $AA97 JR Z,$AA9F    ;
*$AA99 INC HL        ;
 $AA9A INC HL        ;
 $AA9B INC HL        ;
 $AA9C INC HL        ;
 $AA9D DJNZ $AA99    ;
*$AA9F RET           ; Return.

; Jump Table
@label=Table_Jump
w$AAA0 DEFW $AAB2
 $AAA2 DEFW $AADD
 $AAA4 DEFW $AB09
 $AAA6 DEFW $AB26
 $AAA8 DEFW $AB43
 $AAAA DEFW $AB60
 $AAAC DEFW $AB9B
 $AAAE DEFW $AADD
 $AAB0 DEFW $AAB2

; Routine at AAB2
c$AAB2 LD A,(IY+$0A)   ;
 $AAB5 CP $98          ;
 $AAB7 JR Z,$AACE      ;
 $AAB9 LD A,(IY+$0F)   ;
 $AABC CP $1F          ;
 $AABE JR NZ,$AACE     ;
 $AAC0 LD A,(IY+$05)   ;
 $AAC3 CP $78          ;
 $AAC5 JR NC,$AACE     ;
 $AAC7 LD (IY+$3C),$01 ;
 $AACB JP $B288        ;
*$AACE LD (IY+$3C),$FF ;
 $AAD2 CALL $B288      ;
 $AAD5 LD A,(IY+$05)   ;
 $AAD8 OR A            ;
 $AAD9 JP Z,$AE5D      ;
 $AADC RET             ;

; Routine at AADD
c$AADD LD A,(IY+$0A)   ;
 $AAE0 CP $98          ;
 $AAE2 JR Z,$AAF9      ;
 $AAE4 LD A,(IY+$0F)   ;
 $AAE7 CP $1F          ;
 $AAE9 JR NZ,$AAF9     ;
 $AAEB LD A,(IY+$05)   ;
 $AAEE CP $78          ;
 $AAF0 JR C,$AAF9      ;
 $AAF2 LD (IY+$3C),$FF ;
 $AAF6 JP $B288        ;
*$AAF9 LD (IY+$3C),$01 ;
 $AAFD CALL $B288      ;
 $AB00 LD A,(IY+$05)   ;
 $AB03 CP $F0          ;
 $AB05 JP Z,$AE5D      ;
 $AB08 RET             ;

; Routine at AB09
c$AB09 LD A,(IY+$05)   ;
 $AB0C CP $78          ;
 $AB0E JR NC,$AB16     ;
 $AB10 LD (IY+$3C),$01 ;
 $AB14 JR $AB1A        ;
*$AB16 LD (IY+$3C),$FF ;
*$AB1A CALL $B288      ;
 $AB1D LD A,(IY+$05)   ;
 $AB20 CP $78          ;
 $AB22 JP Z,$AE5D      ;
 $AB25 RET             ;

; Routine at AB26
c$AB26 LD A,(IY+$05)   ;
 $AB29 CP $30          ;
 $AB2B JR NC,$AB33     ;
 $AB2D LD (IY+$3C),$01 ;
 $AB31 JR $AB37        ;
*$AB33 LD (IY+$3C),$FF ;
*$AB37 CALL $B288      ;
 $AB3A LD A,(IY+$05)   ;
 $AB3D CP $30          ;
 $AB3F JP Z,$AE5D      ;
 $AB42 RET             ;

; Routine at AB43
c$AB43 LD A,(IY+$05)   ;
 $AB46 CP $C0          ;
 $AB48 JR NC,$AB50     ;
 $AB4A LD (IY+$3C),$01 ;
 $AB4E JR $AB54        ;
*$AB50 LD (IY+$3C),$FF ;
*$AB54 CALL $B288      ;
 $AB57 LD A,(IY+$05)   ;
 $AB5A CP $C0          ;
 $AB5C JP Z,$AE5D      ;
 $AB5F RET             ;

; Routine at AB60
c$AB60 LD A,(IY+$0A)   ;
 $AB63 CP $98          ;
 $AB65 JR NZ,$AB88     ;
 $AB67 LD A,(IY+$05)   ;
 $AB6A CP $66          ;
 $AB6C JR NC,$AB74     ;
 $AB6E LD (IY+$3C),$01 ;
 $AB72 JR $AB78        ;
*$AB74 LD (IY+$3C),$FF ;
*$AB78 CALL $B288      ;
 $AB7B LD A,(IY+$05)   ;
 $AB7E CP $66          ;
 $AB80 RET NZ          ;
*$AB81 LD (IY+$3C),$FF ;
 $AB85 JP $B1A6        ;
*$AB88 CP $58          ;
 $AB8A JR NZ,$AB81     ;
 $AB8C LD (IY+$3C),$FF ;
 $AB90 CALL $B288      ;
 $AB93 LD A,(IY+$05)   ;
 $AB96 OR A            ;
 $AB97 JP Z,$AE5D      ;
 $AB9A RET             ;

; Routine at AB9B
c$AB9B LD A,(IY+$0A)   ;
 $AB9E CP $98          ;
 $ABA0 JR NZ,$ABC3     ;
 $ABA2 LD A,(IY+$05)   ;
 $ABA5 CP $8A          ;
 $ABA7 JR NC,$ABAF     ;
 $ABA9 LD (IY+$3C),$01 ;
 $ABAD JR $ABB3        ;
*$ABAF LD (IY+$3C),$FF ;
*$ABB3 CALL $B288      ;
 $ABB6 LD A,(IY+$05)   ;
 $ABB9 CP $8A          ;
 $ABBB RET NZ          ;
*$ABBC LD (IY+$3C),$01 ;
 $ABC0 JP $B1A6        ;
*$ABC3 CP $58          ;
 $ABC5 JR NZ,$ABBC     ;
 $ABC7 LD (IY+$3C),$01 ;
 $ABCB CALL $B288      ;
 $ABCE LD A,(IY+$05)   ;
 $ABD1 CP $F0          ;
 $ABD3 JP Z,$AE5D      ;
 $ABD6 RET             ;
; This entry point is used by the routines at #R$AC06, #R$ED2A and #R$F814.
*$ABD7 LD A,($B2DB)    ;
 $ABDA OR A            ;
 $ABDB JR Z,$ABEA      ;
 $ABDD CP $01          ;
 $ABDF JR NZ,$ABFC     ;
 $ABE1 IN A,($1F)      ;
 $ABE3 BIT 3,A         ;
 $ABE5 JR Z,$AC04      ;
*$ABE7 LD A,$01        ;
 $ABE9 RET             ;
*$ABEA LD A,$FD        ;
 $ABEC IN A,($FE)      ;
 $ABEE LD B,A          ;
 $ABEF LD A,$BF        ;
 $ABF1 IN A,($FE)      ;
 $ABF3 AND B           ;
 $ABF4 OR $E0          ;
 $ABF6 CP $FF          ;
 $ABF8 JR NZ,$ABE7     ;
 $ABFA JR $AC04        ;
*$ABFC LD A,$EF        ;
 $ABFE IN A,($FE)      ;
 $AC00 BIT 1,A         ;
 $AC02 JR Z,$ABE7      ;
*$AC04 XOR A           ;
 $AC05 RET             ;

; Routine at AC06
;
; Used by the routine at #R$8184.
c$AC06 LD A,(IY+$05) ;
 $AC09 OR A          ;
 $AC0A JR Z,$AC15    ;
 $AC0C CP $F0        ;
 $AC0E JR Z,$AC15    ;
 $AC10 CALL $ABD7    ;
 $AC13 OR A          ;
 $AC14 RET Z         ;
*$AC15 LD A,(IY+$0F) ;
 $AC18 CALL $AC69    ;
 $AC1B EX DE,HL      ;
*$AC1C LD A,(DE)     ;
 $AC1D CP $FF        ;
 $AC1F RET Z         ;
 $AC20 LD B,A        ;
 $AC21 INC DE        ;
 $AC22 LD A,(DE)     ;
 $AC23 INC DE        ;
 $AC24 INC DE        ;
 $AC25 CALL $AC5F    ;
 $AC28 LD A,(HL)     ;
 $AC29 SUB (IY+$05)  ;
 $AC2C SUB $08       ;
 $AC2E CP $F0        ;
 $AC30 JR C,$AC1C    ;
 $AC32 INC HL        ;
 $AC33 LD A,(HL)     ;
 $AC34 CP (IY+$0A)   ;
 $AC37 JR NZ,$AC1C   ;
 $AC39 DEC DE        ;
 $AC3A LD (IY+$0F),B ;
 $AC3D LD A,(DE)     ;
 $AC3E CALL $AC5F    ;
 $AC41 LD A,(HL)     ;
 $AC42 OR A          ;
 $AC43 JR NZ,$AC47   ;
 $AC45 LD A,$02      ;
*$AC47 CP $F0        ;
 $AC49 JR NZ,$AC4D   ;
 $AC4B LD A,$EE      ;
*$AC4D LD (IY+$05),A ;
 $AC50 INC HL        ;
 $AC51 LD A,(HL)     ;
 $AC52 LD (IY+$0A),A ;
 $AC55 CALL $B952    ;
*$AC58 CALL $ABD7    ;
 $AC5B OR A          ;
 $AC5C JR NZ,$AC58   ;
 $AC5E RET           ;
; This entry point is used by the routines at #R$AE5D and #R$F10E.
*$AC5F ADD A,A       ;
 $AC60 LD HL,$AF10   ;
 $AC63 ADD A,L       ;
 $AC64 JR NC,$AC67   ;
 $AC66 INC H         ;
*$AC67 LD L,A        ;
 $AC68 RET           ;

; Routine at AC69
;
; Used by the routines at #R$AC06, #R$ADBA, #R$E79B and #R$F10E.
c$AC69 LD HL,$AC7F   ; #REGhl=#R$AC7F.
; Continue on to #R$AC6C.

; Find Data By ID
;
; Used by the routines at #R$AA8C, #R$BA6E and #R$EABF.
;
;   A ID of data to find
;   HL Pointer to data for searching
; O:HL Pointer to data correlating to the ID
;
; If #REGa is zero, just return instantly.
@label=FindDataById
c$AC6C OR A          ; {Return if #REGa is zero.
 $AC6D RET Z         ; }
 $AC6E PUSH BC       ; {Stash #REGbc and #REGde on the stack.
 $AC6F PUSH DE       ; }
; #REGe now holds the ID we want to find the memory location for. This is used
; as a "countdown".
 $AC70 LD E,A        ; #REGe=#REGa.
; All data is terminated by #N$FF, so essentially we're going to count how many terminators we find. This will
;       give us the start address of the data ID we're interested in.
 $AC71 LD A,$FF      ; #REGa=#N$FF.
; Set the counter to #N$10000.
 $AC73 LD BC,$0000   ; #REGbc=#N($0000,$04,$04).
@label=FindDataById_Loop
*$AC76 CPIR          ; Search for the first occurrence of #N$FF using *#REGhl.
; Move onto the next ID, and keep looping back to #R$AC76 until we're on the ID
; we want to find the data for.
 $AC78 DEC E         ; Decrease #REGe by one.
 $AC79 JP NZ,$AC76   ; Jump to #R$AC76 until #REGe is zero.
; Once we're here, #REGhl will contain the start address of the data
; correlating to the given ID.
 $AC7C POP DE        ; {Restore #REGde and #REGbc from the stack.
 $AC7D POP BC        ; }
 $AC7E RET           ; Return.

; Data block at AC7F
b$AC7F DEFB $01,$01,$00,$18,$00,$01,$FF,$03
 $AC87 DEFB $04,$01,$0D,$01,$00,$00,$00,$01
 $AC8F DEFB $02,$03,$01,$FF,$01,$01,$03,$FF
 $AC97 DEFB $05,$00,$01,$04,$02,$00,$01,$01
 $AC9F DEFB $04,$FF,$03,$00,$02,$FF,$06,$00
 $ACA7 DEFB $03,$03,$01,$00,$1F,$03,$05,$FF
 $ACAF DEFB $07,$00,$03,$05,$03,$00,$10,$01
 $ACB7 DEFB $00,$0F,$04,$00,$FF,$08,$01,$00
 $ACBF DEFB $0B,$00,$01,$06,$03,$00,$0A,$04
 $ACC7 DEFB $01,$FF,$09,$01,$00,$07,$00,$01
 $ACCF DEFB $FF,$0A,$04,$03,$08,$00,$01,$FF
 $ACD7 DEFB $07,$01,$04,$09,$03,$04,$FF,$0D
 $ACDF DEFB $00,$04,$0C,$02,$01,$07,$01,$00
 $ACE7 DEFB $FF,$0B,$01,$02,$FF,$01,$00,$01
 $ACEF DEFB $0E,$02,$01,$0B,$04,$00,$FF,$0D
 $ACF7 DEFB $01,$02,$FF,$06,$00,$04,$FF,$13
 $ACFF DEFB $01,$03,$06,$00,$01,$11,$03,$03
 $AD07 DEFB $12,$04,$00,$FF,$10,$03,$03,$FF
 $AD0F DEFB $10,$00,$04,$FF,$15,$01,$00,$14
 $AD17 DEFB $02,$00,$10,$03,$01,$FF,$13,$00
 $AD1F DEFB $02,$FF,$13,$00,$01,$18,$01,$04
 $AD27 DEFB $16,$03,$00,$17,$04,$01,$FF,$15
 $AD2F DEFB $00,$03,$FF,$15,$01,$04,$FF,$1A
 $AD37 DEFB $00,$01,$19,$03,$01,$00,$01,$00
 $AD3F DEFB $15,$04,$01,$FF,$18,$01,$03,$FF
 $AD47 DEFB $1C,$04,$01,$1B,$03,$01,$18,$01
 $AD4F DEFB $00,$FF,$1A,$01,$03,$FF,$1E,$00
 $AD57 DEFB $01,$1D,$02,$01,$1A,$01,$04,$FF
 $AD5F DEFB $1C,$01,$02,$FF,$1F,$02,$06,$1C
 $AD67 DEFB $01,$00,$FF,$05,$05,$03,$1E,$06
 $AD6F DEFB $02,$20,$00,$01,$FF,$1F,$01,$00
 $AD77 DEFB $FF,$0C,$10,$0E,$10,$0E,$11,$10
 $AD7F DEFB $10,$11,$10,$12,$0F,$13,$0D,$14
 $AD87 DEFB $0B,$15,$09,$17,$09,$16,$0B,$14
 $AD8F DEFB $0E,$15,$0F,$10,$11,$10,$12,$14
 $AD97 DEFB $0D,$11,$0C,$12,$0C,$11,$0B,$0F
 $AD9F DEFB $0C,$0F,$0B,$0D,$0D,$0C,$0D,$0D
 $ADA7 DEFB $0C,$0C,$0F,$0B,$0F,$0A,$10,$0A
 $ADAF DEFB $11,$08,$11,$08,$12,$06,$12,$04
 $ADB7 DEFB $13,$05,$14

; Routine at ADBA
;
; Used by the routines at #R$A92C and #R$AE5D.
c$ADBA LD A,(IY+$0F)   ;
 $ADBD CP (IY+$5A)     ;
 $ADC0 JR NZ,$ADC7     ;
 $ADC2 LD (IY-$14),$01 ;
 $ADC6 RET             ;
*$ADC7 LD D,$FF        ;
 $ADC9 CALL $AC69      ;
 $ADCC LD A,(IY+$0F)   ;
 $ADCF CALL $AE30      ;
 $ADD2 OR A            ;
 $ADD3 JR Z,$AE18      ;
*$ADD5 LD A,(HL)       ;
 $ADD6 CP $FF          ;
 $ADD8 JR Z,$AE26      ;
 $ADDA CALL $AE30      ;
 $ADDD CP $01          ;
 $ADDF JR Z,$ADEA      ;
 $ADE1 LD A,(HL)       ;
 $ADE2 CP (IY+$5A)     ;
 $ADE5 JR NZ,$AE20     ;
 $ADE7 XOR A           ;
 $ADE8 JR $AE18        ;
*$ADEA LD A,(HL)       ;
 $ADEB CP (IY+$6E)     ;
 $ADEE JR Z,$AE20      ;
 $ADF0 EXX             ;
 $ADF1 ADD A,A         ;
 $ADF2 LD D,$00        ;
 $ADF4 LD E,A          ;
 $ADF5 LD HL,$AD78     ;
 $ADF8 ADD HL,DE       ;
 $ADF9 LD C,(HL)       ;
 $ADFA INC HL          ;
 $ADFB LD B,(HL)       ;
 $ADFC LD A,(IY+$5A)   ;
 $ADFF ADD A,A         ;
 $AE00 LD E,A          ;
 $AE01 LD HL,$AD78     ;
 $AE04 ADD HL,DE       ;
 $AE05 LD A,C          ;
 $AE06 SUB (HL)        ;
 $AE07 JR NC,$AE0B     ;
 $AE09 NEG             ;
*$AE0B LD C,A          ;
 $AE0C LD A,B          ;
 $AE0D INC HL          ;
 $AE0E SUB (HL)        ;
 $AE0F JR NC,$AE13     ;
 $AE11 NEG             ;
*$AE13 ADD A,C         ;
 $AE14 EXX             ;
 $AE15 CP D            ;
 $AE16 JR NC,$AE20     ;
*$AE18 LD D,A          ;
 $AE19 LD B,(HL)       ;
 $AE1A INC HL          ;
 $AE1B LD C,(HL)       ;
 $AE1C INC HL          ;
 $AE1D LD E,(HL)       ;
 $AE1E JR $AE22        ;
*$AE20 INC HL          ;
 $AE21 INC HL          ;
*$AE22 INC HL          ;
 $AE23 JP $ADD5        ;
*$AE26 LD (IY+$64),C   ;
 $AE29 LD (IY+$69),B   ;
 $AE2C LD (IY+$73),E   ;
 $AE2F RET             ;
*$AE30 EXX             ;
 $AE31 LD HL,$AE3C     ;
 $AE34 ADD A,L         ;
 $AE35 JR NC,$AE38     ;
 $AE37 INC H           ;
*$AE38 LD L,A          ;
 $AE39 LD A,(HL)       ;
 $AE3A EXX             ;
 $AE3B RET             ;

; Data block at AE3C
b$AE3C DEFB $01,$01,$00,$01,$00,$01,$01,$01
 $AE44 DEFB $01,$01,$01,$01,$00,$01,$00,$00
 $AE4C DEFB $01,$00,$00,$01,$00,$01,$00,$00
 $AE54 DEFB $01,$00,$01,$00,$01,$00,$01,$01
 $AE5C DEFB $00

; Routine at AE5D
;
; Used by the routines at #R$AAB2, #R$AADD, #R$AB09, #R$AB26, #R$AB43, #R$AB60
; and #R$AB9B.
c$AE5D LD A,(IY+$0F) ;
 $AE60 LD (IY+$6E),A ;
 $AE63 LD A,(IY+$69) ;
 $AE66 LD (IY+$0F),A ;
 $AE69 LD A,(IY+$73) ;
 $AE6C CALL $AC5F    ;
 $AE6F LD A,(HL)     ;
 $AE70 LD (IY+$05),A ;
 $AE73 INC HL        ;
 $AE74 LD A,(HL)     ;
 $AE75 LD (IY+$0A),A ;
 $AE78 XOR A         ;
 $AE79 LD (IY+$00),A ;
 $AE7C CALL $ADBA    ;
 $AE7F XOR A         ;
 $AE80 LD (IY+$37),A ;
 $AE83 LD (IY+$3C),A ;
 $AE86 LD (IY+$46),A ;
 $AE89 RET           ;

; Routine at AE8A
;
; Used by the routine at #R$A92C.
c$AE8A LD D,$00      ;
 $AE8C LD BC,$21FF   ;
 $AE8F LD HL,$BCE9   ;
*$AE92 LD A,(HL)     ;
 $AE93 CP $FF        ;
 $AE95 JR Z,$AEA0    ;
 $AE97 INC HL        ;
 $AE98 INC HL        ;
 $AE99 INC HL        ;
 $AE9A INC HL        ;
 $AE9B INC C         ;
 $AE9C CP E          ;
 $AE9D JR NZ,$AE92   ;
 $AE9F RET           ;
*$AEA0 LD C,$FF      ;
 $AEA2 INC HL        ;
 $AEA3 INC D         ;
 $AEA4 DJNZ $AE92    ;
 $AEA6 RET           ;

; Data block at AEA7
b$AEA7 DEFB $1A,$1D,$00,$0F,$1C,$18,$23,$14
 $AEAF DEFB $FF,$01,$21,$04,$20,$11,$16,$19
 $AEB7 DEFB $24,$FF,$0B,$15,$02,$13,$07,$28
 $AEBF DEFB $17,$25,$FF,$0D,$27,$12,$1F,$09
 $AEC7 DEFB $22,$1E,$0A,$FF,$10,$03,$0E,$05
 $AECF DEFB $1B,$06
 $AED1 DEFB $08,$26,$14,$FF,$EA,$AE

; Routine at AED7
;
; Used by the routine at #R$A92C.
c$AED7 PUSH HL       ;
 $AED8 LD HL,($AED5) ;
 $AEDB LD A,(HL)     ;
 $AEDC CP $FF        ;
 $AEDE JR NZ,$AEE4   ;
 $AEE0 LD HL,$AEEA   ;
 $AEE3 LD A,(HL)     ;
*$AEE4 INC HL        ;
 $AEE5 LD ($AED5),HL ;
 $AEE8 POP HL        ;
 $AEE9 RET           ;
 $AEEA LD (BC),A     ;
 $AEEB INC B         ;
 $AEEC DEC B         ;
 $AEED EX AF,AF'     ;
 $AEEE ADD HL,BC     ;
 $AEEF LD A,(BC)     ;
 $AEF0 DEC BC        ;
 $AEF1 INC C         ;
 $AEF2 LD C,$0F      ;
 $AEF4 LD DE,$1412   ;
 $AEF7 LD D,$17      ;
 $AEF9 ADD HL,DE     ;
 $AEFA DEC DE        ;
 $AEFB DEC E         ;
 $AEFC LD E,$1F      ;
 $AEFE JR NZ,$AEFF   ;
 $AF00 RRCA          ;
; This entry point is used by the routine at #R$F10E.
*$AF01 LD A,($AF00)  ;
 $AF04 INC A         ;
 $AF05 CP $20        ;
 $AF07 JR NZ,$AF0A   ;
 $AF09 XOR A         ;
*$AF0A LD ($AF00),A  ;
 $AF0D XOR $15       ;
 $AF0F RET           ;

; Data block at AF10
b$AF10 DEFB $00,$98,$F0,$98,$78,$98,$30,$98
 $AF18 DEFB $C0,$98,$00,$58,$F0,$58,$F0,$98
 $AF20 DEFB $00,$98

; Platform Data
@label=Platform_Data
b$AF22 DEFB $FF         ; Terminator.
 $AF23 DEFB $78,$00,$05
 $AF26 DEFB $80,$05,$06
 $AF29 DEFB $88,$06,$07
 $AF2C DEFB $90,$07,$08
 $AF2F DEFB $98,$08,$09
 $AF32 DEFB $A0,$09,$0A
 $AF35 DEFB $A8,$0A,$0B
 $AF38 DEFB $B0,$0B,$0C
 $AF3B DEFB $78,$1B,$20
 $AF3E DEFB $80,$1A,$1B
 $AF41 DEFB $88,$19,$1A
 $AF44 DEFB $90,$18,$19
 $AF47 DEFB $98,$17,$18
 $AF4A DEFB $A0,$16,$17
 $AF4D DEFB $A8,$15,$16
 $AF50 DEFB $B0,$14,$15
 $AF53 DEFB $FF         ; Terminator.
 $AF54 DEFB $A0,$06,$09
 $AF57 DEFB $A0,$0B,$0E
 $AF5A DEFB $A0,$10,$13
 $AF5D DEFB $A0,$15,$18
 $AF60 DEFB $A0,$1A,$1D
 $AF63 DEFB $FF         ; Terminator.
 $AF64 DEFB $A0,$13,$1B
 $AF67 DEFB $FF         ; Terminator.
 $AF68 DEFB $A8,$02,$0A
 $AF6B DEFB $90,$03,$09
 $AF6E DEFB $78,$04,$08
 $AF71 DEFB $FF         ; Terminator.
 $AF72 DEFB $A8,$03,$11
 $AF75 DEFB $98,$05,$0F
 $AF78 DEFB $80,$09,$0B
 $AF7B DEFB $FF         ; Terminator.
 $AF7C DEFB $FF         ; Terminator.
 $AF7D DEFB $98,$01,$09
 $AF80 DEFB $FF,$00,$20
 $AF83 DEFB $FF         ; Terminator.
 $AF84 DEFB $A0,$04,$1D
 $AF87 DEFB $FF         ; Terminator.
 $AF88 DEFB $B8,$08,$0A
 $AF8B DEFB $78,$0C,$1C
 $AF8E DEFB $FF         ; Terminator.

; Table: Platform Data
@label=Table_PlatformData
w$AF8F DEFW $AF22    ; Platform
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N($01+(#PC-$AF8F)/$02)).
 $AF91 DEFW $AF23    ; Platform
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N($01+(#PC-$AF8F)/$02)).
 $AF93 DEFW $AF54    ; Platform
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N($01+(#PC-$AF8F)/$02)).
 $AF95 DEFW $AF64    ; Platform
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N($01+(#PC-$AF8F)/$02)).
 $AF97 DEFW $AF68    ; Platform
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N($01+(#PC-$AF8F)/$02)).
 $AF99 DEFW $AF72    ; Platform
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N($01+(#PC-$AF8F)/$02)).
 $AF9B DEFW $AF7C    ; Platform
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N($01+(#PC-$AF8F)/$02)).
 $AF9D DEFW $AF7D    ; Platform
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N($01+(#PC-$AF8F)/$02)).
 $AF9F DEFW $AF84    ; Platform
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N($01+(#PC-$AF8F)/$02)).
 $AFA1 DEFW $AF88    ; Platform
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N($01+(#PC-$AF8F)/$02)).

; Index Table
b$AFA3 DEFB $05,$00,$00,$00,$07,$00,$00,$00
 $AFAB DEFB $09,$00,$00,$04,$02,$00,$00,$08
 $AFB3 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $AFBB DEFB $00,$00,$00,$00,$00,$03,$00,$01
 $AFC3 DEFB $00

; Routine at AFC4
;
; Used by the routines at #R$A92C and #R$B09F.
c$AFC4 LD (IY+$37),$01 ;
 $AFC8 LD A,(IY+$0F)   ;
 $AFCB LD E,A          ;
 $AFCC LD D,$00        ;
 $AFCE LD HL,$AFA3     ;
 $AFD1 ADD HL,DE       ;
 $AFD2 LD A,(HL)       ;
 $AFD3 ADD A,A         ;
 $AFD4 LD E,A          ;
 $AFD5 LD HL,$AF8F     ;
 $AFD8 ADD HL,DE       ;
 $AFD9 LD E,(HL)       ;
 $AFDA INC HL          ;
 $AFDB LD D,(HL)       ;
 $AFDC EX DE,HL        ;
 $AFDD LD A,(IY+$0A)   ;
 $AFE0 CP $98          ;
 $AFE2 JR Z,$B006      ;
 $AFE4 ADD A,$20       ;
 $AFE6 LD B,A          ;
*$AFE7 LD A,(HL)       ;
 $AFE8 CP $FF          ;
 $AFEA RET Z           ;
 $AFEB CP B            ;
 $AFEC JR Z,$AFF3      ;
 $AFEE INC HL          ;
*$AFEF INC HL          ;
*$AFF0 INC HL          ;
 $AFF1 JR $AFE7        ;
*$AFF3 INC HL          ;
 $AFF4 LD A,(IY+$05)   ;
 $AFF7 ADD A,$08       ;
 $AFF9 SRL A           ;
 $AFFB SRL A           ;
 $AFFD SRL A           ;
 $AFFF CP (HL)         ;
 $B000 JR C,$AFEF      ;
 $B002 INC HL          ;
 $B003 CP (HL)         ;
 $B004 JR NC,$AFF0     ;
*$B006 LD (IY+$37),$00 ;
 $B00A RET             ;
; This entry point is used by the routines at #R$B09F, #R$EFC7 and #R$F814.
*$B00B LD A,($B2DB)    ;
 $B00E OR A            ;
 $B00F JR Z,$B028      ;
 $B011 CP $01          ;
 $B013 JR NZ,$B01D     ;
 $B015 IN A,($1F)      ;
 $B017 BIT 0,A         ;
 $B019 JR NZ,$B025     ;
 $B01B JR $B03A        ;
*$B01D LD A,$EF        ;
 $B01F IN A,($FE)      ;
 $B021 BIT 3,A         ;
 $B023 JR NZ,$B03A     ;
*$B025 LD A,$01        ;
 $B027 RET             ;
*$B028 LD A,$FB        ;
 $B02A IN A,($FE)      ;
 $B02C OR $F5          ;
 $B02E LD B,A          ;
 $B02F LD A,$DF        ;
 $B031 IN A,($FE)      ;
 $B033 OR $EA          ;
 $B035 AND B           ;
 $B036 CP $FF          ;
 $B038 JR NZ,$B025     ;
*$B03A XOR A           ;
 $B03B RET             ;
; This entry point is used by the routines at #R$B09F, #R$EFC7 and #R$F814.
*$B03C LD A,($B2DB)    ;
 $B03F OR A            ;
 $B040 JR Z,$B059      ;
 $B042 CP $01          ;
 $B044 JR NZ,$B04E     ;
 $B046 IN A,($1F)      ;
 $B048 BIT 1,A         ;
 $B04A JR NZ,$B056     ;
 $B04C JR $B06B        ;
*$B04E LD A,$EF        ;
 $B050 IN A,($FE)      ;
 $B052 BIT 4,A         ;
 $B054 JR NZ,$B06B     ;
*$B056 LD A,$01        ;
 $B058 RET             ;
*$B059 LD A,$FB        ;
 $B05B IN A,($FE)      ;
 $B05D OR $EA          ;
 $B05F LD B,A          ;
 $B060 LD A,$DF        ;
 $B062 IN A,($FE)      ;
 $B064 OR $F5          ;
 $B066 AND B           ;
 $B067 CP $FF          ;
 $B069 JR NZ,$B056     ;
*$B06B XOR A           ;
 $B06C RET             ;
; This entry point is used by the routines at #R$B09F and #R$F814.
*$B06D LD A,($B2DB)    ;
 $B070 OR A            ;
 $B071 JR Z,$B08A      ;
 $B073 CP $01          ;
 $B075 JR NZ,$B080     ;
 $B077 IN A,($1F)      ;
 $B079 BIT 4,A         ;
 $B07B JR Z,$B09B      ;
*$B07D LD A,$01        ;
 $B07F RET             ;
*$B080 LD A,$EF        ;
 $B082 IN A,($FE)      ;
 $B084 BIT 0,A         ;
 $B086 JR Z,$B07D      ;
 $B088 JR $B09B        ;
*$B08A LD A,$FE        ;
 $B08C IN A,($FE)      ;
 $B08E LD B,A          ;
 $B08F LD A,$7F        ;
 $B091 IN A,($FE)      ;
 $B093 AND B           ;
 $B094 OR $E0          ;
 $B096 CP $FF          ;
 $B098 JP NZ,$B07D     ;
*$B09B XOR A           ;
 $B09C RET             ;

; Data block at B09D
w$B09D DEFW $0000

; Routine at B09F
;
; Used by the routines at #R$8184 and #R$F10E.
c$B09F LD IY,($B09D)   ;
 $B0A3 LD A,(IY+$0F)   ;
 $B0A6 LD ($B951),A    ;
 $B0A9 CALL $AFC4      ;
 $B0AC LD A,(IY+$46)   ;
 $B0AF OR A            ;
 $B0B0 JP NZ,$B1B9     ;
 $B0B3 LD A,(IY+$37)   ;
 $B0B6 OR A            ;
 $B0B7 JP NZ,$B197     ;
 $B0BA CALL $B06D      ;
 $B0BD OR A            ;
 $B0BE JP NZ,$B1A6     ;
 $B0C1 LD (IY+$3C),$00 ;
 $B0C5 CALL $B00B      ;
 $B0C8 OR A            ;
 $B0C9 JR Z,$B0D6      ;
 $B0CB LD (IY+$3C),$01 ;
 $B0CF LD (IY+$41),$01 ;
 $B0D3 JP $B288        ;
*$B0D6 CALL $B03C      ;
 $B0D9 OR A            ;
 $B0DA RET Z           ;
 $B0DB LD (IY+$3C),$FF ;
 $B0DF LD (IY+$41),$FF ;
 $B0E3 JP $B288        ;

; Draws Sprites To The Shadow Buffer
;
; Used by the routines at #R$B9D6, #R$EFC7 and #R$F10E.
@label=WriteSprite_ShadowBuffer
c$B0E6 EXX           ; Switch to the shadow registers.
 $B0E7 LD E,(IY+$23) ; #REGe=*#REGiy+#N$23.
 $B0EA LD D,(IY+$28) ; #REGd=*#REGiy+#N$28.
 $B0ED LD ($A83B),SP ; Write #REGsp to #R$A83B.
 $B0F1 LD H,(IY+$00) ; #REGh=*#REGiy+#N$00.
 $B0F4 LD L,$00      ; #REGl=#N$00.
 $B0F6 SRL H         ;
 $B0F8 RR L          ;
 $B0FA ADD HL,DE     ;
 $B0FB LD SP,HL      ;
 $B0FC LD A,(IY+$05) ; {#REGb=*#REGiy+#N$05.
 $B0FF LD B,A        ; }
 $B100 AND %00000111 ; Keep only bits 0-2.
; Self-modifying code.
 $B102 LD ($B189),A  ; Write #REGa to #R$B188(#N$B189).
 $B105 INC A         ;
 $B106 LD ($B129),A  ;
 $B109 LD ($B145),A  ;
 $B10C LD A,B        ;
 $B10D AND %11111000 ; Keep only bits 3-7.
 $B10F RRCA          ;
 $B110 RRCA          ;
 $B111 RRCA          ;
; Self-modifying code.
 $B112 LD ($B17B),A  ; Write #REGa to #R$B17A(#N$B17B).
 $B115 ADD A,$02     ;
 $B117 LD E,A        ;
 $B118 LD C,$20      ;
 $B11A LD L,(IY+$0A) ;
 $B11D LD H,$00      ;
 $B11F ADD HL,HL     ;
 $B120 ADD HL,HL     ;
 $B121 ADD HL,HL     ;
 $B122 ADD HL,HL     ;
 $B123 ADD HL,HL     ;
 $B124 LD D,$63      ;
 $B126 ADD HL,DE     ;
*$B127 POP DE        ;
 $B128 LD B,$00      ;
 $B12A DEC B         ;
 $B12B JR Z,$B139    ;
 $B12D SCF           ;
 $B12E LD A,$FF      ;
*$B130 RR E          ;
 $B132 RR D          ;
 $B134 RRA           ;
 $B135 DJNZ $B130    ;
 $B137 AND (HL)      ;
 $B138 LD (HL),A     ;
*$B139 DEC HL        ;
 $B13A LD A,(HL)     ;
 $B13B AND D         ;
 $B13C LD (HL),A     ;
 $B13D DEC HL        ;
 $B13E LD A,(HL)     ;
 $B13F AND E         ;
 $B140 LD (HL),A     ;
 $B141 INC HL        ;
 $B142 INC HL        ;
 $B143 POP DE        ;
 $B144 LD B,$00      ;
 $B146 DEC B         ;
 $B147 JR Z,$B153    ;
 $B149 XOR A         ;
*$B14A SRL E         ;
 $B14C RR D          ;
 $B14E RRA           ;
 $B14F DJNZ $B14A    ;
 $B151 OR (HL)       ;
 $B152 LD (HL),A     ;
*$B153 DEC HL        ;
 $B154 LD A,(HL)     ;
 $B155 OR D          ;
 $B156 LD (HL),A     ;
 $B157 DEC HL        ;
 $B158 LD A,(HL)     ;
 $B159 OR E          ;
 $B15A LD (HL),A     ;
 $B15B LD DE,$0022   ;
 $B15E ADD HL,DE     ;
 $B15F DEC C         ;
 $B160 JP NZ,$B127   ;
 $B163 LD A,(IY+$0A) ;
 $B166 AND %00000111 ; Keep only bits 0-2.
 $B168 JR Z,$B16E    ;
 $B16A LD B,$05      ;
 $B16C JR $B170      ;
; Characters are #N$04 characters tall.
*$B16E LD B,$04      ; #REGb=#N$04 (counter).
*$B170 LD A,(IY+$0A) ; #REGa=*#REGiy+#N$0A.
 $B173 AND %11111000 ; Keep only bits 3-7.
 $B175 LD H,$00      ; {Create an offset in #REGhl.
 $B177 LD L,A        ; }
 $B178 ADD HL,HL     ; {#REGhl=#R$FB00+(#REGhl*#N$04).
 $B179 ADD HL,HL     ;
 $B17A LD DE,$FB00   ;
 $B17D ADD HL,DE     ; }
 $B17E LD DE,$001E   ; #REGde=#N($001E,$04,$04).
; Grab the characters attribute byte.
 $B181 LD C,(IY+$1E) ; #REGc=*#REGiy+#N$1E.
*$B184 LD (HL),C     ; Write the attribute byte to the attribute buffer
                     ; (*#REGhl).
 $B185 INC HL        ; Increment #REGhl by one.
 $B186 LD (HL),C     ; Write the attribute byte to the attribute buffer
                     ; (*#REGhl).
 $B187 INC HL        ; Increment #REGhl by one.
; This is modified from #R$B102.
 $B188 LD A,$FF      ; #REGb=#N$FF.
 $B18A OR A          ;
 $B18B JR Z,$B18E    ;
 $B18D LD (HL),C     ;
*$B18E ADD HL,DE     ;
 $B18F DJNZ $B184    ;
 $B191 EXX           ; Switch to the normal registers.
 $B192 LD SP,($A83B) ; Restore #REGsp from #R$A83B.
 $B196 RET           ; Return.

; Routine at B197
;
; Used by the routines at #R$A92C and #R$B09F.
c$B197 LD A,(IY+$0A) ;
 $B19A ADD A,$04     ;
 $B19C CP $98        ;
 $B19E JR C,$B1A2    ;
 $B1A0 LD A,$98      ;
*$B1A2 LD (IY+$0A),A ;
 $B1A5 RET           ; Return.

; Routine at B1A6
;
; Used by the routines at #R$AB60, #R$AB9B and #R$B09F.
c$B1A6 LD A,(IY+$3C)   ;
 $B1A9 OR A            ;
 $B1AA JR NZ,$B1B2     ;
 $B1AC LD A,(IY+$41)   ;
 $B1AF LD (IY+$3C),A   ;
*$B1B2 LD (IY+$46),A   ;
 $B1B5 LD (IY+$4B),$00 ;
; This entry point is used by the routines at #R$A92C and #R$B09F.
*$B1B9 LD A,(IY+$3C)   ;
 $B1BC CP $01          ;
 $B1BE JR Z,$B21C      ;
 $B1C0 LD A,(IY+$4B)   ;
 $B1C3 LD E,A          ;
 $B1C4 ADD A,A         ;
 $B1C5 ADD A,E         ;
 $B1C6 LD E,A          ;
 $B1C7 LD D,$00        ;
 $B1C9 LD HL,$B264     ;
 $B1CC ADD HL,DE       ;
 $B1CD LD E,(HL)       ;
 $B1CE INC HL          ;
 $B1CF LD D,(HL)       ;
 $B1D0 INC HL          ;
 $B1D1 LD B,(HL)       ;
 $B1D2 LD A,D          ;
 $B1D3 DEC A           ;
 $B1D4 BIT 7,A         ;
 $B1D6 JR NZ,$B1ED     ;
 $B1D8 LD A,(IY+$37)   ;
 $B1DB OR A            ;
 $B1DC JR NZ,$B1ED     ;
 $B1DE LD A,(IY+$0A)   ;
 $B1E1 AND $07         ;
 $B1E3 JR NZ,$B1ED     ;
 $B1E5 LD (IY+$4B),$0B ;
 $B1E9 LD B,$00        ;
 $B1EB JR $B205        ;
*$B1ED LD A,(IY-$3C)   ;
 $B1F0 OR A            ;
 $B1F1 CALL NZ,$81D4   ;
 $B1F4 LD A,(IY+$0A)   ;
 $B1F7 ADD A,D         ;
 $B1F8 LD (IY+$0A),A   ;
 $B1FB LD A,(IY+$05)   ;
 $B1FE SUB E           ;
 $B1FF JR NC,$B202     ;
 $B201 XOR A           ;
*$B202 LD (IY+$05),A   ;
*$B205 LD (IY+$00),B   ;
 $B208 INC (IY+$4B)    ;
 $B20B LD A,(IY+$4B)   ;
 $B20E CP $0C          ;
 $B210 RET NZ          ;
 $B211 LD (IY+$3C),$00 ;
 $B215 LD (IY+$46),$00 ;
 $B219 JP $E315        ;
*$B21C LD A,(IY+$4B)   ;
 $B21F LD E,A          ;
 $B220 ADD A,A         ;
 $B221 ADD A,E         ;
 $B222 LD E,A          ;
 $B223 LD D,$00        ;
 $B225 LD HL,$B264     ;
 $B228 ADD HL,DE       ;
 $B229 LD E,(HL)       ;
 $B22A INC HL          ;
 $B22B LD D,(HL)       ;
 $B22C INC HL          ;
 $B22D LD B,(HL)       ;
 $B22E LD A,D          ;
 $B22F DEC A           ;
 $B230 BIT 7,A         ;
 $B232 JR NZ,$B249     ;
 $B234 LD A,(IY+$37)   ;
 $B237 OR A            ;
 $B238 JR NZ,$B249     ;
 $B23A LD A,(IY+$0A)   ;
 $B23D AND $07         ;
 $B23F JR NZ,$B249     ;
 $B241 LD (IY+$4B),$0B ;
 $B245 LD B,$00        ;
 $B247 JR $B205        ;
*$B249 LD A,(IY-$3C)   ;
 $B24C OR A            ;
 $B24D CALL Z,$81D4    ;
 $B250 LD A,(IY+$0A)   ;
 $B253 ADD A,D         ;
 $B254 LD (IY+$0A),A   ;
 $B257 LD A,(IY+$05)   ;
 $B25A ADD A,E         ;
 $B25B CP $F0          ;
 $B25D JR C,$B202      ;
 $B25F LD A,$F0        ;
 $B261 JP $B202        ;
 $B264 LD (BC),A       ;
 $B265 CALL M,$0206    ;
 $B268 CALL M,$0206    ;
 $B26B CALL M,$0206    ;
 $B26E CALL M,$0206    ;
 $B271 CALL M,$0207    ;
 $B274 CALL M,$0207    ;
 $B277 INC B           ;
 $B278 RLCA            ;
 $B279 LD (BC),A       ;
 $B27A INC B           ;
 $B27B RLCA            ;
 $B27C LD (BC),A       ;
 $B27D INC B           ;
 $B27E LD B,$02        ;
 $B280 INC B           ;
 $B281 LD B,$02        ;
 $B283 INC B           ;
 $B284 LD B,$02        ;
 $B286 INC B           ;
 $B287 NOP             ;
; This entry point is used by the routines at #R$A92C, #R$AAB2, #R$AADD,
; #R$AB09, #R$AB26, #R$AB43, #R$AB60, #R$AB9B, #R$B09F, #R$B3BE and #R$EFC7.
*$B288 CALL $A921      ;
 $B28B JR Z,$B29E      ;
 $B28D LD A,($B951)    ;
 $B290 CP (IY+$0F)     ;
 $B293 JR Z,$B29E      ;
 $B295 LD A,(IY+$5F)   ;
 $B298 XOR $01         ;
 $B29A LD (IY+$5F),A   ;
 $B29D RET Z           ;
*$B29E LD A,(IY+$00)   ;
 $B2A1 INC A           ;
 $B2A2 CP $06          ;
 $B2A4 JR C,$B2A7      ;
 $B2A6 XOR A           ;
*$B2A7 LD (IY+$00),A   ;
 $B2AA LD A,(IY+$3C)   ;
 $B2AD CP $01          ;
 $B2AF JR NZ,$B2C6     ;
 $B2B1 LD A,(IY-$3C)   ;
 $B2B4 OR A            ;
 $B2B5 CALL Z,$81D4    ;
 $B2B8 LD A,(IY+$05)   ;
 $B2BB ADD A,$02       ;
 $B2BD CP $F0          ;
 $B2BF JR C,$B2D5      ;
 $B2C1 LD A,$F0        ;
 $B2C3 JP $B2D5        ;
*$B2C6 LD A,(IY-$3C)   ;
 $B2C9 OR A            ;
 $B2CA CALL NZ,$81D4   ;
 $B2CD LD A,(IY+$05)   ;
 $B2D0 SUB $02         ;
 $B2D2 JR NC,$B2D5     ;
 $B2D4 XOR A           ;
*$B2D5 LD (IY+$05),A   ;
 $B2D8 JP $E2FC        ;

; Game Options
;
; Holds the control method.
; #TABLE(default,centre,centre)
; { =h Byte | =h Option }
; { #N$00 | Keyboard }
; { #N$01 | Kempston Joystick }
; { #N$02 | Sinclair Joystick }
; TABLE#
@label=Game_Options
g$B2DB DEFB $00

; Set Game Options
;
; Used by the routine at #R$80E5.
;
; .
;
; Sets the game option for the Sinclair Joystick controller.
@label=Game_Options_Sinclair
c$B2DC LD A,$02      ; {Write #N$02 to #R$B2DB.
 $B2DE LD ($B2DB),A  ; }
 $B2E1 RET           ; Return.
; Sets the game option for the Kempston Joystick controller.
@label=Game_Options_Kempston
*$B2E2 LD A,$01      ; {Write #N$01 to #R$B2DB.
 $B2E4 LD ($B2DB),A  ; }
 $B2E7 RET           ; Return.
; Sets the game option for keyboard controls.
@label=Game_Options_Keyboard
*$B2E8 XOR A         ; {Write #N$00 to #R$B2DB.
 $B2E9 LD ($B2DB),A  ; }
 $B2EC RET           ; Return.

; Data block at B2ED
b$B2ED DEFB $00,$00

; Data block at B2EF
w$B2EF DEFW $0000

; Print Wages
;
; Used by the routines at #R$B3BE and #R$B451.
@label=PrintWages
c$B2F1 CALL $B8ED      ; Call #R$B8ED.
 $B2F4 LD DE,$010A     ; #REGde=#N$010A.
 $B2F7 LD HL,$7C1B     ; #REGhl=#R$7C1B.
 $B2FA CALL $B8C4      ; Call #R$B8C4.
 $B2FD PUSH IY         ; Stash #REGiy on the stack.
 $B2FF LD DE,$0513     ; #REGde=#N$0513.
; There are #N$05 characters (#REGb counter) and the attribute is #N$45 (#REGc
; #COLOUR$45).
 $B302 LD BC,$0545     ; #REGbc=#N$0545.
 $B305 LD HL,$B2ED     ; #REGhl=#R$B2ED.
 $B308 LD IY,$BC67     ; #REGiy=#R$BC67.
 $B30C LD IX,$B2ED     ; #REGix=#R$B2ED.
 $B310 LD (IX+$02),$00 ; Write #N$00 to *#REGix+#N$00.
 $B314 LD (IX+$03),$00 ; Write #N$00 to *#REGix+#N$01.
@label=PrintWages_Loop
*$B318 LD A,(IY-$0A)   ; #REGa=*#REGiy-#N$0A.
 $B31B LD (IX+$01),A   ; Write #REGa to *#REGix+#N$01.
 $B31E ADD A,(IX+$03)  ;
 $B321 DAA             ;
 $B322 LD (IX+$03),A   ;
 $B325 LD A,(IY-$1E)   ;
 $B328 LD (IX+$00),A   ;
 $B32B ADC A,(IX+$02)  ;
 $B32E DAA             ;
 $B32F LD (IX+$02),A   ;
 $B332 CALL $B34C      ; Call #R$B34C.
 $B335 INC D           ; {Increment #REGd by three.
 $B336 INC D           ;
 $B337 INC D           ; }
 $B338 INC IY          ; Increment #REGiy by one.
 $B33A DJNZ $B318      ; Decrease counter by one and loop back to #R$B318 until
                       ; counter is zero.
 $B33C POP IY          ; Restore #REGiy from the stack.
 $B33E LD D,$15        ; #REGd=#N$15.
 $B340 LD HL,$B2EF     ; #REGhl=#R$B2EF.
 $B343 LD E,$11        ; #REGe=#N$11.
 $B345 CALL $B34C      ; Call #R$B34C.
 $B348 JP $B3AB        ; Jump to #R$B3AB.

; Flag: Money Helper
;
; This is #N$00 until a digit has been written. It's used to suppress writing
; leading #N$00's so the output is "£ 10" instead of "£010".
@label=Flag_MoneyHelper
g$B34B DEFB $00      ; Either #N$00 or #N$01.

; Print Earnings
;
; Used by the routines at #R$B2F1 and #R$B451.
;
; C Initial colour attribute value
; DE Screen co-ordinates
; HL Pointer to money earned memory location
@label=PrintEarnings
c$B34C PUSH HL       ; {Stash #REGhl, #REGbc and #REGde on the stack.
 $B34D PUSH BC       ;
 $B34E PUSH DE       ; }
; Print (or don't print) the equals sign:
;       #UDGTABLE { #UDG($DFDC+$3D*$08,attr=$45) } UDGTABLE#
;       When called by #R$B451 the attribute for this is #N$00 (#COLOUR$00 and so, is invisible).
 $B34F LD A,$3D      ; #REGa=#N$3D.
 $B351 CALL $B715    ; Call #R$B715.
; Move one character block to the right.
 $B354 INC E         ; Increment #REGe by one.
; Print the GBP pounds sign.
;       #UDGTABLE { #UDG($DFDC+$26*$08,attr=$42) } UDGTABLE#
 $B355 LD C,$42      ; #REGc=#N$42 (#COLOUR$42).
 $B357 LD A,$26      ; #REGa=#N$26.
 $B359 CALL $B715    ; Call #R$B715.
; Move one character block to the right.
 $B35C INC E         ; Increment #REGe by one.
; Initialise the leading zero suppression flag. See #R$B34B for details.
 $B35D XOR A         ; {Write #N$00 to #R$B34B.
 $B35E LD ($B34B),A  ; }
; Set the attribute for all the money digits.
 $B361 LD C,$45      ; #REGc=#N$45 (#COLOUR$45).
; Money is stored as two digits.
 $B363 LD B,$02      ; #REGb=#N$02 (counter).
; Fetch the money digit.
@label=PrintEarnings_Loop
*$B365 LD A,(HL)     ; #REGa=*#REGhl.
 $B366 SRL A         ; {Shift and rotate the upper bits to be the lower bits.
 $B368 SRL A         ;
 $B36A SRL A         ;
 $B36C SRL A         ; }
; Convert the number into ASCII ready for printing to the screen.
; .
; Add ASCII "0" - so for example #N$01 ends up being
;       #N$01 + #N$30 = #N$31 (e.g. "1" in ASCII).
 $B36E ADD A,$30     ; #REGa+=#N$30.
; If the resulting number is not zero, then it needs to be printed to the
; screen.
 $B370 CP $30        ; {If #REGa is not #N$30 jump to #R$B37C.
 $B372 JR NZ,$B37C   ; }
; And, if it is zero - print it, unless the leading zero suppression flag says
; otherwise.
 $B374 LD A,($B34B)  ; {If #R$B34B is zero jump to #R$B384.
 $B377 OR A          ;
 $B378 JR Z,$B384    ; }
; Set the following printed character to be zero:
;       #UDGTABLE { #UDG($DFDC+$30*$08,attr=$45) } UDGTABLE#
 $B37A LD A,$30      ; #REGa=#N$30.
@label=PrintEarnings_Print_Upper
*$B37C CALL $B715    ; Call #R$B715.
; Indicate that we have written a digit.
 $B37F LD A,$01      ; {Write #N$01 to #R$B34B.
 $B381 LD ($B34B),A  ; }
; Move one character block to the right.
@label=PrintEarnings_Skip
*$B384 INC E         ; Increment #REGe by one.
; Refresh the money byte. We've processed the upper bits already and now we
; want to process the lower bits.
 $B385 LD A,(HL)     ; #REGa=*#REGhl.
 $B386 AND %00001111 ; Keep only bits 0-3.
; As above; add ASCII "0".
 $B388 ADD A,$30     ; #REGa+=#N$30.
; If the resulting number is not zero, then it needs to be printed to the
; screen.
 $B38A CP $30        ; {If #REGa is not #N$30 jump to #R$B39B.
 $B38C JR NZ,$B39B   ; }
; Force some output if everything is zero.
 $B38E LD A,B        ; {If #REGb (the counter) is #N$01 jump to #R$B399.
 $B38F CP $01        ;
 $B391 JR Z,$B399    ; }
; If nothing has been printed yet just skip to the next money byte.
 $B393 LD A,($B34B)  ; {If #R$B34B is zero jump to #R$B3A3.
 $B396 OR A          ;
 $B397 JR Z,$B3A3    ; }
; #UDGTABLE
; { #UDG($DFDC+$30*$08,attr=$45) }
; UDGTABLE#
@label=PrintEarnings_Print_Zero
*$B399 LD A,$30      ; #REGa=#N$30.
@label=PrintEarnings_Print_Lower
*$B39B CALL $B715    ; Call #R$B715.
 $B39E LD A,$01      ; {Write #N$01 to #R$B34B.
 $B3A0 LD ($B34B),A  ; }
; Move one character block to the right.
@label=PrintEarnings_NextByte
*$B3A3 INC E         ; Increment #REGe by one.
; Move onto the next money byte.
 $B3A4 INC HL        ; Increment #REGhl by one.
 $B3A5 DJNZ $B365    ; Decrease counter by one and loop back to #R$B365 until
                     ; counter is zero.
; Restore all the previous registers and return.
 $B3A7 POP DE        ; {Restore #REGde, #REGbc and #REGhl from the stack.
 $B3A8 POP BC        ;
 $B3A9 POP HL        ; }
 $B3AA RET           ; Return.

; Press Any Key
;
; Used by the routines at #R$B2F1, #R$B3BE and #R$B451.
;
; .
;
; Test for a keypress...
@label=PressAnyKey
c$B3AB XOR A         ; #REGa=#N$00.
 $B3AC IN A,($FE)    ; Check for keyboard input.
 $B3AE OR %11100000  ; Set bits 5-7.
 $B3B0 CP $FF        ; {If the result is not #N$FF jump to #R$B3AB.
 $B3B2 JR NZ,$B3AB   ; }
; Test for a key release...
@label=PressAnyKey_Debounce
*$B3B4 XOR A         ; #REGa=#N$00.
 $B3B5 IN A,($FE)    ; Check for keyboard input.
 $B3B7 OR %11100000  ; Set bits 5-7.
 $B3B9 CP $FF        ; {If the result is #N$FF jump to #R$B3B4.
 $B3BB JR Z,$B3B4    ; }
 $B3BD RET           ; Return.

; Routine at B3BE
c$B3BE DEFB $B0,$88,$60,$38,$10 ;
; This entry point is used by the routine at #R$ED2A.
*$B3C3 LD DE,$131C              ;
 $B3C6 LD HL,$CCF2              ;
 $B3C9 CALL $B82B               ;
*$B3CC LD IY,$BC67              ;
 $B3D0 LD HL,$B3BE              ;
 $B3D3 LD B,$05                 ;
*$B3D5 PUSH BC                  ;
 $B3D6 LD (IY+$0A),$98          ;
 $B3DA LD A,(IY+$05)            ;
 $B3DD CP (HL)                  ;
 $B3DE JR Z,$B41D               ;
*$B3E0 PUSH AF                  ;
 $B3E1 LD A,(IY+$0F)            ;
 $B3E4 CP $16                   ;
 $B3E6 JR Z,$B3F3               ;
 $B3E8 LD (IY+$0F),$16          ;
 $B3EC LD (IY+$05),$00          ;
 $B3F0 POP AF                   ;
 $B3F1 SCF                      ;
 $B3F2 PUSH AF                  ;
*$B3F3 POP AF                   ;
 $B3F4 PUSH HL                  ;
 $B3F5 JR NC,$B404              ;
 $B3F7 LD (IY+$3C),$01          ;
 $B3FB LD (IY+$41),$01          ;
 $B3FF CALL $B288               ;
 $B402 JR $B40F                 ;
*$B404 LD (IY+$3C),$FF          ;
 $B408 LD (IY+$41),$FF          ;
 $B40C CALL $B288               ;
*$B40F POP HL                   ;
 $B410 POP BC                   ;
*$B411 LD IY,$BC67              ;
 $B415 CALL $EEC1               ;
 $B418 CALL $B9D6               ;
 $B41B JR $B3CC                 ;
*$B41D LD A,(IY+$0F)            ;
 $B420 CP $16                   ;
 $B422 JR NZ,$B3E0              ;
 $B424 POP BC                   ;
 $B425 INC HL                   ;
 $B426 INC IY                   ;
 $B428 DJNZ $B3D5               ;
 $B42A LD A,($F6DB)             ;
 $B42D OR A                     ;
 $B42E JR Z,$B411               ;
 $B430 LD DE,$0400              ; #REGde=#N($0400,$04,$04).
 $B433 LD HL,$7E68              ; #REGhl=#R$7E68.
 $B436 CALL $B84B               ; Call #R$B84B.
 $B439 CALL $B3AB               ; Call #R$B3AB.
 $B43C CALL $B8ED               ; Call #R$B8ED.
 $B43F LD DE,$0002              ; #REGde=#N($0002,$04,$04).
 $B442 LD HL,$7C76              ; #REGhl=#R$7C76.
 $B445 CALL $B8C4               ; Call #R$B8C4.
 $B448 CALL $B3AB               ; Call #R$B3AB.
 $B44B CALL $B2F1               ; Call #R$B2F1.
 $B44E JP $8184                 ; Jump to #R$8184.

; Game Over
;
; Used by the routine at #R$E329.
@label=GameOver
c$B451 CALL $B8ED    ; Call #R$B8ED.
; Print the total gang earnings.
 $B454 LD HL,$ECFE   ; #REGhl=#R$ECFE.
 $B457 LD DE,$080A   ; #REGde=#N$080A (screen co-ordinates).
; Hide the first character, it's not relevant for this page.
 $B45A LD C,$00      ; #REGc=#N$00 (#COLOUR$00).
 $B45C CALL $B34C    ; Call #R$B34C.
 $B45F LD HL,$7D48   ; #REGhl=#R$7D48.
 $B462 LD DE,$0504   ; #REGde=#N$0504.
 $B465 CALL $B8C4    ; Call #R$B8C4.
 $B468 CALL $B3AB    ; Call #R$B3AB.
 $B46B CALL $B2F1    ; Call #R$B2F1.
 $B46E JP $8184      ; Jump to #R$8184.

; Initialise Theme Music
;
; Used by the routine at #R$80E5.
@label=Initialise_Theme_Music
c$B471 DI            ; Disable interrupts.
 $B472 LD HL,$B560   ; {Write #R$B560 to #R$B4E7.
 $B475 LD ($B4E7),HL ; }
 $B478 LD A,$FF      ; {Write #N$FF to #R$B4E9.
 $B47A LD ($B4E9),A  ; }
 $B47D INC A         ; {Write #N$00 to #R$B55F.
 $B47E LD ($B55F),A  ; }
 $B481 RET           ; Return.

; Routine at B482
;
; Used by the routine at #R$80E5.
c$B482 LD HL,($B4E7) ; #REGhl=*#R$B4E7.
 $B485 LD A,(HL)     ; #REGa=*#REGhl.
 $B486 OR A          ;
 $B487 JR NZ,$B494   ;
 $B489 LD A,$01      ; {Write #N$01 to #R$B55F.
 $B48B LD ($B55F),A  ; }
 $B48E LD A,$FF      ; {Write #N$FF to #R$B4E9.
 $B490 LD ($B4E9),A  ; }
 $B493 RET           ; Return.
*$B494 INC HL        ; Increment #REGhl by one.
 $B495 CP $FE        ;
 $B497 JR NZ,$B4A2   ;
 $B499 XOR A         ; {Write #N$00 to #R$B4EA.
*$B49A LD ($B4EA),A  ; }
 $B49D LD ($B4E7),HL ;
 $B4A0 JR $B482      ; Jump to #R$B482.
*$B4A2 CP $FF        ;
 $B4A4 JR NZ,$B4AA   ;
 $B4A6 LD A,$01      ; #REGa=#N$01.
 $B4A8 JR $B49A      ; Jump to #R$B49A.
*$B4AA PUSH AF       ; Stash #REGaf on the stack.
 $B4AB LD A,(HL)     ; #REGa=*#REGhl.
 $B4AC INC HL        ; Increment #REGhl by one.
 $B4AD LD ($B4E7),HL ; Write #REGhl to #R$B4E7.
 $B4B0 OR A          ;
 $B4B1 JR Z,$B4DB    ;
 $B4B3 LD L,A        ;
 $B4B4 LD H,$00      ;
 $B4B6 ADD HL,HL     ;
 $B4B7 LD DE,$B537   ;
 $B4BA ADD HL,DE     ;
 $B4BB LD C,(HL)     ;
 $B4BC LD B,$00      ;
 $B4BE INC HL        ;
 $B4BF LD E,(HL)     ;
 $B4C0 LD D,B        ;
 $B4C1 POP AF        ;
 $B4C2 LD HL,$0000   ;
*$B4C5 ADD HL,DE     ;
 $B4C6 DEC A         ;
 $B4C7 JR NZ,$B4C5   ;
 $B4C9 EX DE,HL      ;
 $B4CA CALL $B505    ; Call #R$B505.
 $B4CD LD A,($B4E9)  ; #REGa=*#R$B4E9.
 $B4D0 CP $FF        ; {Return if #REGa is not #N$FF.
 $B4D2 RET NZ        ; }
*$B4D3 LD BC,$0320   ; #REGbc=#N$0320.
 $B4D6 CALL $B4EB    ; Call #R$B4EB.
 $B4D9 JR $B482      ; Jump to #R$B482.
*$B4DB LD BC,$19C8   ; #REGbc=#N$19C8.
 $B4DE POP AF        ; Restore #REGaf from the stack.
*$B4DF CALL $B4EB    ; Call #R$B4EB.
 $B4E2 DEC A         ; Decrease #REGa by one.
 $B4E3 JR NZ,$B4DF   ;
 $B4E5 JR $B4D3      ; Jump to #R$B4D3.

; Data block at B4E7
w$B4E7 DEFW $0000

; Data block at B4E9
b$B4E9 DEFB $FF
 $B4EA DEFB $00

; Routine at B4EB
;
; Used by the routines at #R$B482 and #R$B505.
c$B4EB PUSH AF       ; {Stash #REGaf, #REGbc and #REGde on the stack.
 $B4EC PUSH BC       ;
 $B4ED PUSH DE       ; }
*$B4EE DEC BC        ; Decrease #REGbc by one.
 $B4EF LD A,B        ; {Jump to #R$B4EE until #REGbc is #N($0000,$04,$04).
 $B4F0 OR C          ;
 $B4F1 JR NZ,$B4EE   ; }
 $B4F3 LD A,$F7      ; {Read from the keyboard;
 $B4F5 IN A,($FE)    ; #TABLE(default,centre,centre,centre,centre,centre,centre)
                     ; { =h,r2 Port Number | =h,c5 Bit }
                     ; { =h 0 | =h 1 | =h 2 | =h 3 | =h 4 }
                     ; { #N$F7 | 1 | 2 | 3 | 4 | 5 }
                     ; TABLE#}
 $B4F7 OR %11110000  ; Set bits 4-7.
 $B4F9 LD E,A        ;
 $B4FA LD A,($B4E9)  ;
 $B4FD AND E         ;
 $B4FE LD ($B4E9),A  ;
 $B501 POP DE        ; {Restore #REGde, #REGbc and #REGaf from the stack.
 $B502 POP BC        ;
 $B503 POP AF        ; }
 $B504 RET           ; Return.

; Routine at B505
;
; Used by the routine at #R$B482.
c$B505 LD A,($B4EA)  ;
 $B508 OR A          ;
 $B509 JR Z,$B50F    ;
 $B50B LD H,B        ;
 $B50C LD L,C        ;
 $B50D JR $B520      ;
*$B50F LD H,B        ;
 $B510 LD L,C        ;
 $B511 SRA B         ;
 $B513 RR C          ;
 $B515 ADD HL,BC     ;
 $B516 SRA B         ;
 $B518 RR C          ;
 $B51A ADD HL,BC     ;
 $B51B SRA B         ;
 $B51D RR C          ;
 $B51F ADD HL,BC     ;
*$B520 LD A,$10      ;
 $B522 OUT ($FE),A   ;
 $B524 CALL $B4EB    ;
 $B527 XOR A         ;
 $B528 OUT ($FE),A   ;
 $B52A PUSH BC       ;
 $B52B LD B,H        ;
 $B52C LD C,L        ;
 $B52D CALL $B4EB    ;
 $B530 POP BC        ;
 $B531 DEC DE        ;
 $B532 LD A,D        ;
 $B533 OR E          ;
 $B534 JR NZ,$B520   ;
 $B536 RET           ; Return.

; Data block at B537
b$B537 DEFB $00,$00,$EC,$1C,$DF,$1C,$D3,$1E
 $B53F DEFB $C7,$20,$BB,$24,$B1,$25,$A7,$27
 $B547 DEFB $9D,$2A,$94,$2C,$8A,$2D,$83,$31
 $B54F DEFB $7C,$36,$73,$3A,$6E,$3C,$67,$40
 $B557 DEFB $62,$42,$5C,$48,$56,$4C,$51,$52

; Data block at B55F
b$B55F DEFB $00
 $B560 DEFB $FF,$03,$07,$03,$07,$02,$07,$01
 $B568 DEFB $04,$02,$07,$0D,$0C,$03,$0E,$03
 $B570 DEFB $0E,$02,$0E,$01,$0C,$02,$09,$03
 $B578 DEFB $06,$03,$0E,$03,$0D,$03,$0C,$02
 $B580 DEFB $0B,$03,$13,$01,$09,$03,$11,$02
 $B588 DEFB $07,$03,$10,$01,$05,$09,$0E,$03
 $B590 DEFB $0C,$03,$0C,$02,$0C,$01,$09,$02
 $B598 DEFB $07,$0D,$0C,$FE,$05,$10,$01,$0F
 $B5A0 DEFB $05,$10,$01,$0E,$01,$10,$07,$0C
 $B5A8 DEFB $01,$0C,$01,$0B,$01,$0A,$02,$10
 $B5B0 DEFB $01,$0F,$02,$10,$01,$0E,$02,$10
 $B5B8 DEFB $01,$0E,$02,$10,$01,$0E,$0C,$0E
 $B5C0 DEFB $05,$0E,$01,$0D,$05,$0E,$01,$10
 $B5C8 DEFB $01,$11,$0A,$0E,$03,$0C,$01,$0C
 $B5D0 DEFB $02,$09,$01,$07,$02,$0C,$01,$0C
 $B5D8 DEFB $02,$09,$01,$07,$0C,$0C,$05,$10
 $B5E0 DEFB $01,$0F,$05,$10,$01,$0E,$01,$10
 $B5E8 DEFB $07,$0C,$01,$0C,$01,$0B,$01,$0A
 $B5F0 DEFB $02,$10,$01,$0F,$02,$10,$01,$0E
 $B5F8 DEFB $02,$10,$01,$0E,$02,$10,$01,$0E
 $B600 DEFB $0C,$0E,$05,$0E,$01,$0D,$05,$0E
 $B608 DEFB $01,$10,$01,$11,$0A,$0E,$03,$0C
 $B610 DEFB $01,$0C,$02,$09,$01,$07,$02,$0C
 $B618 DEFB $01,$0C,$02,$09,$01,$07,$0C,$0C
 $B620 DEFB $FF,$03,$07,$03,$07,$02,$07,$01
 $B628 DEFB $04,$02,$07,$0D,$0C,$03,$0E,$03
 $B630 DEFB $0E,$02,$0E,$01,$0C,$02,$09,$04
 $B638 DEFB $06,$03,$0E,$03,$0D,$03,$0C,$02
 $B640 DEFB $0B,$03,$13,$01,$09,$03,$11,$02
 $B648 DEFB $07,$03,$10,$01,$05,$09,$0E,$03
 $B650 DEFB $0C,$03,$0C,$02,$0C,$01,$09,$02
 $B658 DEFB $07,$0D,$0C,$03,$0B,$03,$0B,$02
 $B660 DEFB $0B,$01,$06,$02,$03,$0D,$0B,$03
 $B668 DEFB $07,$03,$07,$02,$07,$01,$06,$02
 $B670 DEFB $07,$0D,$04,$03,$09,$03,$09,$02
 $B678 DEFB $09,$01,$04,$02,$01,$0D,$09,$03
 $B680 DEFB $0E,$03,$0E,$02,$0E,$01,$09,$03
 $B688 DEFB $06,$06,$0B,$06,$0A,$FE,$05,$10
 $B690 DEFB $01,$0F,$05,$10,$01,$0E,$01,$10
 $B698 DEFB $07,$0C,$01,$0C,$01,$0B,$01,$0A
 $B6A0 DEFB $02,$10,$01,$0F,$02,$10,$01,$0E
 $B6A8 DEFB $02,$10,$01,$0E,$02,$10,$01,$0E
 $B6B0 DEFB $0C,$0E,$05,$0E,$01,$0D,$05,$0E
 $B6B8 DEFB $01,$10,$01,$11,$0A,$0E,$02,$0C
 $B6C0 DEFB $01,$0C,$02,$09,$01,$07,$02,$0C
 $B6C8 DEFB $01,$0C,$02,$09,$01,$07,$0C,$0C
 $B6D0 DEFB $FF,$05,$10,$01,$0F,$05,$10,$01
 $B6D8 DEFB $0E,$01,$10,$07,$0C,$01,$0C,$01
 $B6E0 DEFB $0B,$02,$0A,$02,$10,$01,$0F,$02
 $B6E8 DEFB $10,$01,$0E,$02,$10,$01,$0E,$02
 $B6F0 DEFB $10,$01,$0E,$0C,$0E,$05,$0E,$01
 $B6F8 DEFB $0D,$05,$0E,$01,$10,$01,$11,$0A
 $B700 DEFB $0E,$02,$0C,$01,$0C,$02,$09,$01
 $B708 DEFB $07,$02,$0C,$01,$0C,$02,$09,$01
 $B710 DEFB $07,$0C,$0C,$00,$00

; Print Colour String
;
; Used by the routines at #R$B34C and #R$B8C4.
;
; C Attribute colour
@label=PrintStringColour
c$B715 PUSH AF       ; {Stash #REGaf, #REGix, #REGhl, #REGbc and #REGde on the
 $B716 PUSH IX       ; stack.
 $B718 PUSH HL       ;
 $B719 PUSH BC       ;
 $B71A PUSH DE       ; }
 $B71B EX DE,HL      ; Exchange the #REGde and #REGhl registers.
 $B71C PUSH HL       ; Stash #REGhl on the stack.
 $B71D LD D,$58      ; #REGd=#N$58.
 $B71F LD E,L        ; #REGe=#REGl.
 $B720 LD L,H        ; #REGl=#REGh.
 $B721 LD H,$00      ; #REGh=#N$00.
 $B723 ADD HL,HL     ;
 $B724 ADD HL,HL     ;
 $B725 ADD HL,HL     ;
 $B726 ADD HL,HL     ;
 $B727 ADD HL,HL     ;
 $B728 ADD HL,DE     ;
 $B729 LD (HL),C     ;
 $B72A PUSH DE       ; Stash #REGde on the stack.
 $B72B LD DE,$0020   ; {#REGhl+=#N($0020,$04,$04).
 $B72E ADD HL,DE     ; }
 $B72F POP DE        ; Restore #REGde from the stack.
 $B730 LD (HL),C     ; Write #REGc to *#REGhl.
 $B731 POP HL        ; Restore #REGhl from the stack.
 $B732 LD L,H        ; #REGl=#REGh.
 $B733 LD D,$00      ; #REGd=#N$00.
 $B735 LD H,D        ; #REGh=#REGd.
 $B736 LD C,E        ; #REGc=#REGe.
 $B737 LD B,D        ; #REGb=#REGd.
 $B738 ADD HL,HL     ; {#REGhl*=#N$10.
 $B739 ADD HL,HL     ;
 $B73A ADD HL,HL     ;
 $B73B ADD HL,HL     ; }
 $B73C LD DE,$81F8   ; #REGbc=#R$81F8.
 $B73F ADD HL,DE     ;
 $B740 PUSH HL       ;
 $B741 POP IX        ;
 $B743 LD L,A        ;
 $B744 LD H,$00      ;
 $B746 ADD HL,HL     ;
 $B747 ADD HL,HL     ;
 $B748 ADD HL,HL     ;
 $B749 LD DE,$DFDC   ; {#REGhl+=#R$DFDC.
 $B74C ADD HL,DE     ; }
 $B74D EX DE,HL      ;
 $B74E LD A,$08      ;
*$B750 LD L,(IX+$00) ;
 $B753 LD H,(IX+$01) ;
 $B756 ADD HL,BC     ;
 $B757 INC IX        ;
 $B759 INC IX        ;
 $B75B EX DE,HL      ;
 $B75C LDI           ;
 $B75E EX DE,HL      ;
 $B75F INC BC        ;
 $B760 LD L,(IX+$00) ;
 $B763 LD H,(IX+$01) ;
 $B766 ADD HL,BC     ;
 $B767 INC IX        ;
 $B769 INC IX        ;
 $B76B DEC DE        ;
 $B76C EX DE,HL      ;
 $B76D LDI           ;
 $B76F EX DE,HL      ;
 $B770 INC BC        ;
 $B771 DEC A         ;
 $B772 JR NZ,$B750   ;
 $B774 POP DE        ; {Restore #REGde, #REGbc, #REGhl, #REGix and #REGaf from
 $B775 POP BC        ; the stack.
 $B776 POP HL        ;
 $B777 POP IX        ;
 $B779 POP AF        ; }
 $B77A RET           ; Return.

; Routine at B77B
;
; Used by the routine at #R$E41D.
c$B77B PUSH AF       ; {Push #REGaf, #REGhl, #REGbc and #REGde on the stack.
 $B77C PUSH HL       ;
 $B77D PUSH BC       ;
 $B77E PUSH DE       ; }
 $B77F LD C,E        ; #REGc=#REGe.
 $B780 LD L,D        ; #REGl=#REGd.
 $B781 LD D,$00      ; #REGd=#N$00.
 $B783 LD H,D        ; #REGh=#REGd.
 $B784 LD B,D        ; #REGb=#REGd.
 $B785 ADD HL,HL     ; {#REGhl*=#N$10.
 $B786 ADD HL,HL     ;
 $B787 ADD HL,HL     ;
 $B788 ADD HL,HL     ; }
 $B789 LD DE,$81F8   ; #REGde=#R$81F8.
 $B78C ADD HL,DE     ;
 $B78D PUSH HL       ;
 $B78E POP IX        ;
 $B790 LD L,A        ;
 $B791 LD H,$00      ;
 $B793 ADD HL,HL     ; {#REGhl*=#N$0100.
 $B794 ADD HL,HL     ;
 $B795 ADD HL,HL     ;
 $B796 ADD HL,HL     ;
 $B797 ADD HL,HL     ; }
 $B798 LD DE,$8378   ; #REGde=#R$8378.
 $B79B ADD HL,DE     ; #REGhl+=#REGde.
 $B79C EX DE,HL      ; Switch the #REGde and #REGhl registers.
 $B79D LD A,$10      ; #REGa=#N$10.
*$B79F LD L,(IX+$00) ;
 $B7A2 LD H,(IX+$01) ;
 $B7A5 ADD HL,BC     ; #REGhl+=#REGbc.
 $B7A6 INC IX        ; {Increment #REGix by two.
 $B7A8 INC IX        ; }
 $B7AA EX DE,HL      ; Switch the #REGde and #REGhl registers.
 $B7AB LDI           ;
 $B7AD LDI           ;
 $B7AF EX DE,HL      ; Switch the #REGde and #REGhl registers.
 $B7B0 INC BC        ; {Increment #REGbc by two.
 $B7B1 INC BC        ; }
 $B7B2 DEC A         ; Decrease #REGa by one.
 $B7B3 JR NZ,$B79F   ; Jump to #R$B79F until #REGa is zero.
 $B7B5 POP DE        ; {Restore #REGde, #REGbc, #REGhl and #REGaf from the
 $B7B6 POP BC        ; stack.
 $B7B7 POP HL        ;
 $B7B8 POP AF        ; }
 $B7B9 RET           ; Return.

; Draw Sprite Block To Screen
;
; Used by the routines at #R$B84B and #R$E329.
;
; DE Screen Buffer Co-ordinates
; HL Sprite data
; A Sprite ID
; C Sprite attribute value
@label=DrawSprite
c$B7BA PUSH AF       ; {Stash #REGaf, #REGhl, #REGbc and #REGde on the stack.
 $B7BB PUSH HL       ;
 $B7BC PUSH BC       ;
 $B7BD PUSH DE       ; }
 $B7BE EX DE,HL      ; Exchange the #REGde and #REGhl registers.
 $B7BF PUSH HL       ; Stash #REGhl on the stack.
 $B7C0 LD D,$58      ; #REGd=#N$58.
 $B7C2 LD E,L        ; #REGe=#REGl.
 $B7C3 LD L,H        ; #REGl=#REGh.
 $B7C4 LD H,$00      ; #REGh=#N$00.
 $B7C6 ADD HL,HL     ; {#REGhl=(#REGhl*#N$20)+#REGde.
 $B7C7 ADD HL,HL     ;
 $B7C8 ADD HL,HL     ;
 $B7C9 ADD HL,HL     ;
 $B7CA ADD HL,HL     ;
 $B7CB ADD HL,DE     ; }
 $B7CC LD (HL),C     ; Write #REGc to *#REGhl.
 $B7CD POP HL        ; Restore #REGhl from the stack.
 $B7CE LD L,H        ; #REGl=#REGh.
 $B7CF LD D,$00      ; #REGd=#N$00.
 $B7D1 LD H,D        ; #REGh=#REGd.
 $B7D2 PUSH DE       ; Stash #REGde on the stack.
 $B7D3 ADD HL,HL     ; {#REGhl*=#N$10.
 $B7D4 ADD HL,HL     ;
 $B7D5 ADD HL,HL     ;
 $B7D6 ADD HL,HL     ; }
 $B7D7 LD DE,$81F8   ; {#REGhl+=#R$81F8.
 $B7DA ADD HL,DE     ; }
 $B7DB LD E,(HL)     ; #REGe=*#REGhl.
 $B7DC INC HL        ; Increment #REGhl by one.
 $B7DD LD D,(HL)     ; #REGd=*#REGhl.
 $B7DE EX DE,HL      ; Switch the #REGde and #REGhl registers.
 $B7DF POP DE        ; Restore #REGde from the stack.
 $B7E0 ADD HL,DE     ; #REGhl+=#REGde.
 $B7E1 EX DE,HL      ; Switch the #REGde and #REGhl registers.
 $B7E2 LD L,A        ; {Create an offset in #REGhl.
 $B7E3 LD H,$00      ; }
 $B7E5 ADD HL,HL     ; {#REGhl*=#N$08.
 $B7E6 ADD HL,HL     ;
 $B7E7 ADD HL,HL     ; }
; This is modified from #R$B872.
 $B7E8 LD BC,$DFDC   ; {#REGhl+=#R$DFDC.
 $B7EB ADD HL,BC     ; }
 $B7EC LD B,$08      ; #REGb=#N$08 (counter).
@label=DrawSprite_Loop
*$B7EE LD A,(HL)     ; {Copy a byte from *#REGhl and write it to *#REGde.
 $B7EF LD (DE),A     ; }
 $B7F0 INC HL        ; Increment #REGhl by one.
 $B7F1 INC D         ; Increment #REGd by one.
 $B7F2 DJNZ $B7EE    ; Decrease counter by one and loop back to #R$B7EE until
                     ; counter is zero.
 $B7F4 POP DE        ; {Restore #REGde, #REGbc, #REGhl and #REGaf from the
 $B7F5 POP BC        ; stack.
 $B7F6 POP HL        ;
 $B7F7 POP AF        ; }
 $B7F8 RET           ; Return.

; Routine at B7F9
;
; Used by the routine at #R$F10E.
c$B7F9 PUSH AF       ; {Stash #REGaf, #REGhl, #REGbc and #REGde on the stack.
 $B7FA PUSH HL       ;
 $B7FB PUSH BC       ;
 $B7FC PUSH DE       ; }
 $B7FD EX DE,HL      ; Switch the #REGde and #REGhl registers.
 $B7FE PUSH HL       ; Stash #REGhl on the stack.
 $B7FF LD D,$FD      ; #REGd=#N$FD.
 $B801 LD E,L        ; #REGe=#REGl.
 $B802 LD L,H        ; #REGl=#REGh.
 $B803 LD H,$00      ; #REGh=#N$00.
 $B805 ADD HL,HL     ; {#REGhl*=(#N$20)+#REGde.
 $B806 ADD HL,HL     ;
 $B807 ADD HL,HL     ;
 $B808 ADD HL,HL     ;
 $B809 ADD HL,HL     ;
 $B80A ADD HL,DE     ; }
 $B80B LD (HL),C     ; Write #REGc to *#REGhl.
 $B80C POP HL        ; Restore #REGhl from the stack.
 $B80D LD DE,$5300   ; {#REGhl+=#R$5300.
 $B810 ADD HL,DE     ; }
 $B811 EX DE,HL      ; Switch the #REGde and #REGhl registers.
 $B812 LD L,A        ; {Create an offset in #REGhl.
 $B813 LD H,$00      ; }
 $B815 ADD HL,HL     ; {#REGhl*=#N$08.
 $B816 ADD HL,HL     ;
 $B817 ADD HL,HL     ; }
 $B818 LD BC,($B7E9) ; {#REGhl+=*#R$B7E8(#N$B7E9).
 $B81C ADD HL,BC     ; }
*$B81D LDI           ; Write *#REGhl to *#REGde, increment both #REGde and
                     ; #REGhl by one, and decrease #REGbc by one.
 $B81F DEC E         ; Decrease #REGb by one.
 $B820 LD A,E        ; {#REGe+=#N$20.
 $B821 ADD A,$20     ;
 $B823 LD E,A        ; }
 $B824 JR NC,$B81D   ;
 $B826 POP DE        ; {Restore #REGde, #REGbc, #REGhl and #REGaf from the
 $B827 POP BC        ; stack.
 $B828 POP HL        ;
 $B829 POP AF        ; }
 $B82A RET           ; Return.

; Routine at B82B
;
; Used by the routines at #R$B3BE, #R$EB79 and #R$EFC7.
c$B82B PUSH HL       ; Stash #REGhl on the stack.
 $B82C LD HL,$B7F9   ; {Write #R$B7F9 to: #LIST { #R$B8BD(#N$B8BE) } {
 $B82F LD ($B8BE),HL ; #R$B8B4(#N$B8B5) } { #R$B894(#N$B895) } LIST#
 $B832 LD ($B8B5),HL ;
 $B835 LD ($B895),HL ; }
 $B838 POP HL        ; Restore #REGhl from the stack.
 $B839 CALL $B84B    ; Call #R$B84B.
 $B83C PUSH HL       ; Stash #REGhl on the stack.
 $B83D LD HL,$B7BA   ; {Write #R$B7BA to: #LIST { #R$B894(#N$B895) } {
 $B840 LD ($B895),HL ; #R$B8BD(#N$B8BE) } { #R$B8B4(#N$B8B5) } LIST#
 $B843 LD ($B8BE),HL ;
 $B846 LD ($B8B5),HL ; }
 $B849 POP HL        ; Restore #REGhl from the stack.
 $B84A RET           ; Return.

; Handler: Graphics Controller
;
; Used by the routines at #R$B3BE, #R$B82B, #R$B952, #R$BA6E, #R$BAB3, #R$E3FD,
; #R$E41D and #R$ED2A.
;
; DE Screen cursor commands
; HL Pointer to graphics data
@label=Controller_Tile
c$B84B LD A,(HL)     ; #REGa=*#REGhl.
 $B84C INC HL        ; Increment #REGhl by one.
 $B84D CP $80        ; {If #REGa is lower than #N$80, jump to #R$B8BD.
 $B84F JR C,$B8BD    ; }
; Return if the terminator is reached.
 $B851 CP $FF        ; {Return if #REGa is the terminator (#N$FF).
 $B853 RET Z         ; }
; Check for the #N$FE control character. This signifies that the subsequent
; byte is the colour attribute.
 $B854 CP $FE        ; {If #REGa is not #N$FE, jump to #R$B85C.
 $B856 JR NZ,$B85C   ; }
 $B858 LD C,(HL)     ; #REGc=*#REGhl (set the attribute).
 $B859 INC HL        ; Increment #REGhl by one.
 $B85A JR $B84B      ; Jump to #R$B84B.
; If the value is between #N$A8-#N$E8 then it is screen co-ordinates.
@label=Controller_Tile_Screen_Instructions
*$B85C CP $A8        ; {If #REGa is lower than #N$A8, jump to #R$B8BD.
 $B85E JR C,$B8BD    ; }
 $B860 CP $E8        ; {If #REGa is higher than #N$E8, jump to #R$B86E.
 $B862 JR NC,$B86E   ; }
; Remove the control number, then we're left with the desired screen
; co-ordinate data updates.
 $B864 SUB $C8       ; {#REGe=(#REGa-#N$C8)+#REGe.
 $B866 ADD A,E       ;
 $B867 LD E,A        ; }
 $B868 LD A,D        ; {#REGd+=*#REGhl.
 $B869 ADD A,(HL)    ;
 $B86A LD D,A        ; }
 $B86B INC HL        ; Increment #REGhl by one.
 $B86C JR $B84B      ; Jump to #R$B84B.
; Check for the #N$FB control character. This signifies that the following two
; bytes should be set as the sprite bank address.
@label=Controller_Tile_Bank
*$B86E CP $FB        ; {If #REGa is not #N$FB, jump to #R$B87E.
 $B870 JR NZ,$B87E   ; }
 $B872 LD A,(HL)     ; {Write *#REGhl to #R$B7E8(#N$B7E9).
 $B873 LD ($B7E9),A  ; }
 $B876 INC HL        ; Increment #REGhl by one.
 $B877 LD A,(HL)     ; {Write *#REGhl to #R$B7E8(#N$B7EA).
 $B878 LD ($B7EA),A  ; }
 $B87B INC HL        ; Increment #REGhl by one.
 $B87C JR $B84B      ; Jump to #R$B84B.
; Check for the #N$F1 control character. This signifies that the screen
; location should move down one block.
@label=Controller_Tile_Check_Move_Down
*$B87E CP $F1        ; {If #REGa is #N$F1, jump to #R$B8C0.
 $B880 JR Z,$B8C0    ; }
; Check for the #N$F3 control character. This alters the current message
; pointer (#REGhl).
 $B882 CP $F3        ; {If #REGa is not #N$F3, jump to #R$B88C.
 $B884 JR NZ,$B88C   ; }
 $B886 LD A,(HL)     ; #REGa=*#REGhl.
 $B887 INC HL        ; Increment #REGhl by one.
 $B888 LD H,(HL)     ; #REGh=*#REGhl.
 $B889 LD L,A        ; #REGl=#REGa.
 $B88A JR $B84B      ; Jump to #R$B84B.
; Anything from here involves repetition.
@label=Controller_Tile_Repeaters
*$B88C LD B,(HL)     ; #REGb=*#REGhl (counter).
 $B88D INC HL        ; Increment #REGhl by one.
; Check for the #N$F0 control character.
; Tile sprite to the screen vertically, the number of times indicated in #REGb.
 $B88E CP $F0        ; {If #REGa is not #N$F0, jump to #R$B89C.
 $B890 JR NZ,$B89C   ; }
 $B892 LD A,(HL)     ; #REGa=*#REGhl.
 $B893 INC HL        ; Increment #REGhl by one.
@label=Controller_Tile_Vertical_Loop
*$B894 CALL $B7BA    ; Call #R$B7BA.
 $B897 INC D         ; Increment #REGd by one.
 $B898 DJNZ $B894    ; Decrease counter by one and loop back to #R$B894 until
                     ; counter is zero.
 $B89A JR $B84B      ; Jump to #R$B84B.
; Check for the #N$F2 control character.
*$B89C CP $F2        ; {If #REGa is not #N$F2, jump to #R$B8B2.
 $B89E JR NZ,$B8B2   ; }
*$B8A0 LD A,(HL)     ;
 $B8A1 INC HL        ;
 $B8A2 CALL $B7BA    ;
 $B8A5 LD A,(HL)     ;
 $B8A6 INC E         ;
 $B8A7 CALL $B7BA    ;
 $B8AA INC E         ;
 $B8AB DEC HL        ;
 $B8AC DJNZ $B8A0    ;
 $B8AE INC HL        ;
 $B8AF INC HL        ;
 $B8B0 JR $B84B      ; Jump to #R$B84B.
; Tile sprite to the screen horizontally, the number of times indicated in
; #REGb.
@label=Controller_Tile_Horizontal
*$B8B2 LD A,(HL)     ; #REGa=*#REGhl.
 $B8B3 INC HL        ; Increment #REGhl by one.
@label=Controller_Tile_Horizontal_Loop
*$B8B4 CALL $B7BA    ; Call #R$B7BA.
; Move to the next screen buffer column.
 $B8B7 INC E         ; Increment #REGe by one.
 $B8B8 DJNZ $B8B4    ; Decrease counter by one and loop back to #R$B8B4 until
                     ; counter is zero.
 $B8BA JP $B84B      ; Jump to #R$B84B.
; Draw a tile, and move the screen position down one character block.
@label=Controller_Tile_Draw_Move_Down
*$B8BD CALL $B7BA    ; Call #R$B7BA.
@label=Controller_Tile_Move_Down
*$B8C0 INC E         ; Increment #REGe by one.
 $B8C1 JP $B84B      ; Jump to #R$B84B.

; Print String
;
; Used by the routines at #R$80E5, #R$B2F1, #R$B3BE, #R$B451 and #R$ED2A.
;
; DE Screen co-ordinates
; HL Message address
@label=PrintString
c$B8C4 LD A,(HL)     ; #REGa=*#REGhl.
 $B8C5 INC HL        ; Increment #REGhl by one.
 $B8C6 CP $80        ; {If #REGa is higher than #N$80, jump to #R$B8E7.
 $B8C8 JR C,$B8E7    ; }
; Return if we've reached the terminator (#N$FF).
 $B8CA CP $FF        ; {If #REGa is #N$FF then return.
 $B8CC RET Z         ; }
; If the current byte is our control byte (#N$FE) - we grab the next byte and
; store it in #REGc and then loop back to the start.
 $B8CD CP $FE        ; {If #REGa is not #N$FE, jump to #R$B8D5.
 $B8CF JR NZ,$B8D5   ; }
 $B8D1 LD C,(HL)     ; #REGc=*#REGhl.
 $B8D2 INC HL        ; Increment #REGhl by one.
 $B8D3 JR $B8C4      ; Jump to #R$B8C4.
; Any other data is processed from here.
*$B8D5 CP $A8        ; {If #REGa is higher than #N$A8, jump to #R$B8E7.
 $B8D7 JR C,$B8E7    ; }
 $B8D9 CP $E8        ; {If #REGa is lower than #N$E8, jump to #R$B8E7.
 $B8DB JR NC,$B8E7   ; }
 $B8DD SUB $C8       ; #REGa-=#N$C8.
 $B8DF ADD A,E       ; {#REGe=#REGa+#REGe.
 $B8E0 LD E,A        ; }
 $B8E1 LD A,D        ; {#REGd+=*#REGhl.
 $B8E2 ADD A,(HL)    ;
 $B8E3 LD D,A        ; }
 $B8E4 INC HL        ; Increment #REGhl by one.
 $B8E5 JR $B8C4      ; Jump to #R$B8C4.
*$B8E7 CALL $B715    ; Call #R$B715.
 $B8EA INC E         ; Increment #REGe by one.
 $B8EB JR $B8C4      ; Jump to #R$B8C4.

; Clear Screen
;
; Used by the routines at #R$80E5, #R$8155, #R$B2F1, #R$B3BE and #R$B451.
@label=Clear_Screen
c$B8ED LD HL,$4000   ; {Clear the screen buffer.
 $B8F0 LD (HL),$00   ;
 $B8F2 LD DE,$4001   ;
 $B8F5 LD BC,$1800   ;
 $B8F8 LDIR          ; }
 $B8FA LD (HL),$46   ; {Write #N$46 (#COLOUR$46) to the entire attribute
 $B8FC LD BC,$02FF   ; buffer.
 $B8FF LDIR          ; }
 $B901 RET           ; Return.

; Clear Play Area
;
; Used by the routines at #R$B952, #R$ED2A, #R$EFC7 and #R$F10E.
@label=Clear_PlayArea
c$B902 PUSH HL       ; {Stash #REGhl, #REGbc and #REGde on the stack.
 $B903 PUSH BC       ;
 $B904 PUSH DE       ; }
 $B905 LD IX,$8248   ; #REGix=#R$8248.
 $B909 LD C,$98      ; #REGc=#N$98.
*$B90B LD L,(IX+$00) ; #REGl=#REGix+#N$00.
 $B90E LD H,(IX+$01) ; #REGh=#REGix+#N$01.
 $B911 LD B,$20      ; #REGb=#N$20.
*$B913 LD (HL),$00   ;
 $B915 INC HL        ;
 $B916 DJNZ $B913    ;
 $B918 INC IX        ;
 $B91A INC IX        ;
 $B91C DEC C         ;
 $B91D JR NZ,$B90B   ;
 $B91F LD HL,$58A0   ; #REGhl=#R$58A0.
 $B922 LD BC,$0260   ; #REGbc=#N$0260.
*$B925 LD (HL),$46   ; Write #N$46 to #REGhl (#COLOUR$46).
 $B927 INC HL        ; Increment #REGhl by one.
 $B928 DEC BC        ; Decrease #REGbc by one.
 $B929 LD A,B        ; {Jump to #R$B925 until #REGbc is zero.
 $B92A OR C          ;
 $B92B JR NZ,$B925   ; }
; This entry point is used by the routine at #R$B931.
@label=StackRestore
*$B92D POP DE        ; {Restore #REGde, #REGbc and #REGhl from the stack.
 $B92E POP BC        ;
 $B92F POP HL        ; }
 $B930 RET           ; Return.

; Clear Banner
;
; Used by the routine at #R$E3FD.
@label=Clear_Banner
c$B931 PUSH HL       ; {Stash #REGhl, #REGbc and #REGde on the stack.
 $B932 PUSH BC       ;
 $B933 PUSH DE       ; }
 $B934 LD IX,$81F8   ; #REGix=#R$81F8.
; We're not clearing the whole screen buffer, just #N$20 rows.
 $B938 LD C,$20      ; #REGc=#N$20 (row counter).
; Fetch the screen buffer location.
@label=Clear_Banner_Vertical_Loop
*$B93A LD L,(IX+$00) ; #REGl=*#REGix+#N$00.
 $B93D LD H,(IX+$01) ; #REGh=*#REGix+#N$01.
; Clear the current row.
 $B940 LD B,$20      ; #REGb=#N$20 (column counter).
@label=Clear_Banner_Horizontal_Loop
*$B942 LD (HL),$00   ; Write #N$00 to #REGhl.
 $B944 INC HL        ; Increment #REGhl by one.
 $B945 DJNZ $B942    ; Decrease column counter by one and loop back to #R$B942
                     ; until counter is zero.
; Move onto the next screen buffer location.
 $B947 INC IX        ; {Increment #REGix by two.
 $B949 INC IX        ; }
 $B94B DEC C         ; Decrease the row counter held in #REGc by one.
 $B94C JR NZ,$B93A   ; Jump to #R$B93A until #REGc is zero.
 $B94E JP $B92D      ; Jump to #R$B92D.

; Data block at B951
b$B951 DEFB $00

; Draw Room
;
; Used by the routines at #R$813B, #R$8155, #R$AC06 and #R$ED2A.
@label=DrawRoom
c$B952 LD A,$B8      ; {Write #N$B8 to #R$AF88.
 $B954 LD ($AF88),A  ; }
 $B957 CALL $B902    ; Call #R$B902.
; Get the current room ID and double it. This is stored in #REGde as an offset.
 $B95A LD A,(IY+$0F) ; {#REGe=(*#REGiy+#N$0F)*#N$02.
 $B95D ADD A,A       ;
 $B95E LD E,A        ; }
 $B95F LD D,$00      ; #REGd=#N$00.
 $B961 LD HL,$CDB5   ; {#REGhl=#R$CDB5+#REGde.
 $B964 ADD HL,DE     ; }
; Fetch the room data location from the lookup table.
 $B965 LD E,(HL)     ; #REGe=*#REGhl.
 $B966 INC HL        ; Increment #REGhl by one.
 $B967 LD D,(HL)     ; #REGd=*#REGhl.
 $B968 EX DE,HL      ; Exchange the #REGde and #REGhl registers.
; #HTML(Fetch a room data pair and store it in #REGde. Note, this is
; <em>not</em> a memory address.)
@label=DrawRoom_Loop
*$B969 LD D,(HL)     ; #REGd=*#REGhl.
 $B96A INC HL        ; Increment #REGhl by one.
 $B96B LD E,(HL)     ; #REGe=*#REGhl.
 $B96C INC HL        ; Increment #REGhl by one.
; Drop bit 7 of #REGd and test for the control characters.
 $B96D LD A,D        ; #REGa=#REGd.
 $B96E AND %01111111 ; Keep only bits 0-6.
; Are we done?
 $B970 CP $7F        ; {If the result is #N$7F jump to #R$B9A8.
 $B972 JR Z,$B9A8    ; }
; Some parts of rooms are dynamic (depending on if a task is completed or not),
; check if this should be actioned.
 $B974 CP $7E        ; {If the result is not #N$7E jump to #R$B982.
 $B976 JR NZ,$B982   ; }
; Fetch the task ID.
 $B978 LD A,E        ; #REGa=#REGe.
 $B979 CALL $EC1D    ; Call #R$EC1D.
 $B97C JR NZ,$B969   ; If the task is not complete, jump to #R$B969.
; Move onto the next room data pair.
 $B97E INC HL        ; {Increment #REGhl by two.
 $B97F INC HL        ; }
 $B980 JR $B969      ; Jump to #R$B969.
; Pull out the screen co-ordinates and graphics address.
@label=DrawRoom_ProcessData
*$B982 PUSH HL       ; Stash the room data pointer held by #REGhl on the stack.
 $B983 LD B,A        ; #REGb=#REGa.
; Grab the second byte from the room data pair, this contains both the x and y
; cursor position commands.
; .
; Y is essentially #REGc=bits 3-7 of the second byte of the room data, shifted to bits 0-4. This is assigned to
;       #REGe at #R$B995 below.
 $B984 LD A,E        ; #REGa=#REGe.
 $B985 AND %11111000 ; Keep only bits 3-7.
 $B987 RRA           ; {Rotate #REGa right three times.
 $B988 RRA           ;
 $B989 RRA           ; }
 $B98A LD C,A        ; #REGc=#REGa.
; Todo.
 $B98B RL D          ; Rotate #REGd left once.
 $B98D RL E          ; Rotate #REGe left once.
 $B98F LD A,E        ; #REGa=#REGe.
 $B990 AND %00001111 ; Keep only bits 0-3.
 $B992 ADD A,$05     ; {#REGd=#REGa+#N$05.
 $B994 LD D,A        ; }
 $B995 LD E,C        ; #REGe=#REGc.
; The offset below for the graphic ID is created using the first byte with bit
; 7 from #R$B96D and #R$B983.
 $B996 LD L,B        ; #REGl=#REGb.
 $B997 LD H,$00      ; #REGh=#N$00.
 $B999 ADD HL,HL     ; #REGhl*=#N$02.
 $B99A LD BC,$BD86   ; {#REGhl+=#R$BD86.
 $B99D ADD HL,BC     ; }
; Fetch the graphics control data from the lookup table.
 $B99E LD A,(HL)     ; #REGa=*#REGhl.
 $B99F INC HL        ; Increment #REGhl by one.
 $B9A0 LD H,(HL)     ; #REGh=*#REGhl.
 $B9A1 LD L,A        ; #REGl=#REGa.
 $B9A2 CALL $B84B    ; Call #R$B84B.
 $B9A5 POP HL        ; Restore the room data pointer held by #REGhl from the
                     ; stack.
 $B9A6 JR $B969      ; Jump to #R$B969.
; Finish by blitting the shadow buffer to the screen and return to the calling
; routine.
@label=DrawRoom_Finish
*$B9A8 CALL $B9AC    ; Call #R$B9AC.
 $B9AB RET           ; Return.

; Routine at B9AC
;
; Used by the routines at #R$B952 and #R$ED2A.
c$B9AC LD DE,$5B00   ; #REGde=#N$5B00.
 $B9AF LD IX,$8278   ; #REGix=#R$8278.
 $B9B3 LD BC,$1000   ; #REGbc=#N($1000,$04,$04).
*$B9B6 LD L,(IX+$00) ; #REGl=*#REGix+#N$00.
 $B9B9 LD H,(IX+$01) ; #REGh=*#REGix+#N$01.
 $B9BC INC IX        ; {Increment #REGix by two.
 $B9BE INC IX        ; }
 $B9C0 CALL $BA25    ; Call #R$BA25.
 $B9C3 JP PE,$B9B6   ; If the return from #R$BA25 is even, jump to #R$B9B6.
 $B9C6 LD BC,$0200   ; #REGbc=#N($0200,$04,$04).
 $B9C9 LD DE,$FE00   ; #REGde=#R$FE00.
 $B9CC LD HL,$5900   ; #REGhl=#R$5900.
*$B9CF CALL $BA25    ; Call #R$BA25.
 $B9D2 JP PE,$B9CF   ; If the return from #R$BA25 is even, jump to #R$B9CF.
 $B9D5 RET           ; Return.

; Routine at B9D6
;
; Used by the routines at #R$813B, #R$81AE and #R$B3BE.
c$B9D6 LD A,(IY+$0F) ; {Write #REGiy+#N$0F to #R$B951.
 $B9D9 LD ($B951),A  ; }
 $B9DC LD B,$05      ; #REGb=#N$05.
 $B9DE PUSH IY       ; Stash #REGiy on the stack.
 $B9E0 LD IY,$BC6B   ; #REGiy=#R$BC6B.
*$B9E4 PUSH BC       ; Stash #REGbc on the stack.
 $B9E5 LD A,($B951)  ; #REGa=*#R$B951.
 $B9E8 CP (IY+$0F)   ; {If #REGa is not equal to *#REGiy+#N$0F, jump to
 $B9EB JR NZ,$B9F0   ; #R$B9F0.}
 $B9ED CALL $B0E6    ; Call #R$B0E6.
*$B9F0 DEC IY        ; Decrease #REGiy by one.
 $B9F2 POP BC        ; Restore #REGbc from the stack.
 $B9F3 DJNZ $B9E4    ; Decrease counter by one and loop back to #R$B9E4 until
                     ; counter is zero.
 $B9F5 POP IY        ; Restore #REGiy from the stack.
 $B9F7 CALL $B9FB    ; Call #R$B9FB.
 $B9FA RET           ; Return.

; Copy Shadow Buffer To Screen
;
; Used by the routines at #R$813B, #R$B9D6, #R$ED2A, #R$EFC7 and #R$F10E.
;
; .
;
; Copy the shadow screen buffer.
@label=Copy_ShadowBuffer
c$B9FB LD HL,$6B00   ; #REGhl=#R$6B00.
 $B9FE LD IX,$8278   ; #REGix=#R$8278.
 $BA02 LD BC,$1000   ; #REGbc=#N$1000.
@label=Copy_ShadowBuffer_Loop
*$BA05 LD E,(IX+$00) ; #REGe=*#REGix+#N$00.
 $BA08 LD D,(IX+$01) ; #REGd=*#REGix+#N$01.
 $BA0B INC IX        ; {Increment #REGix by two.
 $BA0D INC IX        ; }
 $BA0F CALL $BA25    ; Call #R$BA25.
 $BA12 JP PE,$BA05   ; Jump to #R$BA05 until #REGbc is zero.
; Copy the shadow attribute buffer.
 $BA15 LD BC,$0200   ; #REGbc=#N$0200.
 $BA18 LD HL,$FC00   ; #REGhl=#R$FC00.
 $BA1B LD DE,$5900   ; #REGde=#R$5900.
@label=Copy_ShadowBuffer_Attributes_Loop
*$BA1E CALL $BA25    ; Call #R$BA25.
 $BA21 JP PE,$BA1E   ; Jump to #R$BA1E until #REGbc is zero.
 $BA24 RET           ; Return.

; Copy Routine
;
; Used by the routines at #R$B9AC, #R$B9FB and #R$EEA2.
@label=CopyRoutine
c$BA25 LDI           ; {#HTML(Runs:
 $BA27 LDI           ; <code><div> LD (#REGde),(#REGhl)</div>
 $BA29 LDI           ; <div>DEC #REGbc</div>
 $BA2B LDI           ; </code> #N$20 times.)
 $BA2D LDI           ;
 $BA2F LDI           ;
 $BA31 LDI           ;
 $BA33 LDI           ;
 $BA35 LDI           ;
 $BA37 LDI           ;
 $BA39 LDI           ;
 $BA3B LDI           ;
 $BA3D LDI           ;
 $BA3F LDI           ;
 $BA41 LDI           ;
 $BA43 LDI           ;
 $BA45 LDI           ;
 $BA47 LDI           ;
 $BA49 LDI           ;
 $BA4B LDI           ;
 $BA4D LDI           ;
 $BA4F LDI           ;
 $BA51 LDI           ;
 $BA53 LDI           ;
 $BA55 LDI           ;
 $BA57 LDI           ;
 $BA59 LDI           ;
 $BA5B LDI           ;
 $BA5D LDI           ;
 $BA5F LDI           ;
 $BA61 LDI           ;
 $BA63 LDI           ; }
 $BA65 RET           ; Return.

; Messaging: Is In
@label=Messaging_IsIn
t$BA66 DEFM " IS IN " ; #FONT:( IS IN )$E0DC,attr=$4E(is-in)
 $BA6D DEFB $FF       ; Terminator.

; Handler: Display Character Location
;
; Used by the routine at #R$E79B.
@label=Handler_DisplayCharacterLocation
c$BA6E LD A,($BAB3)  ; {Return if *#R$BAB3 is not zero.
 $BA71 OR A          ;
 $BA72 RET NZ        ; }
 $BA73 LD HL,$DFDC   ; {Write #R$DFDC to *#R$B7E8(#N$B7E9).
 $BA76 LD ($B7E9),HL ; }
 $BA79 LD A,(IY+$0F) ; #REGa=*#REGiy+#N$0F.
 $BA7C LD HL,$7F1F   ; #REGhl=#R$7F1F.
 $BA7F CALL $AC6C    ; Call #R$AC6C.
 $BA82 PUSH HL       ; Stash #REGhl on the stack.
 $BA83 CALL $BACE    ; Call #R$BACE.
 $BA86 LD C,B        ;
 $BA87 LD H,$7C      ;
 $BA89 LD L,(IY-$23) ;
 $BA8C PUSH HL       ; Stash #REGhl on the stack.
 $BA8D CALL $BACE    ; Call #R$BACE.
 $BA90 LD A,$07      ;
 $BA92 ADD A,B       ;
 $BA93 ADD A,C       ;
 $BA94 LD C,A        ;
 $BA95 LD A,$20      ;
 $BA97 SUB C         ;
 $BA98 SRL A         ;
 $BA9A LD E,A        ;
 $BA9B LD D,$04      ; #REGd=#N$04.
 $BA9D POP HL        ; Restore #REGhl from the stack.
 $BA9E LD C,$4E      ; #REGc=#N$4E (#COLOUR$4E).
 $BAA0 CALL $B84B    ; Call #R$B84B.
 $BAA3 LD HL,$BA66   ; #REGhl=#R$BA66.
 $BAA6 CALL $B84B    ; Call #R$B84B.
 $BAA9 POP HL        ; Restore #REGhl from the stack.
 $BAAA CALL $B84B    ; Call #R$B84B.
 $BAAD LD A,$1E      ; {Write #N$1E to #R$BAB3.
 $BAAF LD ($BAB3),A  ; }
 $BAB2 RET           ; Return.

; Redraws Banner Underline
c$BAB3 DEFB $00      ;
; This entry point is used by the routines at #R$81AE and #R$ED2A.
@label=Redraw_Banner_Underline
*$BAB4 LD HL,$BAB3   ; #REGhl=#R$BAB3.
 $BAB7 LD A,(HL)     ; #REGa=*#REGhl.
 $BAB8 OR A          ; {Return if #REGa is zero.
 $BAB9 RET Z         ; }
 $BABA DEC (HL)      ; Decrease *#REGhl by one.
 $BABB RET NZ        ; Return if the result is not zero.
 $BABC LD C,$42      ; #REGc=#N$42 (#COLOUR$42).
 $BABE LD HL,$DFDC   ; {Write #R$DFDC to #R$B7E8(#N$B7E9).
 $BAC1 LD ($B7E9),HL ; }
 $BAC4 LD DE,$0400   ; #REGde=#N$0400.
 $BAC7 LD HL,$7E68   ; #REGhl=#R$7E68.
 $BACA CALL $B84B    ; Call #R$B84B.
 $BACD RET           ; Return.

; Routine at BACE
;
; Used by the routine at #R$BA6E.
c$BACE LD B,$00      ; #REGb=#N$00.
*$BAD0 LD A,(HL)     ; #REGa=*#REGhl.
 $BAD1 CP $FF        ; {If #REGa is #N$FF then return.
 $BAD3 RET Z         ; }
 $BAD4 INC B         ; Increment #REGb by one.
 $BAD5 INC HL        ; Increment #REGhl by one.
 $BAD6 JR $BAD0      ; Jump to #R$BAD0.

; Game Initialisation
;
; Used by the routines at #R$8155 and #R$8184.
@label=Game_Initialisation
c$BAD8 LD IY,$BC67   ; #REGiy=#R$BC67.
 $BADC LD ($B09D),IY ; Write #REGiy to #R$B09D.
 $BAE0 LD HL,$BB3E   ; #REGhl=#R$BB3E.
 $BAE3 LD DE,$BCE9   ; #REGde=#R$BCE9.
 $BAE6 LD B,$1F      ; #REGb=#N$1F (counter).
*$BAE8 PUSH BC       ; Stash #REGbc on the stack.
*$BAE9 LD A,(DE)     ; #REGa=*#REGde.
 $BAEA CP $FF        ; {If #REGa is not the terminator (#N$FF) jump to #R$BAF1.
 $BAEC JR NZ,$BAF1   ; }
 $BAEE INC DE        ; Increment #REGde by one.
 $BAEF JR $BAE9      ; Jump to #R$BAE9.
*$BAF1 LDI           ;
 $BAF3 INC DE        ; {Increment #REGde by two.
 $BAF4 INC DE        ; }
 $BAF5 LDI           ;
 $BAF7 POP BC        ; Restore #REGbc from the stack.
 $BAF8 DJNZ $BAE8    ; Decrease counter by one and loop back to #R$BAE8 until
                     ; counter is zero.
 $BAFA LD BC,$00AF   ; #REGbc=#N($00AF,$04,$04).
 $BAFD LD HL,$BB7C   ; #REGhl=#R$BB7C.
 $BB00 LD DE,$BC30   ; #REGde=#R$BC30.
 $BB03 LDIR          ;
 $BB05 XOR A         ; {Write #N$00 to: #LIST { #R$ECF5 } { #R$ECFE } { #R$ECFF
 $BB06 LD ($ECF5),A  ; } LIST#
 $BB09 LD ($ECFE),A  ;
 $BB0C LD ($ECFF),A  ; }
 $BB0F INC A         ; {Write #N$01 to #R$EDC5.
 $BB10 LD ($EDC5),A  ; }
 $BB13 LD A,$14      ; {Write #N$14 to #R$F9F4.
 $BB15 LD ($F9F4),A  ; }
 $BB18 LD A,$28      ; {Write #N$28 to #R$F5BE.
 $BB1A LD ($F5BE),A  ; }
 $BB1D LD A,$3C      ; {Write #N$3C to #R$F5C2.
 $BB1F LD ($F5C2),A  ; }
 $BB22 LD A,$20      ; {Write #N$20 to #R$F5C6.
 $BB24 LD ($F5C6),A  ; }
 $BB27 LD HL,$EC5C   ; #REGhl=#R$EC5C.
 $BB2A LD B,$20      ; #REGb=#N$20 (counter).
*$BB2C LD (HL),$00   ; Write #N$00 to *#REGhl.
 $BB2E INC HL        ; {Increment #REGhl by three.
 $BB2F INC HL        ;
 $BB30 INC HL        ; }
 $BB31 DJNZ $BB2C    ; Decrease counter by one and loop back to #R$BB2C until
                     ; counter is zero.
 $BB33 LD HL,$EC0F   ; #REGhl=#R$EC0F.
 $BB36 LD B,$0E      ; #REGb=#N$0E.
*$BB38 LD (HL),$00   ; Write #N$00 to *#REGhl.
 $BB3A INC HL        ; Increment #REGhl by one.
 $BB3B DJNZ $BB38    ; Decrease counter by one and loop back to #R$BB38 until
                     ; counter is zero.
 $BB3D RET           ; Return.

; Data block at BB3E
b$BB3E DEFB $00,$1F,$01,$9F,$02,$1F,$03,$9F
 $BB46 DEFB $04,$9F,$05,$9F,$06,$9F,$07,$1F
 $BB4E DEFB $08,$1F,$09,$1F,$0A,$9F,$0B,$9F
 $BB56 DEFB $0C,$1F,$0D,$9F,$0E,$1F,$0F,$1F
 $BB5E DEFB $10,$1F,$11,$9F,$12,$9F,$13,$9F
 $BB66 DEFB $14,$1F,$15,$1F,$16,$9F,$17,$9F
 $BB6E DEFB $18,$9F,$19,$1F,$1A,$9F,$1B,$9F
 $BB76 DEFB $1C,$1F,$1D,$9F,$1E,$9F

; Data block at BB7C
b$BB7C DEFB $1F,$1F,$1F,$1F,$1F,$1F,$1F,$1F
 $BB84 DEFB $1F,$1F,$00,$00,$00,$00,$00,$01
 $BB8C DEFB $02,$04,$08,$10,$00,$06,$0C,$10
 $BB94 DEFB $15,$00,$00,$00,$00,$00,$00,$00
 $BB9C DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $BBA4 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $BBAC DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $BBB4 DEFB $00,$00,$00,$00,$40,$08,$90,$A8
 $BBBC DEFB $E8,$98,$98,$98,$98,$98,$00,$00
 $BBC4 DEFB $00,$00,$00,$80,$80,$80,$80,$80
 $BBCC DEFB $5B,$5C,$5D,$5E,$5F,$46,$45,$44
 $BBD4 DEFB $43,$07,$38,$38,$38,$38,$38,$94
 $BBDC DEFB $98,$9C,$A0,$A4,$03,$03,$03,$03
 $BBE4 DEFB $03,$00,$00,$00,$00,$00,$00,$00
 $BBEC DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $BBF4 DEFB $01,$01,$01,$01,$01,$00,$00,$00
 $BBFC DEFB $00,$00,$00,$00,$00,$00,$00,$1F
 $BC04 DEFB $21,$23,$25,$27,$20,$22,$24,$26
 $BC0C DEFB $28,$14,$05,$17,$12,$08,$00,$00
 $BC14 DEFB $00,$00,$00,$00,$00,$00,$01,$01
 $BC1C DEFB $18,$18,$18,$01,$01,$01,$01,$01
 $BC24 DEFB $18,$18,$01,$01,$01,$00,$00,$00
 $BC2C DEFB $00,$00,$00,$00

; Data block at BC30
b$BC30 DEFB $1F,$1F,$1F,$1F,$1F,$1F,$1F,$1F
 $BC38 DEFB $1F,$1F,$00,$00,$00,$00,$00,$01
 $BC40 DEFB $02,$04,$08,$10,$00,$06,$0C,$10
 $BC48 DEFB $15,$00,$00,$00,$00,$00,$00,$00
 $BC50 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $BC58 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $BC60 DEFB $00,$00,$00,$00,$00,$00,$00

; Character Data
@label=Character_Data
g$BC67 DEFB $00
 $BC68 DEFB $00
 $BC69 DEFB $00
 $BC6A DEFB $00
 $BC6B DEFB $00

; Game status buffer entry at BC6C
g$BC6C DEFB $40
 $BC6D DEFB $08
 $BC6E DEFB $90
 $BC6F DEFB $A8
 $BC70 DEFB $E8

; Game status buffer entry at BC71
g$BC71 DEFB $98
 $BC72 DEFB $98
 $BC73 DEFB $98
 $BC74 DEFB $98
 $BC75 DEFB $98

; Character: Current Room ID
@label=CurrentRoom_Wally
g$BC76 DEFB $00      ; Current room ID for Wally.
@label=CurrentRoom_Wilma
 $BC77 DEFB $00      ; Current room ID for Wilma.
@label=CurrentRoom_Tom
 $BC78 DEFB $00      ; Current room ID for Tom.
@label=CurrentRoom_Dick
 $BC79 DEFB $00      ; Current room ID for Dick.
@label=CurrentRoom_Harry
 $BC7A DEFB $00      ; Current room ID for Harry.

; Game status buffer entry at BC7B
g$BC7B DEFB $80
 $BC7C DEFB $80
 $BC7D DEFB $80
 $BC7E DEFB $80
 $BC7F DEFB $80

; Game status buffer entry at BC80
g$BC80 DEFB $5B
 $BC81 DEFB $5C
 $BC82 DEFB $5D
 $BC83 DEFB $5E
 $BC84 DEFB $5F

; Game status buffer entry at BC85
g$BC85 DEFB $46
 $BC86 DEFB $45
 $BC87 DEFB $44
 $BC88 DEFB $43
 $BC89 DEFB $07

; Game status buffer entry at BC8A
g$BC8A DEFB $38
 $BC8B DEFB $38
 $BC8C DEFB $38
 $BC8D DEFB $38
 $BC8E DEFB $38

; Game status buffer entry at BC8F
g$BC8F DEFB $94
 $BC90 DEFB $98
 $BC91 DEFB $9C
 $BC92 DEFB $A0
 $BC93 DEFB $A4

; Character: Lives
@label=Lives_Wally
g$BC94 DEFB $03      ; Current lives for Wally.
@label=Lives_Wilma
 $BC95 DEFB $03      ; Current lives for Wilma.
@label=Lives_Tom
 $BC96 DEFB $03      ; Current lives for Tom.
@label=Lives_Dick
 $BC97 DEFB $03      ; Current lives for Dick.
@label=Lives_Harry
 $BC98 DEFB $03      ; Current lives for Harry.

; Game status buffer entry at BC99
g$BC99 DEFB $00
 $BC9A DEFB $00
 $BC9B DEFB $00
 $BC9C DEFB $00
 $BC9D DEFB $00

; Game status buffer entry at BC9E
g$BC9E DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $BCA6 DEFB $00,$00

; Game status buffer entry at BCA8
g$BCA8 DEFB $01,$01,$01,$01,$01,$00,$00,$00
 $BCB0 DEFB $00,$00,$00,$00,$00,$00,$00

; Character: Items
@label=Item_1_Wally
g$BCB7 DEFB $1F      ; Item 1 for Wally.
@label=Item_1_Wilma
 $BCB8 DEFB $21      ; Item 1 for Wilma.
@label=Item_1_Tom
 $BCB9 DEFB $23      ; Item 1 for Tom.
@label=Item_1_Dick
 $BCBA DEFB $25      ; Item 1 for Dick.
@label=Item_1_Harry
 $BCBB DEFB $27      ; Item 1 for Harry.
@label=Item_2_Wally
 $BCBC DEFB $20      ; Item 2 for Wally.
@label=Item_2_Wilma
 $BCBD DEFB $22      ; Item 2 for Wilma.
@label=Item_2_Tom
 $BCBE DEFB $24      ; Item 2 for Tom.
@label=Item_2_Dick
 $BCBF DEFB $26      ; Item 2 for Dick.
@label=Item_2_Harry
 $BCC0 DEFB $28      ; Item 2 for Harry.

; Game status buffer entry at BCC1
g$BCC1 DEFB $14,$05,$17,$12,$08,$00,$00,$00
 $BCC9 DEFB $00,$00,$00,$00,$00,$01,$01,$18
 $BCD1 DEFB $18,$18,$01,$01,$01,$01,$01,$18
 $BCD9 DEFB $18,$01,$01,$01,$00,$00,$A7,$B0
 $BCE1 DEFB $B9,$C2,$CB,$AE,$AE,$AE,$AE,$AE

; Item Data
@label=Item_Data
b$BCE9 DEFB $FF                             ; Terminator.
 $BCEA DEFB $FF                             ; Terminator.
 $BCEB DEFB $00                             ; Room ID #N(#PEEK(#PC)).
 $BCEC DEFB $C8,$90
 $BCEE DEFB $1F
 $BCEF DEFB $FF                             ; Terminator.
 $BCF0 DEFB $FF                             ; Terminator.
 $BCF1 DEFB $01                             ; Room ID #N(#PEEK(#PC)).
 $BCF2 DEFB $18,$88,$9F
@label=Item_Supermarket
 $BCF5 DEFB $02                             ; {Room ID #N(#PEEK(#PC)).
 $BCF6 DEFB $78                             ;
 $BCF7 DEFB $A8                             ;
 $BCF8 DEFB $1F                             ; }
 $BCF9 DEFB $FF                             ; Terminator.
@label=Item_Park
 $BCFA DEFB $03                             ; {Room ID #N(#PEEK(#PC)).
 $BCFB DEFB $88                             ;
 $BCFC DEFB $A8                             ;
 $BCFD DEFB $9F                             ;
 $BCFE DEFB $FF                             ;
 $BCFF DEFB $FF                             ; }
 $BD00 DEFB $FF                             ; Terminator.
@label=Item_WallStreet
 $BD01 DEFB $04                             ; Room ID #N(#PEEK(#PC)).
 $BD02 DEFB $20,$A0,$9F,$05,$C8,$68,$9F,$FF
 $BD0A DEFB $06,$40,$A8,$9F,$FF
@label=Item_Workshed_OnLeftTable
 $BD0F DEFB $07                             ; Room ID #N(#PEEK(#PC)).
 $BD10 DEFB $60,$90,$1F
@label=Item_Workshed_UnderLeftTable
 $BD13 DEFB $08                             ; Room ID #N(#PEEK(#PC)).
 $BD14 DEFB $80,$A8,$1F
@label=Item_Workshed_UnderRightTable
 $BD17 DEFB $09                             ; Room ID #N(#PEEK(#PC)).
 $BD18 DEFB $C8,$A8,$1F,$FF,$0A,$28,$50,$9F
 $BD20 DEFB $FF
@label=Item_School
 $BD21 DEFB $0B                             ; Room ID #N(#PEEK(#PC)).
 $BD22 DEFB $10,$A8,$9F,$FF,$FF,$0C,$10,$A0
 $BD2A DEFB $1F,$FF,$0D,$A0,$90,$9F,$FF,$FF
@label=Item_KemcoLab_Left
 $BD32 DEFB $0E                             ; Room ID #N(#PEEK(#PC)).
 $BD33 DEFB $60,$90,$1F
@label=Item_KemcoLab_Right
 $BD36 DEFB $0F                             ; Room ID #N(#PEEK(#PC)).
 $BD37 DEFB $D8,$90,$1F,$FF
@label=Item_Garage
 $BD3B DEFB $10                             ; Room ID #N(#PEEK(#PC)).
 $BD3C DEFB $78,$A8,$1F,$FF,$FF,$11,$38,$90
 $BD44 DEFB $9F,$12,$78,$90,$9F,$13,$C0,$90
 $BD4C DEFB $9F
@label=Item_WallysHouse
 $BD4D DEFB $FF                             ; Room ID #N(#PEEK(#PC)).
 $BD4E DEFB $FF
@label=Item_Bank
 $BD4F DEFB $14                             ; Room ID #N(#PEEK(#PC)).
 $BD50 DEFB $C8,$A8,$1F,$FF,$15,$78,$A8,$1F
 $BD58 DEFB $FF,$FF
@label=Item_Butchers
 $BD5A DEFB $16                             ; Room ID #N(#PEEK(#PC)).
 $BD5B DEFB $10,$A8,$9F,$17,$10,$90,$9F,$FF
 $BD63 DEFB $FF,$18,$08,$A8,$9F,$FF,$FF
@label=Item_Station
 $BD6A DEFB $19                             ; Room ID #N(#PEEK(#PC)).
 $BD6B DEFB $B0,$90,$1F,$FF,$1A,$00,$A8,$9F
 $BD73 DEFB $1B,$84,$90,$9F,$FF
@label=Item_Sewer
 $BD78 DEFB $1C                             ; Room ID #N(#PEEK(#PC)).
 $BD79 DEFB $78
 $BD7A DEFB $A8
 $BD7B DEFB $1F
 $BD7C DEFB $FF                             ; Terminator.
 $BD7D DEFB $1D                             ; Room ID #N(#PEEK(#PC)).
 $BD7E DEFB $00,$98
 $BD80 DEFB $9F
 $BD81 DEFB $1E                             ; Room ID #N(#PEEK(#PC)).
 $BD82 DEFB $48
 $BD83 DEFB $A8
 $BD84 DEFB $9F
 $BD85 DEFB $FF                             ; Terminator.

; Table: Graphic Data
@label=Table_GraphicData
b$BD86 DEFW $C352    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BD88 DEFW $C37C    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BD8A DEFW $C3DB    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BD8C DEFW $C56B    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BD8E DEFW $C580    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BD90 DEFW $C5C0    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BD92 DEFW $C651    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BD94 DEFW $C6E3    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BD96 DEFW $C703    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BD98 DEFW $C71F    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BD9A DEFW $C732    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BD9C DEFW $C745    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BD9E DEFW $C77F    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDA0 DEFW $C7BF    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDA2 DEFW $C844    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDA4 DEFW $C9BE    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDA6 DEFW $C9DD    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDA8 DEFW $C9FC    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDAA DEFW $CA57    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDAC DEFW $C860    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDAE DEFW $C908    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDB0 DEFW $C986    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDB2 DEFW $C9A2    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDB4 DEFW $CA9A    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDB6 DEFW $CAAE    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDB8 DEFW $C876    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDBA DEFW $C8E4    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDBC DEFW $C9D4    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDBE DEFW $C7B7    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDC0 DEFW $C8B3    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDC2 DEFW $C8C3    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDC4 DEFW $C23C    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDC6 DEFW $C35D    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDC8 DEFW $C369    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDCA DEFW $C91A    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDCC DEFW $C762    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDCE DEFW $C943    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDD0 DEFW $C801    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDD2 DEFW $C82B    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDD4 DEFW $C889    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDD6 DEFW $C89F    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDD8 DEFW $C79F    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDDA DEFW $C7E0    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDDC DEFW $CB05    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDDE DEFW $C797    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDE0 DEFW $C254    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDE2 DEFW $C20A    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDE4 DEFW $C220    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDE6 DEFW $CB2F    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDE8 DEFW $CB55    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDEA DEFW $CB6B    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDEC DEFW $CBA0    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDEE DEFW $CBE0    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDF0 DEFW $CBF0    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDF2 DEFW $CC03    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDF4 DEFW $CC25    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDF6 DEFW $CCDA    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDF8 DEFW $CCF2    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDFA DEFW $C857    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDFC DEFW $C27C    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BDFE DEFW $C92E    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE00 DEFW $CC39    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE02 DEFW $CC97    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE04 DEFW $CB1A    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE06 DEFW $CCAA    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE08 DEFW $CC8D    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE0A DEFW $CC5D    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE0C DEFW $C5DA    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE0E DEFW $C5F9    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE10 DEFW $C610    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE12 DEFW $C61A    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE14 DEFW $C625    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE16 DEFW $C635    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE18 DEFW $C291    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE1A DEFW $C29A    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE1C DEFW $CACA    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE1E DEFW $CCB2    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE20 DEFW $C19D    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE22 DEFW $CA1F    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE24 DEFW $BFE2    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE26 DEFW $C0F1    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE28 DEFW $BFA4    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE2A DEFW $BFB2    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE2C DEFW $BFDA    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE2E DEFW $BFFE    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE30 DEFW $BF27    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE32 DEFW $C132    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE34 DEFW $BE8F    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE36 DEFW $BEDA    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE38 DEFW $BF03    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE3A DEFW $BF19    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE3C DEFW $C026    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE3E DEFW $C03C    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE40 DEFW $C045    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE42 DEFW $C050    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE44 DEFW $C05A    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE46 DEFW $C082    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE48 DEFW $C0A0    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE4A DEFW $C0AA    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE4C DEFW $C0B8    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE4E DEFW $C0D4    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE50 DEFW $CAEC    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE52 DEFW $C0DC    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE54 DEFW $CD14    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE56 DEFW $C4CD    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE58 DEFW $C437    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE5A DEFW $C2A8    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE5C DEFW $C312    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE5E DEFW $C577    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE60 DEFW $C960    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE62 DEFW $BF81    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE64 DEFW $C957    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE66 DEFW $BE72    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE68 DEFW $C334    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE6A DEFW $C347    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE6C DEFW $CB85    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE6E DEFW $CD2F    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).
 $BE70 DEFW $CD43    ; Graphic ID:
                     ; #R(#PEEK(#PC)+#PEEK(#PC+$01)*$100)(#N((#PC-$BD86)/$02)).

; Graphic ID #N$70
@label=graphic_70
b$BE72 DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $BE73 DEFW $DFEC    ; }
 $BE75 DEFB $FE,$46  ; Attribute: #COLOUR(#PC+$01)
 $BE77 DEFB $09      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E034,attr=$46) }
                     ; UDGTABLE#
 $BE78 DEFB $09      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E034,attr=$46) }
                     ; UDGTABLE#
 $BE79 DEFB $F1      ; Action: move down one character block.
 $BE7A DEFB $F1      ; Action: move down one character block.
 $BE7B DEFB $0E      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E05C,attr=$46) }
                     ; UDGTABLE#
 $BE7C DEFB $C5,$FF  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BE7E DEFB $FE,$42  ; Attribute: #COLOUR(#PC+$01)
 $BE80 DEFB $0C      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E04C,attr=$42) }
                     ; UDGTABLE#
 $BE81 DEFB $0D      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E054,attr=$42) }
                     ; UDGTABLE#
 $BE82 DEFB $C6,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BE84 DEFB $0A      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E03C,attr=$42) }
                     ; UDGTABLE#
 $BE85 DEFB $0B      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E044,attr=$42) }
                     ; UDGTABLE#
 $BE86 DEFB $C8,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BE88 DEFB $FE,$46  ; Attribute: #COLOUR(#PC+$01)
 $BE8A DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $BE8B DEFW $E06C    ; }
 $BE8D DEFB $04      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E08C,attr=$46) }
                     ; UDGTABLE#
 $BE8E DEFB $FF      ; Terminator.

; Graphic ID #N$57
@label=graphic_57
b$BE8F DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $BE90 DEFW $D204       ; }
 $BE92 DEFB $FE,$44     ; Attribute: #COLOUR(#PC+$01)
 $BE94 DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D23C,attr=$44)
                        ; } UDGTABLE#
 $BE95 DEFB $FD,$17,$01 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c23 Columns } { #FOR$01,$17(n,=h #Nn, | ) }
                        ; { #FOR$01,$17(n,#UDG($D20C,attr=$44), | ) }
                        ; UDGTABLE#
 $BE98 DEFB $F0,$01,$02 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($D214,attr=$44) })
                        ; UDGTABLE#
 $BE9B DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D21C,attr=$44)
                        ; } UDGTABLE#
 $BE9C DEFB $AF,$00     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BE9E DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D224,attr=$44)
                        ; } UDGTABLE#
 $BE9F DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $BEA0 DEFW $D9E4       ; }
 $BEA2 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D9F4,attr=$44)
                        ; } UDGTABLE#
 $BEA3 DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$44)
                        ; } UDGTABLE#
 $BEA4 DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D9FC,attr=$44)
                        ; } UDGTABLE#
 $BEA5 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D9F4,attr=$44)
                        ; } UDGTABLE#
 $BEA6 DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$44)
                        ; } UDGTABLE#
 $BEA7 DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$44)
                        ; } UDGTABLE#
 $BEA8 DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$44)
                        ; } UDGTABLE#
 $BEA9 DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D9FC,attr=$44)
                        ; } UDGTABLE#
 $BEAA DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D9F4,attr=$44)
                        ; } UDGTABLE#
 $BEAB DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$44)
                        ; } UDGTABLE#
 $BEAC DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$44)
                        ; } UDGTABLE#
 $BEAD DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$44)
                        ; } UDGTABLE#
 $BEAE DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D9FC,attr=$44)
                        ; } UDGTABLE#
 $BEAF DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D9F4,attr=$44)
                        ; } UDGTABLE#
 $BEB0 DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$44)
                        ; } UDGTABLE#
 $BEB1 DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$44)
                        ; } UDGTABLE#
 $BEB2 DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$44)
                        ; } UDGTABLE#
 $BEB3 DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D9FC,attr=$44)
                        ; } UDGTABLE#
 $BEB4 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D9F4,attr=$44)
                        ; } UDGTABLE#
 $BEB5 DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$44)
                        ; } UDGTABLE#
 $BEB6 DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$44)
                        ; } UDGTABLE#
 $BEB7 DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$44)
                        ; } UDGTABLE#
 $BEB8 DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D9FC,attr=$44)
                        ; } UDGTABLE#
 $BEB9 DEFB $B0,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BEBB DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $BEBC DEFW $D6BC       ; }
 $BEBE DEFB $FE,$47     ; Attribute: #COLOUR(#PC+$01)
 $BEC0 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6BC,attr=$47)
                        ; } UDGTABLE#
 $BEC1 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6C4,attr=$47)
                        ; } UDGTABLE#
 $BEC2 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6C4,attr=$47)
                        ; } UDGTABLE#
 $BEC3 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6BC,attr=$47)
                        ; } UDGTABLE#
 $BEC4 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6C4,attr=$47)
                        ; } UDGTABLE#
 $BEC5 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6C4,attr=$47)
                        ; } UDGTABLE#
 $BEC6 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6BC,attr=$47)
                        ; } UDGTABLE#
 $BEC7 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6C4,attr=$47)
                        ; } UDGTABLE#
 $BEC8 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6C4,attr=$47)
                        ; } UDGTABLE#
 $BEC9 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6BC,attr=$47)
                        ; } UDGTABLE#
 $BECA DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6C4,attr=$47)
                        ; } UDGTABLE#
 $BECB DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6C4,attr=$47)
                        ; } UDGTABLE#
 $BECC DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6BC,attr=$47)
                        ; } UDGTABLE#
 $BECD DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6C4,attr=$47)
                        ; } UDGTABLE#
 $BECE DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6C4,attr=$47)
                        ; } UDGTABLE#
 $BECF DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6BC,attr=$47)
                        ; } UDGTABLE#
 $BED0 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6C4,attr=$47)
                        ; } UDGTABLE#
 $BED1 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6C4,attr=$47)
                        ; } UDGTABLE#
 $BED2 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6BC,attr=$47)
                        ; } UDGTABLE#
 $BED3 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6C4,attr=$47)
                        ; } UDGTABLE#
 $BED4 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6C4,attr=$47)
                        ; } UDGTABLE#
 $BED5 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6BC,attr=$47)
                        ; } UDGTABLE#
 $BED6 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6C4,attr=$47)
                        ; } UDGTABLE#
 $BED7 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6C4,attr=$47)
                        ; } UDGTABLE#
 $BED8 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6CC,attr=$47)
                        ; } UDGTABLE#
 $BED9 DEFB $FF         ; Terminator.

; Graphic ID #N$58
@label=graphic_58
b$BEDA DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $BEDB DEFW $DDD4       ; }
 $BEDD DEFB $FE,$43     ; Attribute: #COLOUR(#PC+$01)
 $BEDF DEFB $F0,$01,$00 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($DDD4,attr=$43) })
                        ; UDGTABLE#
 $BEE2 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DDDC,attr=$43)
                        ; } UDGTABLE#
 $BEE3 DEFB $C8,$FF     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BEE5 DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $BEE7 DEFB $F0,$01,$00 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($DDD4,attr=$45) })
                        ; UDGTABLE#
 $BEEA DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DDDC,attr=$45)
                        ; } UDGTABLE#
 $BEEB DEFB $C8,$FF     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BEED DEFB $FE,$42     ; Attribute: #COLOUR(#PC+$01)
 $BEEF DEFB $F0,$01,$00 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($DDD4,attr=$42) })
                        ; UDGTABLE#
 $BEF2 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DDDC,attr=$42)
                        ; } UDGTABLE#
 $BEF3 DEFB $C8,$FF     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BEF5 DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $BEF7 DEFB $F0,$01,$00 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($DDD4,attr=$46) })
                        ; UDGTABLE#
 $BEFA DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DDDC,attr=$46)
                        ; } UDGTABLE#
 $BEFB DEFB $C4,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BEFD DEFB $FE,$47     ; Attribute: #COLOUR(#PC+$01)
 $BEFF DEFB $FD,$04,$02 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                        ; { #FOR$01,$04(n,#UDG($DDE4,attr=$47), | ) }
                        ; UDGTABLE#
 $BF02 DEFB $FF         ; Terminator.

; Graphic ID #N$59
@label=graphic_59
b$BF03 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $BF04 DEFW $DDD4       ; }
 $BF06 DEFB $FE,$47     ; Attribute: #COLOUR(#PC+$01)
 $BF08 DEFB $FD,$06,$03 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c6 Columns } { #FOR$01,$06(n,=h #Nn, | ) }
                        ; { #FOR$01,$06(n,#UDG($DDEC,attr=$47), | ) }
                        ; UDGTABLE#
 $BF0B DEFB $C2,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BF0D DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $BF0E DEFW $D1BC       ; }
 $BF10 DEFB $FE,$43     ; Attribute: #COLOUR(#PC+$01)
 $BF12 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1BC,attr=$43)
                        ; } UDGTABLE#
 $BF13 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1C4,attr=$43)
                        ; } UDGTABLE#
 $BF14 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1CC,attr=$43)
                        ; } UDGTABLE#
 $BF15 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1CC,attr=$43)
                        ; } UDGTABLE#
 $BF16 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1BC,attr=$43)
                        ; } UDGTABLE#
 $BF17 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1C4,attr=$43)
                        ; } UDGTABLE#
 $BF18 DEFB $FF         ; Terminator.

; Graphic ID #N$5A
@label=graphic_5a
b$BF19 DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $BF1A DEFW $DDD4    ; }
 $BF1C DEFB $FE,$46  ; Attribute: #COLOUR(#PC+$01)
 $BF1E DEFB $06      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DE04,attr=$46) }
                     ; UDGTABLE#
 $BF1F DEFB $07      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DE0C,attr=$46) }
                     ; UDGTABLE#
 $BF20 DEFB $C6,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BF22 DEFB $FE,$45  ; Attribute: #COLOUR(#PC+$01)
 $BF24 DEFB $04      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DDF4,attr=$45) }
                     ; UDGTABLE#
 $BF25 DEFB $05      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DDFC,attr=$45) }
                     ; UDGTABLE#
 $BF26 DEFB $FF      ; Terminator.

; Graphic ID #N$55
@label=graphic_55
b$BF27 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $BF28 DEFW $DD54       ; }
 $BF2A DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $BF2C DEFB $F0,$03,$0A ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$03,,4(n,{ #Nn | #UDG($DDA4,attr=$45) })
                        ; UDGTABLE#
 $BF2F DEFB $CA,$FD     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BF31 DEFB $F0,$03,$0A ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$03,,4(n,{ #Nn | #UDG($DDA4,attr=$45) })
                        ; UDGTABLE#
 $BF34 DEFB $C9,$FF     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BF36 DEFB $09         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD9C,attr=$45)
                        ; } UDGTABLE#
 $BF37 DEFB $FE,$42     ; Attribute: #COLOUR(#PC+$01)
 $BF39 DEFB $C3,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BF3B DEFB $06         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD84,attr=$42)
                        ; } UDGTABLE#
 $BF3C DEFB $06         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD84,attr=$42)
                        ; } UDGTABLE#
 $BF3D DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD64,attr=$42)
                        ; } UDGTABLE#
 $BF3E DEFB $06         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD84,attr=$42)
                        ; } UDGTABLE#
 $BF3F DEFB $06         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD84,attr=$42)
                        ; } UDGTABLE#
 $BF40 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD64,attr=$42)
                        ; } UDGTABLE#
 $BF41 DEFB $06         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD84,attr=$42)
                        ; } UDGTABLE#
 $BF42 DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD94,attr=$42)
                        ; } UDGTABLE#
 $BF43 DEFB $C0,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BF45 DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD8C,attr=$42)
                        ; } UDGTABLE#
 $BF46 DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD8C,attr=$42)
                        ; } UDGTABLE#
 $BF47 DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DDAC,attr=$42)
                        ; } UDGTABLE#
 $BF48 DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD8C,attr=$42)
                        ; } UDGTABLE#
 $BF49 DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD8C,attr=$42)
                        ; } UDGTABLE#
 $BF4A DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DDAC,attr=$42)
                        ; } UDGTABLE#
 $BF4B DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD8C,attr=$42)
                        ; } UDGTABLE#
 $BF4C DEFB $CD,$00     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BF4E DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD6C,attr=$42)
                        ; } UDGTABLE#
 $BF4F DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD74,attr=$42)
                        ; } UDGTABLE#
 $BF50 DEFB $05         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD7C,attr=$42)
                        ; } UDGTABLE#
 $BF51 DEFB $B9,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BF53 DEFB $FE,$47     ; Attribute: #COLOUR(#PC+$01)
 $BF55 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD54,attr=$47)
                        ; } UDGTABLE#
 $BF56 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD54,attr=$47)
                        ; } UDGTABLE#
 $BF57 DEFB $0C         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DDB4,attr=$47)
                        ; } UDGTABLE#
 $BF58 DEFB $0D         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DDBC,attr=$47)
                        ; } UDGTABLE#
 $BF59 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD54,attr=$47)
                        ; } UDGTABLE#
 $BF5A DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD54,attr=$47)
                        ; } UDGTABLE#
 $BF5B DEFB $0C         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DDB4,attr=$47)
                        ; } UDGTABLE#
 $BF5C DEFB $0D         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DDBC,attr=$47)
                        ; } UDGTABLE#
 $BF5D DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD54,attr=$47)
                        ; } UDGTABLE#
 $BF5E DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD54,attr=$47)
                        ; } UDGTABLE#
 $BF5F DEFB $0C         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DDB4,attr=$47)
                        ; } UDGTABLE#
 $BF60 DEFB $0D         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DDBC,attr=$47)
                        ; } UDGTABLE#
 $BF61 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD54,attr=$47)
                        ; } UDGTABLE#
 $BF62 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD5C,attr=$47)
                        ; } UDGTABLE#
 $BF63 DEFB $BA,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BF65 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD54,attr=$47)
                        ; } UDGTABLE#
 $BF66 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD54,attr=$47)
                        ; } UDGTABLE#
 $BF67 DEFB $0F         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DDCC,attr=$47)
                        ; } UDGTABLE#
 $BF68 DEFB $0E         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DDC4,attr=$47)
                        ; } UDGTABLE#
 $BF69 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD54,attr=$47)
                        ; } UDGTABLE#
 $BF6A DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD54,attr=$47)
                        ; } UDGTABLE#
 $BF6B DEFB $0F         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DDCC,attr=$47)
                        ; } UDGTABLE#
 $BF6C DEFB $0E         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DDC4,attr=$47)
                        ; } UDGTABLE#
 $BF6D DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD54,attr=$47)
                        ; } UDGTABLE#
 $BF6E DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD54,attr=$47)
                        ; } UDGTABLE#
 $BF6F DEFB $0F         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DDCC,attr=$47)
                        ; } UDGTABLE#
 $BF70 DEFB $0E         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DDC4,attr=$47)
                        ; } UDGTABLE#
 $BF71 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD5C,attr=$47)
                        ; } UDGTABLE#
 $BF72 DEFB $BD,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BF74 DEFB $FE,$42     ; Attribute: #COLOUR(#PC+$01)
 $BF76 DEFB $FD,$09,$00 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c9 Columns } { #FOR$01,$09(n,=h #Nn, | ) }
                        ; { #FOR$01,$09(n,#UDG($DD54,attr=$42), | ) }
                        ; UDGTABLE#
 $BF79 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD5C,attr=$42)
                        ; } UDGTABLE#
 $BF7A DEFB $BE,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BF7C DEFB $FD,$08,$00 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c8 Columns } { #FOR$01,$08(n,=h #Nn, | ) }
                        ; { #FOR$01,$08(n,#UDG($DD54,attr=$42), | ) }
                        ; UDGTABLE#
 $BF7F DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD5C,attr=$42)
                        ; } UDGTABLE#
 $BF80 DEFB $FF         ; Terminator.

; Graphic ID #N$6E
@label=graphic_6e
b$BF81 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $BF82 DEFW $DD0C       ; }
 $BF84 DEFB $FE,$42     ; Attribute: #COLOUR(#PC+$01)
 $BF86 DEFB $F0,$01,$06 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($DD3C,attr=$42) })
                        ; UDGTABLE#
 $BF89 DEFB $06         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD3C,attr=$42)
                        ; } UDGTABLE#
 $BF8A DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD14,attr=$42)
                        ; } UDGTABLE#
 $BF8B DEFB $C6,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BF8D DEFB $05         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD34,attr=$42)
                        ; } UDGTABLE#
 $BF8E DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD14,attr=$42)
                        ; } UDGTABLE#
 $BF8F DEFB $C6,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BF91 DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD2C,attr=$42)
                        ; } UDGTABLE#
 $BF92 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD14,attr=$42)
                        ; } UDGTABLE#
 $BF93 DEFB $C5,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BF95 DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD44,attr=$42)
                        ; } UDGTABLE#
 $BF96 DEFB $F1         ; Action: move down one character block.
 $BF97 DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD24,attr=$42)
                        ; } UDGTABLE#
 $BF98 DEFB $C5,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BF9A DEFB $06         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD3C,attr=$42)
                        ; } UDGTABLE#
 $BF9B DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $BF9C DEFW $D9E4       ; }
 $BF9E DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$42)
                        ; } UDGTABLE#
 $BF9F DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$42)
                        ; } UDGTABLE#
 $BFA0 DEFB $C6,$FF     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BFA2 DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$42)
                        ; } UDGTABLE#
 $BFA3 DEFB $FF         ; Terminator.

; Graphic ID #N$51
@label=graphic_51
b$BFA4 DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $BFA5 DEFW $DCEC    ; }
 $BFA7 DEFB $C8,$03  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BFA9 DEFB $FE,$44  ; Attribute: #COLOUR(#PC+$01)
 $BFAB DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DCEC,attr=$44) }
                     ; UDGTABLE#
 $BFAC DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DCF4,attr=$44) }
                     ; UDGTABLE#
 $BFAD DEFB $C6,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BFAF DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DCFC,attr=$44) }
                     ; UDGTABLE#
 $BFB0 DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD04,attr=$44) }
                     ; UDGTABLE#
 $BFB1 DEFB $FF      ; Terminator.

; Graphic ID #N$52
@label=graphic_52
b$BFB2 DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $BFB3 DEFW $DD0C    ; }
 $BFB5 DEFB $FE,$28  ; Attribute: #COLOUR(#PC+$01)
 $BFB7 DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD0C,attr=$28) }
                     ; UDGTABLE#
 $BFB8 DEFB $08      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD4C,attr=$28) }
                     ; UDGTABLE#
 $BFB9 DEFB $C6,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BFBB DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD0C,attr=$28) }
                     ; UDGTABLE#
 $BFBC DEFB $08      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD4C,attr=$28) }
                     ; UDGTABLE#
 $BFBD DEFB $C6,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BFBF DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD14,attr=$28) }
                     ; UDGTABLE#
 $BFC0 DEFB $08      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD4C,attr=$28) }
                     ; UDGTABLE#
 $BFC1 DEFB $C6,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BFC3 DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD14,attr=$28) }
                     ; UDGTABLE#
 $BFC4 DEFB $07      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD44,attr=$28) }
                     ; UDGTABLE#
 $BFC5 DEFB $C6,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BFC7 DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD14,attr=$28) }
                     ; UDGTABLE#
 $BFC8 DEFB $07      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD44,attr=$28) }
                     ; UDGTABLE#
 $BFC9 DEFB $C6,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BFCB DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD1C,attr=$28) }
                     ; UDGTABLE#
 $BFCC DEFB $06      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD3C,attr=$28) }
                     ; UDGTABLE#
 $BFCD DEFB $C6,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BFCF DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD1C,attr=$28) }
                     ; UDGTABLE#
 $BFD0 DEFB $06      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD3C,attr=$28) }
                     ; UDGTABLE#
 $BFD1 DEFB $C6,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BFD3 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD1C,attr=$28) }
                     ; UDGTABLE#
 $BFD4 DEFB $05      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD34,attr=$28) }
                     ; UDGTABLE#
 $BFD5 DEFB $C6,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BFD7 DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD24,attr=$28) }
                     ; UDGTABLE#
 $BFD8 DEFB $04      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DD2C,attr=$28) }
                     ; UDGTABLE#
 $BFD9 DEFB $FF      ; Terminator.

; Graphic ID #N$53
@label=graphic_53
b$BFDA DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $BFDB DEFW $DD0C    ; }
 $BFDD DEFB $FE,$50  ; Attribute: #COLOUR(#PC+$01)
 $BFDF DEFB $F3      ; {Switch #REGhl to
 $BFE0 DEFW $BFC7    ; #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).}

; Graphic ID #N$4F
@label=graphic_4f
b$BFE2 DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $BFE3 DEFW $DC24    ; }
 $BFE5 DEFB $FE,$46  ; Attribute: #COLOUR(#PC+$01)
 $BFE7 DEFB $0F      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC9C,attr=$46) }
                     ; UDGTABLE#
 $BFE8 DEFB $11      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DCAC,attr=$46) }
                     ; UDGTABLE#
 $BFE9 DEFB $12      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DCB4,attr=$46) }
                     ; UDGTABLE#
 $BFEA DEFB $15      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DCCC,attr=$46) }
                     ; UDGTABLE#
 $BFEB DEFB $C4,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BFED DEFB $10      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DCA4,attr=$46) }
                     ; UDGTABLE#
 $BFEE DEFB $13      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DCBC,attr=$46) }
                     ; UDGTABLE#
 $BFEF DEFB $14      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DCC4,attr=$46) }
                     ; UDGTABLE#
 $BFF0 DEFB $16      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DCD4,attr=$46) }
                     ; UDGTABLE#
 $BFF1 DEFB $C5,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BFF3 DEFB $17      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DCDC,attr=$46) }
                     ; UDGTABLE#
 $BFF4 DEFB $18      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DCE4,attr=$46) }
                     ; UDGTABLE#
 $BFF5 DEFB $C5,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $BFF7 DEFB $FE,$44  ; Attribute: #COLOUR(#PC+$01)
 $BFF9 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC34,attr=$44) }
                     ; UDGTABLE#
 $BFFA DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC2C,attr=$44) }
                     ; UDGTABLE#
 $BFFB DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC2C,attr=$44) }
                     ; UDGTABLE#
 $BFFC DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC34,attr=$44) }
                     ; UDGTABLE#
 $BFFD DEFB $FF      ; Terminator.

; Graphic ID #N$54
@label=graphic_54
b$BFFE DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $BFFF DEFW $D9E4       ; }
 $C001 DEFB $FE,$79     ; Attribute: #COLOUR(#PC+$01)
 $C003 DEFB $FD,$10,$09 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c16 Columns } { #FOR$01,$10(n,=h #Nn, | ) }
                        ; { #FOR$01,$10(n,#UDG($DA2C,attr=$79), | ) }
                        ; UDGTABLE#
 $C006 DEFB $B8,$02     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C008 DEFB $FD,$10,$0A ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c16 Columns } { #FOR$01,$10(n,=h #Nn, | ) }
                        ; { #FOR$01,$10(n,#UDG($DA34,attr=$79), | ) }
                        ; UDGTABLE#
 $C00B DEFB $B8,$FF     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C00D DEFB $FE,$72     ; Attribute: #COLOUR(#PC+$01)
 $C00F DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C010 DEFW $DFDC       ; }
 $C012 DEFB $FD,$04,$20 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                        ; { #FOR$01,$04(n,#UDG($E0DC,attr=$72), | ) }
                        ; UDGTABLE#
 $C015 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C016 DEFW $D9E4       ; }
 $C018 DEFB $10         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA64,attr=$72)
                        ; } UDGTABLE#
 $C019 DEFB $11         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA6C,attr=$72)
                        ; } UDGTABLE#
 $C01A DEFB $11         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA6C,attr=$72)
                        ; } UDGTABLE#
 $C01B DEFB $12         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA74,attr=$72)
                        ; } UDGTABLE#
 $C01C DEFB $13         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA7C,attr=$72)
                        ; } UDGTABLE#
 $C01D DEFB $11         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA6C,attr=$72)
                        ; } UDGTABLE#
 $C01E DEFB $11         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA6C,attr=$72)
                        ; } UDGTABLE#
 $C01F DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C020 DEFW $DFDC       ; }
 $C022 DEFB $FD,$05,$20 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c5 Columns } { #FOR$01,$05(n,=h #Nn, | ) }
                        ; { #FOR$01,$05(n,#UDG($E0DC,attr=$72), | ) }
                        ; UDGTABLE#
 $C025 DEFB $FF         ; Terminator.

; Graphic ID #N$5B
@label=graphic_5b
b$C026 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C027 DEFW $DFDC       ; }
 $C029 DEFB $FE,$4E     ; Attribute: #COLOUR(#PC+$01)
 $C02B DEFB $FD,$18,$20 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c24 Columns } { #FOR$01,$18(n,=h #Nn, | ) }
                        ; { #FOR$01,$18(n,#UDG($E0DC,attr=$4E), | ) }
                        ; UDGTABLE#
 $C02E DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C02F DEFW $DE14       ; }
 $C031 DEFB $B8,$00     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C033 DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DE54,attr=$4E)
                        ; } UDGTABLE#
 $C034 DEFB $09         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DE5C,attr=$4E)
                        ; } UDGTABLE#
 $C035 DEFB $0A         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DE64,attr=$4E)
                        ; } UDGTABLE#
 $C036 DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DE6C,attr=$4E)
                        ; } UDGTABLE#
 $C037 DEFB $0C         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DE74,attr=$4E)
                        ; } UDGTABLE#
 $C038 DEFB $0D         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DE7C,attr=$4E)
                        ; } UDGTABLE#
 $C039 DEFB $0E         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DE84,attr=$4E)
                        ; } UDGTABLE#
 $C03A DEFB $0F         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DE8C,attr=$4E)
                        ; } UDGTABLE#
 $C03B DEFB $FF         ; Terminator.

; Graphic ID #N$5C
@label=graphic_5c
b$C03C DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C03D DEFW $DE14    ; }
 $C03F DEFB $FE,$47  ; Attribute: #COLOUR(#PC+$01)
 $C041 DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DE14,attr=$47) }
                     ; UDGTABLE#
 $C042 DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DE1C,attr=$47) }
                     ; UDGTABLE#
 $C043 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DE24,attr=$47) }
                     ; UDGTABLE#
 $C044 DEFB $FF      ; Terminator.

; Graphic ID #N$5D
@label=graphic_5d
b$C045 DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C046 DEFW $DE14    ; }
 $C048 DEFB $FE,$46  ; Attribute: #COLOUR(#PC+$01)
 $C04A DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DE2C,attr=$46) }
                     ; UDGTABLE#
 $C04B DEFB $04      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DE34,attr=$46) }
                     ; UDGTABLE#
 $C04C DEFB $05      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DE3C,attr=$46) }
                     ; UDGTABLE#
 $C04D DEFB $06      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DE44,attr=$46) }
                     ; UDGTABLE#
 $C04E DEFB $07      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DE4C,attr=$46) }
                     ; UDGTABLE#
 $C04F DEFB $FF      ; Terminator.

; Graphic ID #N$5E
@label=graphic_5e
b$C050 DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C051 DEFW $DE14    ; }
 $C053 DEFB $FE,$60  ; Attribute: #COLOUR(#PC+$01)
 $C055 DEFB $10      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DE94,attr=$60) }
                     ; UDGTABLE#
 $C056 DEFB $11      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DE9C,attr=$60) }
                     ; UDGTABLE#
 $C057 DEFB $12      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DEA4,attr=$60) }
                     ; UDGTABLE#
 $C058 DEFB $13      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DEAC,attr=$60) }
                     ; UDGTABLE#
 $C059 DEFB $FF      ; Terminator.

; Graphic ID #N$5F
@label=graphic_5f
b$C05A DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C05B DEFW $DE14       ; }
 $C05D DEFB $FE,$4F     ; Attribute: #COLOUR(#PC+$01)
 $C05F DEFB $14         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DEB4,attr=$4F)
                        ; } UDGTABLE#
 $C060 DEFB $15         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DEBC,attr=$4F)
                        ; } UDGTABLE#
 $C061 DEFB $16         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DEC4,attr=$4F)
                        ; } UDGTABLE#
 $C062 DEFB $17         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DECC,attr=$4F)
                        ; } UDGTABLE#
 $C063 DEFB $18         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DED4,attr=$4F)
                        ; } UDGTABLE#
 $C064 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C065 DEFW $DEDC       ; }
 $C067 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DEDC,attr=$4F)
                        ; } UDGTABLE#
 $C068 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DEE4,attr=$4F)
                        ; } UDGTABLE#
 $C069 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DEEC,attr=$4F)
                        ; } UDGTABLE#
 $C06A DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DEF4,attr=$4F)
                        ; } UDGTABLE#
 $C06B DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DEFC,attr=$4F)
                        ; } UDGTABLE#
 $C06C DEFB $05         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF04,attr=$4F)
                        ; } UDGTABLE#
 $C06D DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C06E DEFW $DFDC       ; }
 $C070 DEFB $20         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E0DC,attr=$4F)
                        ; } UDGTABLE#
 $C071 DEFB $20         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E0DC,attr=$4F)
                        ; } UDGTABLE#
 $C072 DEFB $20         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E0DC,attr=$4F)
                        ; } UDGTABLE#
 $C073 DEFB $B8,$00     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C075 DEFB $20         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E0DC,attr=$4F)
                        ; } UDGTABLE#
 $C076 DEFB $20         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E0DC,attr=$4F)
                        ; } UDGTABLE#
 $C077 DEFB $C6,$FF     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C079 DEFB $FD,$10,$20 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c16 Columns } { #FOR$01,$10(n,=h #Nn, | ) }
                        ; { #FOR$01,$10(n,#UDG($E0DC,attr=$4F), | ) }
                        ; UDGTABLE#
 $C07C DEFB $B8,$02     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C07E DEFB $FD,$10,$20 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c16 Columns } { #FOR$01,$10(n,=h #Nn, | ) }
                        ; { #FOR$01,$10(n,#UDG($E0DC,attr=$4F), | ) }
                        ; UDGTABLE#
 $C081 DEFB $FF         ; Terminator.

; Graphic ID #N$60
@label=graphic_60
b$C082 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C083 DEFW $DFDC       ; }
 $C085 DEFB $FE,$57     ; Attribute: #COLOUR(#PC+$01)
 $C087 DEFB $FD,$07,$20 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c7 Columns } { #FOR$01,$07(n,=h #Nn, | ) }
                        ; { #FOR$01,$07(n,#UDG($E0DC,attr=$57), | ) }
                        ; UDGTABLE#
 $C08A DEFB $C1,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C08C DEFB $20         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E0DC,attr=$57)
                        ; } UDGTABLE#
 $C08D DEFB $CD,$00     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C08F DEFB $20         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E0DC,attr=$57)
                        ; } UDGTABLE#
 $C090 DEFB $C1,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C092 DEFB $FD,$07,$20 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c7 Columns } { #FOR$01,$07(n,=h #Nn, | ) }
                        ; { #FOR$01,$07(n,#UDG($E0DC,attr=$57), | ) }
                        ; UDGTABLE#
 $C095 DEFB $C2,$FF     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C097 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C098 DEFW $DEDC       ; }
 $C09A DEFB $06         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF0C,attr=$57)
                        ; } UDGTABLE#
 $C09B DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF14,attr=$57)
                        ; } UDGTABLE#
 $C09C DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF1C,attr=$57)
                        ; } UDGTABLE#
 $C09D DEFB $09         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF24,attr=$57)
                        ; } UDGTABLE#
 $C09E DEFB $0A         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF2C,attr=$57)
                        ; } UDGTABLE#
 $C09F DEFB $FF         ; Terminator.

; Graphic ID #N$61
@label=graphic_61
b$C0A0 DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C0A1 DEFW $D72C    ; }
 $C0A3 DEFB $C8,$03  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C0A5 DEFB $FE,$45  ; Attribute: #COLOUR(#PC+$01)
 $C0A7 DEFB $10      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D7AC,attr=$45) }
                     ; UDGTABLE#
 $C0A8 DEFB $11      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D7B4,attr=$45) }
                     ; UDGTABLE#
 $C0A9 DEFB $FF      ; Terminator.

; Graphic ID #N$62
@label=graphic_62
b$C0AA DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C0AB DEFW $D72C    ; }
 $C0AD DEFB $FE,$46  ; Attribute: #COLOUR(#PC+$01)
 $C0AF DEFB $06      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D75C,attr=$46) }
                     ; UDGTABLE#
 $C0B0 DEFB $08      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D76C,attr=$46) }
                     ; UDGTABLE#
 $C0B1 DEFB $C6,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C0B3 DEFB $FE,$42  ; Attribute: #COLOUR(#PC+$01)
 $C0B5 DEFB $0E      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D79C,attr=$42) }
                     ; UDGTABLE#
 $C0B6 DEFB $0F      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D7A4,attr=$42) }
                     ; UDGTABLE#
 $C0B7 DEFB $FF      ; Terminator.

; Graphic ID #N$63
@label=graphic_63
b$C0B8 DEFB $FB             ; {Sprite Data:
 $C0B9 DEFW $D35C           ; #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).}
 $C0BB DEFB $FE,$44         ; Attribute: #COLOUR(#PC+$01)
 $C0BD DEFB $F2,$08,$07,$08 ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c8 Columns } { #FOR$01,$08(n,=h #Nn, | ) }
                            ; { #FOR$01,$08(n,#UDG($D394,attr=$44)#UDG($D39C,attr=$44), | ) }
                            ; UDGTABLE#
 $C0C1 DEFB $B8,$01         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $C0C3 DEFB $F2,$08,$08,$07 ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c8 Columns } { #FOR$01,$08(n,=h #Nn, | ) }
                            ; { #FOR$01,$08(n,#UDG($D39C,attr=$44)#UDG($D394,attr=$44), | ) }
                            ; UDGTABLE#
 $C0C7 DEFB $B8,$01         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $C0C9 DEFB $F2,$08,$07,$08 ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c8 Columns } { #FOR$01,$08(n,=h #Nn, | ) }
                            ; { #FOR$01,$08(n,#UDG($D394,attr=$44)#UDG($D39C,attr=$44), | ) }
                            ; UDGTABLE#
 $C0CD DEFB $B8,$01         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $C0CF DEFB $F2,$08,$08,$07 ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c8 Columns } { #FOR$01,$08(n,=h #Nn, | ) }
                            ; { #FOR$01,$08(n,#UDG($D39C,attr=$44)#UDG($D394,attr=$44), | ) }
                            ; UDGTABLE#
 $C0D3 DEFB $FF             ; Terminator.

; Graphic ID #N$64
@label=graphic_64
b$C0D4 DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C0D5 DEFW $D514    ; }
 $C0D7 DEFB $FE,$46  ; Attribute: #COLOUR(#PC+$01)
 $C0D9 DEFB $F3      ; {Switch #REGhl to
 $C0DA DEFW $CAD9    ; #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).}

; Graphic ID #N$66
@label=graphic_66
b$C0DC DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C0DD DEFW $DFAC    ; }
 $C0DF DEFB $C8,$03  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C0E1 DEFB $FE,$42  ; Attribute: #COLOUR(#PC+$01)
 $C0E3 DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DFB4,attr=$42) }
                     ; UDGTABLE#
 $C0E4 DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DFC4,attr=$42) }
                     ; UDGTABLE#
 $C0E5 DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DFB4,attr=$42) }
                     ; UDGTABLE#
 $C0E6 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DFBC,attr=$42) }
                     ; UDGTABLE#
 $C0E7 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DFBC,attr=$42) }
                     ; UDGTABLE#
 $C0E8 DEFB $C4,$FF  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C0EA DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DFAC,attr=$42) }
                     ; UDGTABLE#
 $C0EB DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DFC4,attr=$42) }
                     ; UDGTABLE#
 $C0EC DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DFB4,attr=$42) }
                     ; UDGTABLE#
 $C0ED DEFB $C6,$FF  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C0EF DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DFBC,attr=$42) }
                     ; UDGTABLE#
 $C0F0 DEFB $FF      ; Terminator.

; Graphic ID #N$50
@label=graphic_50
b$C0F1 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C0F2 DEFW $DC24       ; }
 $C0F4 DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C0F6 DEFB $F0,$09,$0A ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$09,,4(n,{ #Nn | #UDG($DC74,attr=$45) })
                        ; UDGTABLE#
 $C0F9 DEFB $C8,$FC     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C0FB DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC7C,attr=$45)
                        ; } UDGTABLE#
 $C0FC DEFB $C7,$02     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C0FE DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC7C,attr=$45)
                        ; } UDGTABLE#
 $C0FF DEFB $FE,$47     ; Attribute: #COLOUR(#PC+$01)
 $C101 DEFB $C2,$FC     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C103 DEFB $05         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC4C,attr=$47)
                        ; } UDGTABLE#
 $C104 DEFB $C5,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C106 DEFB $09         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC6C,attr=$47)
                        ; } UDGTABLE#
 $C107 DEFB $06         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC54,attr=$47)
                        ; } UDGTABLE#
 $C108 DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC44,attr=$47)
                        ; } UDGTABLE#
 $C109 DEFB $C5,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C10B DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC64,attr=$47)
                        ; } UDGTABLE#
 $C10C DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC5C,attr=$47)
                        ; } UDGTABLE#
 $C10D DEFB $F1         ; Action: move down one character block.
 $C10E DEFB $FE,$44     ; Attribute: #COLOUR(#PC+$01)
 $C110 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC24,attr=$44)
                        ; } UDGTABLE#
 $C111 DEFB $0D         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC8C,attr=$44)
                        ; } UDGTABLE#
 $C112 DEFB $0E         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC94,attr=$44)
                        ; } UDGTABLE#
 $C113 DEFB $0C         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC84,attr=$44)
                        ; } UDGTABLE#
 $C114 DEFB $C1,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C116 DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC3C,attr=$44)
                        ; } UDGTABLE#
 $C117 DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC3C,attr=$44)
                        ; } UDGTABLE#
 $C118 DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC3C,attr=$44)
                        ; } UDGTABLE#
 $C119 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC24,attr=$44)
                        ; } UDGTABLE#
 $C11A DEFB $F1         ; Action: move down one character block.
 $C11B DEFB $F1         ; Action: move down one character block.
 $C11C DEFB $0C         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC84,attr=$44)
                        ; } UDGTABLE#
 $C11D DEFB $C1,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C11F DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC3C,attr=$44)
                        ; } UDGTABLE#
 $C120 DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC3C,attr=$44)
                        ; } UDGTABLE#
 $C121 DEFB $0D         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC8C,attr=$44)
                        ; } UDGTABLE#
 $C122 DEFB $0E         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC94,attr=$44)
                        ; } UDGTABLE#
 $C123 DEFB $F1         ; Action: move down one character block.
 $C124 DEFB $F1         ; Action: move down one character block.
 $C125 DEFB $0C         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC84,attr=$44)
                        ; } UDGTABLE#
 $C126 DEFB $C1,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C128 DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $C12A DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC2C,attr=$46)
                        ; } UDGTABLE#
 $C12B DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC34,attr=$46)
                        ; } UDGTABLE#
 $C12C DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC2C,attr=$46)
                        ; } UDGTABLE#
 $C12D DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC2C,attr=$46)
                        ; } UDGTABLE#
 $C12E DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC2C,attr=$46)
                        ; } UDGTABLE#
 $C12F DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC34,attr=$46)
                        ; } UDGTABLE#
 $C130 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC2C,attr=$46)
                        ; } UDGTABLE#
 $C131 DEFB $FF         ; Terminator.

; Graphic ID #N$56
@label=graphic_56
b$C132 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C133 DEFW $DBAC       ; }
 $C135 DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C137 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBAC,attr=$45)
                        ; } UDGTABLE#
 $C138 DEFB $0C         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC0C,attr=$45)
                        ; } UDGTABLE#
 $C139 DEFB $C6,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C13B DEFB $0D         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC14,attr=$45)
                        ; } UDGTABLE#
 $C13C DEFB $0E         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC1C,attr=$45)
                        ; } UDGTABLE#
 $C13D DEFB $C5,$05     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C13F DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBEC,attr=$45)
                        ; } UDGTABLE#
 $C140 DEFB $09         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBF4,attr=$45)
                        ; } UDGTABLE#
 $C141 DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBCC,attr=$45)
                        ; } UDGTABLE#
 $C142 DEFB $05         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBD4,attr=$45)
                        ; } UDGTABLE#
 $C143 DEFB $C4,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C145 DEFB $0A         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBFC,attr=$45)
                        ; } UDGTABLE#
 $C146 DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC04,attr=$45)
                        ; } UDGTABLE#
 $C147 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBBC,attr=$45)
                        ; } UDGTABLE#
 $C148 DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBC4,attr=$45)
                        ; } UDGTABLE#
 $C149 DEFB $C5,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C14B DEFB $F0,$09,$0D ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$09,,4(n,{ #Nn | #UDG($DC14,attr=$45) })
                        ; UDGTABLE#
 $C14E DEFB $C7,$FF     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C150 DEFB $06         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBDC,attr=$45)
                        ; } UDGTABLE#
 $C151 DEFB $F1         ; Action: move down one character block.
 $C152 DEFB $F1         ; Action: move down one character block.
 $C153 DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBE4,attr=$45)
                        ; } UDGTABLE#
 $C154 DEFB $C6,$F8     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C156 DEFB $F0,$09,$0E ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$09,,4(n,{ #Nn | #UDG($DC1C,attr=$45) })
                        ; UDGTABLE#
 $C159 DEFB $BF,$F2     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C15B DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBAC,attr=$45)
                        ; } UDGTABLE#
 $C15C DEFB $FD,$06,$01 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c6 Columns } { #FOR$01,$06(n,=h #Nn, | ) }
                        ; { #FOR$01,$06(n,#UDG($DBB4,attr=$45), | ) }
                        ; UDGTABLE#
 $C15F DEFB $C0,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C161 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBAC,attr=$45)
                        ; } UDGTABLE#
 $C162 DEFB $FD,$07,$01 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c7 Columns } { #FOR$01,$07(n,=h #Nn, | ) }
                        ; { #FOR$01,$07(n,#UDG($DBB4,attr=$45), | ) }
                        ; UDGTABLE#
 $C165 DEFB $CC,$FF     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C167 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBB4,attr=$45)
                        ; } UDGTABLE#
 $C168 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBB4,attr=$45)
                        ; } UDGTABLE#
 $C169 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBB4,attr=$45)
                        ; } UDGTABLE#
 $C16A DEFB $0C         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC0C,attr=$45)
                        ; } UDGTABLE#
 $C16B DEFB $C4,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C16D DEFB $FD,$04,$01 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                        ; { #FOR$01,$04(n,#UDG($DBB4,attr=$45), | ) }
                        ; UDGTABLE#
 $C170 DEFB $0C         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC0C,attr=$45)
                        ; } UDGTABLE#
 $C171 DEFB $BF,$FE     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C173 DEFB $FE,$43     ; Attribute: #COLOUR(#PC+$01)
 $C175 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C176 DEFW $D514       ; }
 $C178 DEFB $12         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D5A4,attr=$43)
                        ; } UDGTABLE#
 $C179 DEFB $13         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D5AC,attr=$43)
                        ; } UDGTABLE#
 $C17A DEFB $C6,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C17C DEFB $17         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D5CC,attr=$43)
                        ; } UDGTABLE#
 $C17D DEFB $18         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D5D4,attr=$43)
                        ; } UDGTABLE#
 $C17E DEFB $C8,$FF     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C180 DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $C182 DEFB $1A         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D5E4,attr=$46)
                        ; } UDGTABLE#
 $C183 DEFB $1A         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D5E4,attr=$46)
                        ; } UDGTABLE#
 $C184 DEFB $C6,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C186 DEFB $1A         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D5E4,attr=$46)
                        ; } UDGTABLE#
 $C187 DEFB $1A         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D5E4,attr=$46)
                        ; } UDGTABLE#
 $C188 DEFB $C4,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C18A DEFB $FD,$04,$1A ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                        ; { #FOR$01,$04(n,#UDG($D5E4,attr=$46), | ) }
                        ; UDGTABLE#
 $C18D DEFB $C4,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C18F DEFB $FD,$04,$1A ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                        ; { #FOR$01,$04(n,#UDG($D5E4,attr=$46), | ) }
                        ; UDGTABLE#
 $C192 DEFB $BE,$00     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C194 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C195 DEFW $D9E4       ; }
 $C197 DEFB $FE,$43     ; Attribute: #COLOUR(#PC+$01)
 $C199 DEFB $F0,$07,$14 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$07,,4(n,{ #Nn | #UDG($DA84,attr=$43) })
                        ; UDGTABLE#
 $C19C DEFB $FF         ; Terminator.

; Graphic ID #N$4D
@label=graphic_4d
b$C19D DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C19E DEFW $DBAC       ; }
 $C1A0 DEFB $FE,$07     ; Attribute: #COLOUR(#PC+$01)
 $C1A2 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBAC,attr=$7)
                        ; } UDGTABLE#
 $C1A3 DEFB $0C         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC0C,attr=$7)
                        ; } UDGTABLE#
 $C1A4 DEFB $C6,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C1A6 DEFB $0D         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC14,attr=$7)
                        ; } UDGTABLE#
 $C1A7 DEFB $0E         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC1C,attr=$7)
                        ; } UDGTABLE#
 $C1A8 DEFB $C6,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C1AA DEFB $0D         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC14,attr=$7)
                        ; } UDGTABLE#
 $C1AB DEFB $0E         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC1C,attr=$7)
                        ; } UDGTABLE#
 $C1AC DEFB $C5,$03     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C1AE DEFB $06         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBDC,attr=$7)
                        ; } UDGTABLE#
 $C1AF DEFB $0D         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC14,attr=$7)
                        ; } UDGTABLE#
 $C1B0 DEFB $0E         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC1C,attr=$7)
                        ; } UDGTABLE#
 $C1B1 DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBE4,attr=$7)
                        ; } UDGTABLE#
 $C1B2 DEFB $C4,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C1B4 DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBCC,attr=$7)
                        ; } UDGTABLE#
 $C1B5 DEFB $05         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBD4,attr=$7)
                        ; } UDGTABLE#
 $C1B6 DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBEC,attr=$7)
                        ; } UDGTABLE#
 $C1B7 DEFB $09         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBF4,attr=$7)
                        ; } UDGTABLE#
 $C1B8 DEFB $C4,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C1BA DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBBC,attr=$7)
                        ; } UDGTABLE#
 $C1BB DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBC4,attr=$7)
                        ; } UDGTABLE#
 $C1BC DEFB $0A         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBFC,attr=$7)
                        ; } UDGTABLE#
 $C1BD DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC04,attr=$7)
                        ; } UDGTABLE#
 $C1BE DEFB $C3,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C1C0 DEFB $06         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBDC,attr=$7)
                        ; } UDGTABLE#
 $C1C1 DEFB $CC,$00     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C1C3 DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBE4,attr=$7)
                        ; } UDGTABLE#
 $C1C4 DEFB $C2,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C1C6 DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBCC,attr=$7)
                        ; } UDGTABLE#
 $C1C7 DEFB $05         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBD4,attr=$7)
                        ; } UDGTABLE#
 $C1C8 DEFB $F1         ; Action: move down one character block.
 $C1C9 DEFB $F1         ; Action: move down one character block.
 $C1CA DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBEC,attr=$7)
                        ; } UDGTABLE#
 $C1CB DEFB $09         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBF4,attr=$7)
                        ; } UDGTABLE#
 $C1CC DEFB $C2,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C1CE DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBBC,attr=$7)
                        ; } UDGTABLE#
 $C1CF DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBC4,attr=$7)
                        ; } UDGTABLE#
 $C1D0 DEFB $F1         ; Action: move down one character block.
 $C1D1 DEFB $F1         ; Action: move down one character block.
 $C1D2 DEFB $0A         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBFC,attr=$7)
                        ; } UDGTABLE#
 $C1D3 DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC04,attr=$7)
                        ; } UDGTABLE#
 $C1D4 DEFB $C1,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C1D6 DEFB $06         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBDC,attr=$7)
                        ; } UDGTABLE#
 $C1D7 DEFB $CE,$00     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C1D9 DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBE4,attr=$7)
                        ; } UDGTABLE#
 $C1DA DEFB $C0,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C1DC DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBCC,attr=$7)
                        ; } UDGTABLE#
 $C1DD DEFB $05         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBD4,attr=$7)
                        ; } UDGTABLE#
 $C1DE DEFB $CC,$00     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C1E0 DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBEC,attr=$7)
                        ; } UDGTABLE#
 $C1E1 DEFB $09         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBF4,attr=$7)
                        ; } UDGTABLE#
 $C1E2 DEFB $C0,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C1E4 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBBC,attr=$7)
                        ; } UDGTABLE#
 $C1E5 DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBC4,attr=$7)
                        ; } UDGTABLE#
 $C1E6 DEFB $CC,$00     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C1E8 DEFB $0A         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBFC,attr=$7)
                        ; } UDGTABLE#
 $C1E9 DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DC04,attr=$7)
                        ; } UDGTABLE#
 $C1EA DEFB $BF,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C1EC DEFB $06         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBDC,attr=$7)
                        ; } UDGTABLE#
 $C1ED DEFB $D0,$00     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C1EF DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBE4,attr=$7)
                        ; } UDGTABLE#
 $C1F0 DEFB $BE,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C1F2 DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBCC,attr=$7)
                        ; } UDGTABLE#
 $C1F3 DEFB $05         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBD4,attr=$7)
                        ; } UDGTABLE#
 $C1F4 DEFB $CE,$00     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C1F6 DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBEC,attr=$7)
                        ; } UDGTABLE#
 $C1F7 DEFB $09         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBF4,attr=$7)
                        ; } UDGTABLE#
 $C1F8 DEFB $BF,$FF     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C1FA DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $C1FC DEFB $FD,$08,$01 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c8 Columns } { #FOR$01,$08(n,=h #Nn, | ) }
                        ; { #FOR$01,$08(n,#UDG($DBB4,attr=$46), | ) }
                        ; UDGTABLE#
 $C1FF DEFB $C1,$FD     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C201 DEFB $FD,$06,$01 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c6 Columns } { #FOR$01,$06(n,=h #Nn, | ) }
                        ; { #FOR$01,$06(n,#UDG($DBB4,attr=$46), | ) }
                        ; UDGTABLE#
 $C204 DEFB $C3,$FD     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C206 DEFB $FD,$04,$01 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                        ; { #FOR$01,$04(n,#UDG($DBB4,attr=$46), | ) }
                        ; UDGTABLE#
 $C209 DEFB $FF         ; Terminator.

; Graphic ID #N$2E
@label=graphic_2e
b$C20A DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C20B DEFW $D72C       ; }
 $C20D DEFB $FE,$47     ; Attribute: #COLOUR(#PC+$01)
 $C20F DEFB $F0,$01,$00 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($D72C,attr=$47) })
                        ; UDGTABLE#
 $C212 DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $C214 DEFB $F0,$01,$01 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($D734,attr=$46) })
                        ; UDGTABLE#
 $C217 DEFB $FE,$42     ; Attribute: #COLOUR(#PC+$01)
 $C219 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D73C,attr=$42)
                        ; } UDGTABLE#
 $C21A DEFB $C6,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C21C DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D744,attr=$42)
                        ; } UDGTABLE#
 $C21D DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D74C,attr=$42)
                        ; } UDGTABLE#
 $C21E DEFB $05         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D754,attr=$42)
                        ; } UDGTABLE#
 $C21F DEFB $FF         ; Terminator.

; Graphic ID #N$2F
@label=graphic_2f
b$C220 DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C221 DEFW $D72C    ; }
 $C223 DEFB $FE,$44  ; Attribute: #COLOUR(#PC+$01)
 $C225 DEFB $0D      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D794,attr=$44) }
                     ; UDGTABLE#
 $C226 DEFB $FE,$47  ; Attribute: #COLOUR(#PC+$01)
 $C228 DEFB $C6,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C22A DEFB $0B      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D784,attr=$47) }
                     ; UDGTABLE#
 $C22B DEFB $07      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D764,attr=$47) }
                     ; UDGTABLE#
 $C22C DEFB $0C      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D78C,attr=$47) }
                     ; UDGTABLE#
 $C22D DEFB $C5,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C22F DEFB $FE,$44  ; Attribute: #COLOUR(#PC+$01)
 $C231 DEFB $09      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D774,attr=$44) }
                     ; UDGTABLE#
 $C232 DEFB $F1      ; Action: move down one character block.
 $C233 DEFB $0A      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D77C,attr=$44) }
                     ; UDGTABLE#
 $C234 DEFB $C5,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C236 DEFB $FE,$47  ; Attribute: #COLOUR(#PC+$01)
 $C238 DEFB $06      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D75C,attr=$47) }
                     ; UDGTABLE#
 $C239 DEFB $07      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D764,attr=$47) }
                     ; UDGTABLE#
 $C23A DEFB $08      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D76C,attr=$47) }
                     ; UDGTABLE#
 $C23B DEFB $FF      ; Terminator.

; Graphic ID #N$1F
@label=graphic_1f
b$C23C DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C23D DEFW $D514       ; }
 $C23F DEFB $FE,$43     ; Attribute: #COLOUR(#PC+$01)
 $C241 DEFB $0D         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D57C,attr=$43)
                        ; } UDGTABLE#
 $C242 DEFB $F0,$01,$0E ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($D584,attr=$43) })
                        ; UDGTABLE#
 $C245 DEFB $FE,$07     ; Attribute: #COLOUR(#PC+$01)
 $C247 DEFB $F0,$0A,$10 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$0A,,4(n,{ #Nn | #UDG($D594,attr=$7) })
                        ; UDGTABLE#
 $C24A DEFB $C7,$F6     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C24C DEFB $F0,$0A,$0F ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$0A,,4(n,{ #Nn | #UDG($D58C,attr=$7) })
                        ; UDGTABLE#
 $C24F DEFB $FE,$43     ; Attribute: #COLOUR(#PC+$01)
 $C251 DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D56C,attr=$43)
                        ; } UDGTABLE#
 $C252 DEFB $0C         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D574,attr=$43)
                        ; } UDGTABLE#
 $C253 DEFB $FF         ; Terminator.

; Graphic ID #N$2D
@label=graphic_2d
b$C254 DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C255 DEFW $D1BC    ; }
 $C257 DEFB $FE,$47  ; Attribute: #COLOUR(#PC+$01)
 $C259 DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1D4,attr=$47) }
                     ; UDGTABLE#
 $C25A DEFB $FE,$43  ; Attribute: #COLOUR(#PC+$01)
 $C25C DEFB $04      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1DC,attr=$43) }
                     ; UDGTABLE#
 $C25D DEFB $FE,$42  ; Attribute: #COLOUR(#PC+$01)
 $C25F DEFB $05      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1E4,attr=$42) }
                     ; UDGTABLE#
 $C260 DEFB $FE,$46  ; Attribute: #COLOUR(#PC+$01)
 $C262 DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1D4,attr=$46) }
                     ; UDGTABLE#
 $C263 DEFB $FE,$43  ; Attribute: #COLOUR(#PC+$01)
 $C265 DEFB $04      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1DC,attr=$43) }
                     ; UDGTABLE#
 $C266 DEFB $FE,$47  ; Attribute: #COLOUR(#PC+$01)
 $C268 DEFB $05      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1E4,attr=$47) }
                     ; UDGTABLE#
 $C269 DEFB $FE,$44  ; Attribute: #COLOUR(#PC+$01)
 $C26B DEFB $05      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1E4,attr=$44) }
                     ; UDGTABLE#
 $C26C DEFB $FE,$46  ; Attribute: #COLOUR(#PC+$01)
 $C26E DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1D4,attr=$46) }
                     ; UDGTABLE#
 $C26F DEFB $C0,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C271 DEFB $FE,$45  ; Attribute: #COLOUR(#PC+$01)
 $C273 DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1BC,attr=$45) }
                     ; UDGTABLE#
 $C274 DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1C4,attr=$45) }
                     ; UDGTABLE#
 $C275 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1CC,attr=$45) }
                     ; UDGTABLE#
 $C276 DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1BC,attr=$45) }
                     ; UDGTABLE#
 $C277 DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1C4,attr=$45) }
                     ; UDGTABLE#
 $C278 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1CC,attr=$45) }
                     ; UDGTABLE#
 $C279 DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1BC,attr=$45) }
                     ; UDGTABLE#
 $C27A DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1C4,attr=$45) }
                     ; UDGTABLE#
 $C27B DEFB $FF      ; Terminator.

; Graphic ID #N$3B
@label=graphic_3b
b$C27C DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C27D DEFW $D72C    ; }
 $C27F DEFB $FE,$45  ; Attribute: #COLOUR(#PC+$01)
 $C281 DEFB $09      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D774,attr=$45) }
                     ; UDGTABLE#
 $C282 DEFB $0A      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D77C,attr=$45) }
                     ; UDGTABLE#
 $C283 DEFB $C6,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C285 DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C286 DEFW $D514    ; }
 $C288 DEFB $FE,$72  ; Attribute: #COLOUR(#PC+$01)
 $C28A DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D514,attr=$72) }
                     ; UDGTABLE#
 $C28B DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D514,attr=$72) }
                     ; UDGTABLE#
 $C28C DEFB $C6,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C28E DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D514,attr=$72) }
                     ; UDGTABLE#
 $C28F DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D514,attr=$72) }
                     ; UDGTABLE#
 $C290 DEFB $FF      ; Terminator.

; Graphic ID #N$49
@label=graphic_49
b$C291 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C292 DEFW $DFEC       ; }
 $C294 DEFB $FE,$44     ; Attribute: #COLOUR(#PC+$01)
 $C296 DEFB $FD,$20,$07 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c32 Columns } { #FOR$01,$20(n,=h #Nn, | ) }
                        ; { #FOR$01,$20(n,#UDG($E024,attr=$44), | ) }
                        ; UDGTABLE#
 $C299 DEFB $FF         ; Terminator.

; Graphic ID #N$4A
@label=graphic_4a
b$C29A DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C29B DEFW $D27C    ; }
 $C29D DEFB $FE,$45  ; Attribute: #COLOUR(#PC+$01)
 $C29F DEFB $11      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D304,attr=$45) }
                     ; UDGTABLE#
 $C2A0 DEFB $12      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D30C,attr=$45) }
                     ; UDGTABLE#
 $C2A1 DEFB $13      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D314,attr=$45) }
                     ; UDGTABLE#
 $C2A2 DEFB $C5,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C2A4 DEFB $14      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D31C,attr=$45) }
                     ; UDGTABLE#
 $C2A5 DEFB $15      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D324,attr=$45) }
                     ; UDGTABLE#
 $C2A6 DEFB $16      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D32C,attr=$45) }
                     ; UDGTABLE#
 $C2A7 DEFB $FF      ; Terminator.

; Graphic ID #N$6A
@label=graphic_6a
b$C2A8 DEFB $FB             ; {Sprite Data:
 $C2A9 DEFW $D5FC           ; #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).}
 $C2AB DEFB $FE,$44         ; Attribute: #COLOUR(#PC+$01)
 $C2AD DEFB $13             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($D694,attr=$44) } UDGTABLE#
 $C2AE DEFB $FD,$16,$14     ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c22 Columns } { #FOR$01,$16(n,=h #Nn, | ) }
                            ; { #FOR$01,$16(n,#UDG($D69C,attr=$44), | ) }
                            ; UDGTABLE#
 $C2B1 DEFB $F0,$01,$15     ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE {{ =h Row | =h Graphic }}
                            ; #FOR$01,$01,,4(n,{ #Nn | #UDG($D6A4,attr=$44) })
                            ; UDGTABLE#
 $C2B4 DEFB $F0,$05,$17     ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE {{ =h Row | =h Graphic }}
                            ; #FOR$01,$05,,4(n,{ #Nn | #UDG($D6B4,attr=$44) })
                            ; UDGTABLE#
 $C2B7 DEFB $B1,$FB         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $C2B9 DEFB $F0,$05,$16     ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE {{ =h Row | =h Graphic }}
                            ; #FOR$01,$05,,4(n,{ #Nn | #UDG($D6AC,attr=$44) })
                            ; UDGTABLE#
 $C2BC DEFB $C9,$FB         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $C2BE DEFB $FE,$46         ; Attribute: #COLOUR(#PC+$01)
 $C2C0 DEFB $FB             ; {Sprite Data:
 $C2C1 DEFW $D514           ; #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).}
 $C2C3 DEFB $F2,$0B,$12,$13 ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c11 Columns } { #FOR$01,$0B(n,=h #Nn, | ) }
                            ; { #FOR$01,$0B(n,#UDG($D5A4,attr=$46)#UDG($D5AC,attr=$46), | ) }
                            ; UDGTABLE#
 $C2C7 DEFB $B2,$01         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $C2C9 DEFB $F2,$0B,$14,$15 ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c11 Columns } { #FOR$01,$0B(n,=h #Nn, | ) }
                            ; { #FOR$01,$0B(n,#UDG($D5B4,attr=$46)#UDG($D5BC,attr=$46), | ) }
                            ; UDGTABLE#
 $C2CD DEFB $B2,$01         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $C2CF DEFB $F2,$0B,$14,$15 ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c11 Columns } { #FOR$01,$0B(n,=h #Nn, | ) }
                            ; { #FOR$01,$0B(n,#UDG($D5B4,attr=$46)#UDG($D5BC,attr=$46), | ) }
                            ; UDGTABLE#
 $C2D3 DEFB $B2,$01         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $C2D5 DEFB $14             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($D5B4,attr=$46) } UDGTABLE#
 $C2D6 DEFB $15             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($D5BC,attr=$46) } UDGTABLE#
 $C2D7 DEFB $17             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($D5CC,attr=$46) } UDGTABLE#
 $C2D8 DEFB $18             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($D5D4,attr=$46) } UDGTABLE#
 $C2D9 DEFB $F2,$03,$14,$15 ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c3 Columns } { #FOR$01,$03(n,=h #Nn, | ) }
                            ; { #FOR$01,$03(n,#UDG($D5B4,attr=$46)#UDG($D5BC,attr=$46), | ) }
                            ; UDGTABLE#
 $C2DD DEFB $17             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($D5CC,attr=$46) } UDGTABLE#
 $C2DE DEFB $18             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($D5D4,attr=$46) } UDGTABLE#
 $C2DF DEFB $F2,$03,$14,$15 ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c3 Columns } { #FOR$01,$03(n,=h #Nn, | ) }
                            ; { #FOR$01,$03(n,#UDG($D5B4,attr=$46)#UDG($D5BC,attr=$46), | ) }
                            ; UDGTABLE#
 $C2E3 DEFB $17             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($D5CC,attr=$46) } UDGTABLE#
 $C2E4 DEFB $18             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($D5D4,attr=$46) } UDGTABLE#
 $C2E5 DEFB $14             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($D5B4,attr=$46) } UDGTABLE#
 $C2E6 DEFB $15             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($D5BC,attr=$46) } UDGTABLE#
 $C2E7 DEFB $B2,$01         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $C2E9 DEFB $17             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($D5CC,attr=$46) } UDGTABLE#
 $C2EA DEFB $18             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($D5D4,attr=$46) } UDGTABLE#
 $C2EB DEFB $F1             ; Action: move down one character block.
 $C2EC DEFB $F1             ; Action: move down one character block.
 $C2ED DEFB $F2,$03,$17,$18 ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c3 Columns } { #FOR$01,$03(n,=h #Nn, | ) }
                            ; { #FOR$01,$03(n,#UDG($D5CC,attr=$46)#UDG($D5D4,attr=$46), | ) }
                            ; UDGTABLE#
 $C2F1 DEFB $F1             ; Action: move down one character block.
 $C2F2 DEFB $F1             ; Action: move down one character block.
 $C2F3 DEFB $F2,$03,$17,$18 ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c3 Columns } { #FOR$01,$03(n,=h #Nn, | ) }
                            ; { #FOR$01,$03(n,#UDG($D5CC,attr=$46)#UDG($D5D4,attr=$46), | ) }
                            ; UDGTABLE#
 $C2F7 DEFB $F1             ; Action: move down one character block.
 $C2F8 DEFB $F1             ; Action: move down one character block.
 $C2F9 DEFB $17             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($D5CC,attr=$46) } UDGTABLE#
 $C2FA DEFB $18             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($D5D4,attr=$46) } UDGTABLE#
 $C2FB DEFB $B1,$01         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $C2FD DEFB $FE,$45         ; Attribute: #COLOUR(#PC+$01)
 $C2FF DEFB $FB             ; {Sprite Data:
 $C300 DEFW $D204           ; #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).}
 $C302 DEFB $07             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($D23C,attr=$45) } UDGTABLE#
 $C303 DEFB $FD,$1A,$01     ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c26 Columns } { #FOR$01,$1A(n,=h #Nn, | ) }
                            ; { #FOR$01,$1A(n,#UDG($D20C,attr=$45), | ) }
                            ; UDGTABLE#
 $C306 DEFB $F0,$01,$02     ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE {{ =h Row | =h Graphic }}
                            ; #FOR$01,$01,,4(n,{ #Nn | #UDG($D214,attr=$45) })
                            ; UDGTABLE#
 $C309 DEFB $F0,$02,$03     ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE {{ =h Row | =h Graphic }}
                            ; #FOR$01,$02,,4(n,{ #Nn | #UDG($D21C,attr=$45) })
                            ; UDGTABLE#
 $C30C DEFB $AD,$FE         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $C30E DEFB $F0,$02,$04     ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE {{ =h Row | =h Graphic }}
                            ; #FOR$01,$02,,4(n,{ #Nn | #UDG($D224,attr=$45) })
                            ; UDGTABLE#
 $C311 DEFB $FF             ; Terminator.

; Graphic ID #N$6B
@label=graphic_6b
b$C312 DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C313 DEFW $D9E4    ; }
 $C315 DEFB $C8,$03  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C317 DEFB $FE,$45  ; Attribute: #COLOUR(#PC+$01)
 $C319 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D9F4,attr=$45) }
                     ; UDGTABLE#
 $C31A DEFB $0B      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$45) }
                     ; UDGTABLE#
 $C31B DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D9FC,attr=$45) }
                     ; UDGTABLE#
 $C31C DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D9F4,attr=$45) }
                     ; UDGTABLE#
 $C31D DEFB $0B      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$45) }
                     ; UDGTABLE#
 $C31E DEFB $0B      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$45) }
                     ; UDGTABLE#
 $C31F DEFB $0B      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$45) }
                     ; UDGTABLE#
 $C320 DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D9FC,attr=$45) }
                     ; UDGTABLE#
 $C321 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D9F4,attr=$45) }
                     ; UDGTABLE#
 $C322 DEFB $0B      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$45) }
                     ; UDGTABLE#
 $C323 DEFB $0B      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$45) }
                     ; UDGTABLE#
 $C324 DEFB $0B      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$45) }
                     ; UDGTABLE#
 $C325 DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D9FC,attr=$45) }
                     ; UDGTABLE#
 $C326 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D9F4,attr=$45) }
                     ; UDGTABLE#
 $C327 DEFB $0B      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$45) }
                     ; UDGTABLE#
 $C328 DEFB $0B      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$45) }
                     ; UDGTABLE#
 $C329 DEFB $0B      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$45) }
                     ; UDGTABLE#
 $C32A DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D9FC,attr=$45) }
                     ; UDGTABLE#
 $C32B DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D9F4,attr=$45) }
                     ; UDGTABLE#
 $C32C DEFB $0B      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$45) }
                     ; UDGTABLE#
 $C32D DEFB $0B      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$45) }
                     ; UDGTABLE#
 $C32E DEFB $0B      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$45) }
                     ; UDGTABLE#
 $C32F DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D9FC,attr=$45) }
                     ; UDGTABLE#
 $C330 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D9F4,attr=$45) }
                     ; UDGTABLE#
 $C331 DEFB $0B      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$45) }
                     ; UDGTABLE#
 $C332 DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D9FC,attr=$45) }
                     ; UDGTABLE#
 $C333 DEFB $FF      ; Terminator.

; Graphic ID #N$71
@label=graphic_71
b$C334 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C335 DEFW $D6BC       ; }
 $C337 DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C339 DEFB $F0,$01,$02 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($D6CC,attr=$45) })
                        ; UDGTABLE#
 $C33C DEFB $F0,$07,$09 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$07,,4(n,{ #Nn | #UDG($D704,attr=$45) })
                        ; UDGTABLE#
 $C33F DEFB $FE,$44     ; Attribute: #COLOUR(#PC+$01)
 $C341 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C342 DEFW $D1BC       ; }
 $C344 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1C4,attr=$44)
                        ; } UDGTABLE#
 $C345 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1CC,attr=$44)
                        ; } UDGTABLE#
 $C346 DEFB $FF         ; Terminator.

; Graphic ID #N$72
@label=graphic_72
b$C347 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C348 DEFW $DFEC       ; }
 $C34A DEFB $C8,$03     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C34C DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C34E DEFB $FD,$17,$0F ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c23 Columns } { #FOR$01,$17(n,=h #Nn, | ) }
                        ; { #FOR$01,$17(n,#UDG($E064,attr=$45), | ) }
                        ; UDGTABLE#
 $C351 DEFB $FF         ; Terminator.

; Graphic ID #N$00
@label=graphic_00
b$C352 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C353 DEFW $DFEC       ; }
 $C355 DEFB $C8,$03     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C357 DEFB $FE,$05     ; Attribute: #COLOUR(#PC+$01)
 $C359 DEFB $FD,$20,$00 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c32 Columns } { #FOR$01,$20(n,=h #Nn, | ) }
                        ; { #FOR$01,$20(n,#UDG($DFEC,attr=$5), | ) }
                        ; UDGTABLE#
 $C35C DEFB $FF         ; Terminator.

; Graphic ID #N$20
@label=graphic_20
b$C35D DEFB $FB             ; {Sprite Data:
 $C35E DEFW $DFEC           ; #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).}
 $C360 DEFB $C8,$03         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $C362 DEFB $FE,$43         ; Attribute: #COLOUR(#PC+$01)
 $C364 DEFB $F2,$10,$05,$06 ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c16 Columns } { #FOR$01,$10(n,=h #Nn, | ) }
                            ; { #FOR$01,$10(n,#UDG($E014,attr=$43)#UDG($E01C,attr=$43), | ) }
                            ; UDGTABLE#
 $C368 DEFB $FF             ; Terminator.

; Graphic ID #N$21
@label=graphic_21
b$C369 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C36A DEFW $D204       ; }
 $C36C DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $C36E DEFB $F0,$01,$00 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($D204,attr=$46) })
                        ; UDGTABLE#
 $C371 DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D224,attr=$46)
                        ; } UDGTABLE#
 $C372 DEFB $F1         ; Action: move down one character block.
 $C373 DEFB $05         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D22C,attr=$46)
                        ; } UDGTABLE#
 $C374 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D214,attr=$46)
                        ; } UDGTABLE#
 $C375 DEFB $C4,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C377 DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D224,attr=$46)
                        ; } UDGTABLE#
 $C378 DEFB $F1         ; Action: move down one character block.
 $C379 DEFB $06         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D234,attr=$46)
                        ; } UDGTABLE#
 $C37A DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D21C,attr=$46)
                        ; } UDGTABLE#
 $C37B DEFB $FF         ; Terminator.

; Graphic ID #N$01
@label=graphic_01
b$C37C DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C37D DEFW $E06C       ; }
 $C37F DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $C381 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E074,attr=$46)
                        ; } UDGTABLE#
 $C382 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E07C,attr=$46)
                        ; } UDGTABLE#
 $C383 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E074,attr=$46)
                        ; } UDGTABLE#
 $C384 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E07C,attr=$46)
                        ; } UDGTABLE#
 $C385 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E074,attr=$46)
                        ; } UDGTABLE#
 $C386 DEFB $05         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E094,attr=$46)
                        ; } UDGTABLE#
 $C387 DEFB $C3,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C389 DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E08C,attr=$46)
                        ; } UDGTABLE#
 $C38A DEFB $F1         ; Action: move down one character block.
 $C38B DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E08C,attr=$46)
                        ; } UDGTABLE#
 $C38C DEFB $F1         ; Action: move down one character block.
 $C38D DEFB $06         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E09C,attr=$46)
                        ; } UDGTABLE#
 $C38E DEFB $05         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E094,attr=$46)
                        ; } UDGTABLE#
 $C38F DEFB $C1,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C391 DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C393 DEFB $FD,$04,$00 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                        ; { #FOR$01,$04(n,#UDG($E06C,attr=$45), | ) }
                        ; UDGTABLE#
 $C396 DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E084,attr=$45)
                        ; } UDGTABLE#
 $C397 DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $C399 DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E08C,attr=$46)
                        ; } UDGTABLE#
 $C39A DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E0A4,attr=$46)
                        ; } UDGTABLE#
 $C39B DEFB $05         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E094,attr=$46)
                        ; } UDGTABLE#
 $C39C DEFB $C5,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C39E DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C3A0 DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E084,attr=$45)
                        ; } UDGTABLE#
 $C3A1 DEFB $F1         ; Action: move down one character block.
 $C3A2 DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $C3A4 DEFB $06         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E09C,attr=$46)
                        ; } UDGTABLE#
 $C3A5 DEFB $05         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E094,attr=$46)
                        ; } UDGTABLE#
 $C3A6 DEFB $C5,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C3A8 DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C3AA DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E084,attr=$45)
                        ; } UDGTABLE#
 $C3AB DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $C3AD DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E08C,attr=$46)
                        ; } UDGTABLE#
 $C3AE DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E0A4,attr=$46)
                        ; } UDGTABLE#
 $C3AF DEFB $05         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E094,attr=$46)
                        ; } UDGTABLE#
 $C3B0 DEFB $C5,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C3B2 DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C3B4 DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E084,attr=$45)
                        ; } UDGTABLE#
 $C3B5 DEFB $F1         ; Action: move down one character block.
 $C3B6 DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $C3B8 DEFB $06         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E09C,attr=$46)
                        ; } UDGTABLE#
 $C3B9 DEFB $05         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E094,attr=$46)
                        ; } UDGTABLE#
 $C3BA DEFB $C5,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C3BC DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C3BE DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E084,attr=$45)
                        ; } UDGTABLE#
 $C3BF DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $C3C1 DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E08C,attr=$46)
                        ; } UDGTABLE#
 $C3C2 DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E0A4,attr=$46)
                        ; } UDGTABLE#
 $C3C3 DEFB $05         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E094,attr=$46)
                        ; } UDGTABLE#
 $C3C4 DEFB $C5,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C3C6 DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C3C8 DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E084,attr=$45)
                        ; } UDGTABLE#
 $C3C9 DEFB $F1         ; Action: move down one character block.
 $C3CA DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $C3CC DEFB $06         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E09C,attr=$46)
                        ; } UDGTABLE#
 $C3CD DEFB $C6,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C3CF DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C3D1 DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E084,attr=$45)
                        ; } UDGTABLE#
 $C3D2 DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $C3D4 DEFB $F0,$01,$04 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($E08C,attr=$46) })
                        ; UDGTABLE#
 $C3D7 DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C3D9 DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E084,attr=$45)
                        ; } UDGTABLE#
 $C3DA DEFB $FF         ; Terminator.

; Graphic ID #N$02
@label=graphic_02
b$C3DB DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C3DC DEFW $E06C       ; }
 $C3DE DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $C3E0 DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E0AC,attr=$46)
                        ; } UDGTABLE#
 $C3E1 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E074,attr=$46)
                        ; } UDGTABLE#
 $C3E2 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E07C,attr=$46)
                        ; } UDGTABLE#
 $C3E3 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E074,attr=$46)
                        ; } UDGTABLE#
 $C3E4 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E07C,attr=$46)
                        ; } UDGTABLE#
 $C3E5 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E074,attr=$46)
                        ; } UDGTABLE#
 $C3E6 DEFB $C1,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C3E8 DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E0AC,attr=$46)
                        ; } UDGTABLE#
 $C3E9 DEFB $0A         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E0BC,attr=$46)
                        ; } UDGTABLE#
 $C3EA DEFB $F1         ; Action: move down one character block.
 $C3EB DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E08C,attr=$46)
                        ; } UDGTABLE#
 $C3EC DEFB $F1         ; Action: move down one character block.
 $C3ED DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E08C,attr=$46)
                        ; } UDGTABLE#
 $C3EE DEFB $C1,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C3F0 DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E0AC,attr=$46)
                        ; } UDGTABLE#
 $C3F1 DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E0C4,attr=$46)
                        ; } UDGTABLE#
 $C3F2 DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E08C,attr=$46)
                        ; } UDGTABLE#
 $C3F3 DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C3F5 DEFB $09         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E0B4,attr=$45)
                        ; } UDGTABLE#
 $C3F6 DEFB $FD,$04,$0C ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                        ; { #FOR$01,$04(n,#UDG($E0CC,attr=$45), | ) }
                        ; UDGTABLE#
 $C3F9 DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $C3FB DEFB $BF,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C3FD DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E0AC,attr=$46)
                        ; } UDGTABLE#
 $C3FE DEFB $0A         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E0BC,attr=$46)
                        ; } UDGTABLE#
 $C3FF DEFB $F1         ; Action: move down one character block.
 $C400 DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C402 DEFB $09         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E0B4,attr=$45)
                        ; } UDGTABLE#
 $C403 DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $C405 DEFB $C3,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C407 DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E0AC,attr=$46)
                        ; } UDGTABLE#
 $C408 DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E0C4,attr=$46)
                        ; } UDGTABLE#
 $C409 DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E08C,attr=$46)
                        ; } UDGTABLE#
 $C40A DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C40C DEFB $09         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E0B4,attr=$45)
                        ; } UDGTABLE#
 $C40D DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $C40F DEFB $C3,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C411 DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E0AC,attr=$46)
                        ; } UDGTABLE#
 $C412 DEFB $0A         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E0BC,attr=$46)
                        ; } UDGTABLE#
 $C413 DEFB $F1         ; Action: move down one character block.
 $C414 DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C416 DEFB $09         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E0B4,attr=$45)
                        ; } UDGTABLE#
 $C417 DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $C419 DEFB $C3,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C41B DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E0AC,attr=$46)
                        ; } UDGTABLE#
 $C41C DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E0C4,attr=$46)
                        ; } UDGTABLE#
 $C41D DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E08C,attr=$46)
                        ; } UDGTABLE#
 $C41E DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C420 DEFB $09         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E0B4,attr=$45)
                        ; } UDGTABLE#
 $C421 DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $C423 DEFB $C4,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C425 DEFB $0A         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E0BC,attr=$46)
                        ; } UDGTABLE#
 $C426 DEFB $C9,$00     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C428 DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C42A DEFB $09         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E0B4,attr=$45)
                        ; } UDGTABLE#
 $C42B DEFB $C5,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C42D DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $C42F DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E08C,attr=$46)
                        ; } UDGTABLE#
 $C430 DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C432 DEFB $09         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E0B4,attr=$45)
                        ; } UDGTABLE#
 $C433 DEFB $C6,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C435 DEFB $09         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E0B4,attr=$45)
                        ; } UDGTABLE#
 $C436 DEFB $FF         ; Terminator.

; Graphic ID #N$69
@label=graphic_69
b$C437 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C438 DEFW $DF44       ; }
 $C43A DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C43C DEFB $06         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF74,attr=$45)
                        ; } UDGTABLE#
 $C43D DEFB $FE,$47     ; Attribute: #COLOUR(#PC+$01)
 $C43F DEFB $FD,$08,$0A ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c8 Columns } { #FOR$01,$08(n,=h #Nn, | ) }
                        ; { #FOR$01,$08(n,#UDG($DF94,attr=$47), | ) }
                        ; UDGTABLE#
 $C442 DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C444 DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF7C,attr=$45)
                        ; } UDGTABLE#
 $C445 DEFB $06         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF74,attr=$45)
                        ; } UDGTABLE#
 $C446 DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF7C,attr=$45)
                        ; } UDGTABLE#
 $C447 DEFB $06         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF74,attr=$45)
                        ; } UDGTABLE#
 $C448 DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF7C,attr=$45)
                        ; } UDGTABLE#
 $C449 DEFB $BC,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C44B DEFB $06         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF74,attr=$45)
                        ; } UDGTABLE#
 $C44C DEFB $FD,$06,$05 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c6 Columns } { #FOR$01,$06(n,=h #Nn, | ) }
                        ; { #FOR$01,$06(n,#UDG($DF6C,attr=$45), | ) }
                        ; UDGTABLE#
 $C44F DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF84,attr=$45)
                        ; } UDGTABLE#
 $C450 DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF64,attr=$45)
                        ; } UDGTABLE#
 $C451 DEFB $BF,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C453 DEFB $09         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF8C,attr=$45)
                        ; } UDGTABLE#
 $C454 DEFB $FE,$43     ; Attribute: #COLOUR(#PC+$01)
 $C456 DEFB $FD,$06,$0A ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c6 Columns } { #FOR$01,$06(n,=h #Nn, | ) }
                        ; { #FOR$01,$06(n,#UDG($DF94,attr=$43), | ) }
                        ; UDGTABLE#
 $C459 DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C45B DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF7C,attr=$45)
                        ; } UDGTABLE#
 $C45C DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF64,attr=$45)
                        ; } UDGTABLE#
 $C45D DEFB $BF,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C45F DEFB $06         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF74,attr=$45)
                        ; } UDGTABLE#
 $C460 DEFB $FD,$06,$05 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c6 Columns } { #FOR$01,$06(n,=h #Nn, | ) }
                        ; { #FOR$01,$06(n,#UDG($DF6C,attr=$45), | ) }
                        ; UDGTABLE#
 $C463 DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF84,attr=$45)
                        ; } UDGTABLE#
 $C464 DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF64,attr=$45)
                        ; } UDGTABLE#
 $C465 DEFB $BF,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C467 DEFB $09         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF8C,attr=$45)
                        ; } UDGTABLE#
 $C468 DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $C46A DEFB $FD,$06,$0A ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c6 Columns } { #FOR$01,$06(n,=h #Nn, | ) }
                        ; { #FOR$01,$06(n,#UDG($DF94,attr=$46), | ) }
                        ; UDGTABLE#
 $C46D DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C46F DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF7C,attr=$45)
                        ; } UDGTABLE#
 $C470 DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF64,attr=$45)
                        ; } UDGTABLE#
 $C471 DEFB $BF,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C473 DEFB $06         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF74,attr=$45)
                        ; } UDGTABLE#
 $C474 DEFB $FD,$06,$05 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c6 Columns } { #FOR$01,$06(n,=h #Nn, | ) }
                        ; { #FOR$01,$06(n,#UDG($DF6C,attr=$45), | ) }
                        ; UDGTABLE#
 $C477 DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF84,attr=$45)
                        ; } UDGTABLE#
 $C478 DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF64,attr=$45)
                        ; } UDGTABLE#
 $C479 DEFB $BF,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C47B DEFB $09         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF8C,attr=$45)
                        ; } UDGTABLE#
 $C47C DEFB $FE,$42     ; Attribute: #COLOUR(#PC+$01)
 $C47E DEFB $FD,$06,$0A ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c6 Columns } { #FOR$01,$06(n,=h #Nn, | ) }
                        ; { #FOR$01,$06(n,#UDG($DF94,attr=$42), | ) }
                        ; UDGTABLE#
 $C481 DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C483 DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF7C,attr=$45)
                        ; } UDGTABLE#
 $C484 DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF64,attr=$45)
                        ; } UDGTABLE#
 $C485 DEFB $BF,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C487 DEFB $06         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF74,attr=$45)
                        ; } UDGTABLE#
 $C488 DEFB $FD,$06,$05 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c6 Columns } { #FOR$01,$06(n,=h #Nn, | ) }
                        ; { #FOR$01,$06(n,#UDG($DF6C,attr=$45), | ) }
                        ; UDGTABLE#
 $C48B DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF84,attr=$45)
                        ; } UDGTABLE#
 $C48C DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF64,attr=$45)
                        ; } UDGTABLE#
 $C48D DEFB $BF,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C48F DEFB $09         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF8C,attr=$45)
                        ; } UDGTABLE#
 $C490 DEFB $FE,$44     ; Attribute: #COLOUR(#PC+$01)
 $C492 DEFB $FD,$06,$0A ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c6 Columns } { #FOR$01,$06(n,=h #Nn, | ) }
                        ; { #FOR$01,$06(n,#UDG($DF94,attr=$44), | ) }
                        ; UDGTABLE#
 $C495 DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C497 DEFB $05         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF6C,attr=$45)
                        ; } UDGTABLE#
 $C498 DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF84,attr=$45)
                        ; } UDGTABLE#
 $C499 DEFB $09         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF8C,attr=$45)
                        ; } UDGTABLE#
 $C49A DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF84,attr=$45)
                        ; } UDGTABLE#
 $C49B DEFB $C7,$F9     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C49D DEFB $F0,$07,$04 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$07,,4(n,{ #Nn | #UDG($DF64,attr=$45) })
                        ; UDGTABLE#
 $C4A0 DEFB $C9,$FE     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C4A2 DEFB $09         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF8C,attr=$45)
                        ; } UDGTABLE#
 $C4A3 DEFB $05         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF6C,attr=$45)
                        ; } UDGTABLE#
 $C4A4 DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF7C,attr=$45)
                        ; } UDGTABLE#
 $C4A5 DEFB $C3,$FB     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C4A7 DEFB $FE,$47     ; Attribute: #COLOUR(#PC+$01)
 $C4A9 DEFB $F0,$07,$0C ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$07,,4(n,{ #Nn | #UDG($DFA4,attr=$47) })
                        ; UDGTABLE#
 $C4AC DEFB $CA,$F9     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C4AE DEFB $F0,$05,$0C ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$05,,4(n,{ #Nn | #UDG($DFA4,attr=$47) })
                        ; UDGTABLE#
 $C4B1 DEFB $BB,$FB     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C4B3 DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C4B5 DEFB $F0,$01,$04 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($DF64,attr=$45) })
                        ; UDGTABLE#
 $C4B8 DEFB $FE,$47     ; Attribute: #COLOUR(#PC+$01)
 $C4BA DEFB $F0,$02,$0B ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$02,,4(n,{ #Nn | #UDG($DF9C,attr=$47) })
                        ; UDGTABLE#
 $C4BD DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C4BF DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF64,attr=$45)
                        ; } UDGTABLE#
 $C4C0 DEFB $C6,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C4C2 DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $C4C4 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF54,attr=$46)
                        ; } UDGTABLE#
 $C4C5 DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF5C,attr=$46)
                        ; } UDGTABLE#
 $C4C6 DEFB $FE,$44     ; Attribute: #COLOUR(#PC+$01)
 $C4C8 DEFB $C6,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C4CA DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF44,attr=$44)
                        ; } UDGTABLE#
 $C4CB DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF4C,attr=$44)
                        ; } UDGTABLE#
 $C4CC DEFB $FF         ; Terminator.

; Graphic ID #N$68
@label=graphic_68
b$C4CD DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C4CE DEFW $D1BC       ; }
 $C4D0 DEFB $FE,$43     ; Attribute: #COLOUR(#PC+$01)
 $C4D2 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1BC,attr=$43)
                        ; } UDGTABLE#
 $C4D3 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1C4,attr=$43)
                        ; } UDGTABLE#
 $C4D4 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1CC,attr=$43)
                        ; } UDGTABLE#
 $C4D5 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1CC,attr=$43)
                        ; } UDGTABLE#
 $C4D6 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1BC,attr=$43)
                        ; } UDGTABLE#
 $C4D7 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1C4,attr=$43)
                        ; } UDGTABLE#
 $C4D8 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1CC,attr=$43)
                        ; } UDGTABLE#
 $C4D9 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1CC,attr=$43)
                        ; } UDGTABLE#
 $C4DA DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1BC,attr=$43)
                        ; } UDGTABLE#
 $C4DB DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1C4,attr=$43)
                        ; } UDGTABLE#
 $C4DC DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1CC,attr=$43)
                        ; } UDGTABLE#
 $C4DD DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1CC,attr=$43)
                        ; } UDGTABLE#
 $C4DE DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1BC,attr=$43)
                        ; } UDGTABLE#
 $C4DF DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1C4,attr=$43)
                        ; } UDGTABLE#
 $C4E0 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1CC,attr=$43)
                        ; } UDGTABLE#
 $C4E1 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1CC,attr=$43)
                        ; } UDGTABLE#
 $C4E2 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1BC,attr=$43)
                        ; } UDGTABLE#
 $C4E3 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1C4,attr=$43)
                        ; } UDGTABLE#
 $C4E4 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1CC,attr=$43)
                        ; } UDGTABLE#
 $C4E5 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1CC,attr=$43)
                        ; } UDGTABLE#
 $C4E6 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1BC,attr=$43)
                        ; } UDGTABLE#
 $C4E7 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1C4,attr=$43)
                        ; } UDGTABLE#
 $C4E8 DEFB $B3,$FE     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C4EA DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C4EC DEFB $F0,$01,$06 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($D1EC,attr=$45) })
                        ; UDGTABLE#
 $C4EF DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1F4,attr=$45)
                        ; } UDGTABLE#
 $C4F0 DEFB $C8,$FF     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C4F2 DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $C4F4 DEFB $F0,$01,$06 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($D1EC,attr=$46) })
                        ; UDGTABLE#
 $C4F7 DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1F4,attr=$46)
                        ; } UDGTABLE#
 $C4F8 DEFB $F1         ; Action: move down one character block.
 $C4F9 DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $C4FB DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1FC,attr=$46)
                        ; } UDGTABLE#
 $C4FC DEFB $C8,$FE     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C4FE DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1FC,attr=$46)
                        ; } UDGTABLE#
 $C4FF DEFB $FE,$44     ; Attribute: #COLOUR(#PC+$01)
 $C501 DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1FC,attr=$44)
                        ; } UDGTABLE#
 $C502 DEFB $C6,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C504 DEFB $FE,$42     ; Attribute: #COLOUR(#PC+$01)
 $C506 DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1FC,attr=$42)
                        ; } UDGTABLE#
 $C507 DEFB $FE,$47     ; Attribute: #COLOUR(#PC+$01)
 $C509 DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1FC,attr=$47)
                        ; } UDGTABLE#
 $C50A DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $C50C DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1FC,attr=$46)
                        ; } UDGTABLE#
 $C50D DEFB $C5,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C50F DEFB $FE,$44     ; Attribute: #COLOUR(#PC+$01)
 $C511 DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1FC,attr=$44)
                        ; } UDGTABLE#
 $C512 DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $C514 DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1FC,attr=$46)
                        ; } UDGTABLE#
 $C515 DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C517 DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1FC,attr=$45)
                        ; } UDGTABLE#
 $C518 DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $C51A DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1FC,attr=$46)
                        ; } UDGTABLE#
 $C51B DEFB $C9,$FF     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C51D DEFB $FE,$47     ; Attribute: #COLOUR(#PC+$01)
 $C51F DEFB $F0,$01,$06 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($D1EC,attr=$47) })
                        ; UDGTABLE#
 $C522 DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1F4,attr=$47)
                        ; } UDGTABLE#
 $C523 DEFB $C8,$FF     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C525 DEFB $FE,$44     ; Attribute: #COLOUR(#PC+$01)
 $C527 DEFB $F0,$01,$06 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($D1EC,attr=$44) })
                        ; UDGTABLE#
 $C52A DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1F4,attr=$44)
                        ; } UDGTABLE#
 $C52B DEFB $C8,$FF     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C52D DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $C52F DEFB $F0,$01,$06 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($D1EC,attr=$46) })
                        ; UDGTABLE#
 $C532 DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1F4,attr=$46)
                        ; } UDGTABLE#
 $C533 DEFB $C8,$FF     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C535 DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C537 DEFB $F0,$01,$06 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($D1EC,attr=$45) })
                        ; UDGTABLE#
*$C53A DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1F4,attr=$45)
                        ; } UDGTABLE#
 $C53B DEFB $C8,$FF     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C53D DEFB $FE,$44     ; Attribute: #COLOUR(#PC+$01)
 $C53F DEFB $F0,$01,$06 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($D1EC,attr=$44) })
                        ; UDGTABLE#
 $C542 DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1F4,attr=$44)
                        ; } UDGTABLE#
 $C543 DEFB $C8,$FF     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C545 DEFB $FE,$42     ; Attribute: #COLOUR(#PC+$01)
 $C547 DEFB $F0,$01,$06 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($D1EC,attr=$42) })
                        ; UDGTABLE#
 $C54A DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1F4,attr=$42)
                        ; } UDGTABLE#
 $C54B DEFB $CA,$FE     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C54D DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $C54F DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1FC,attr=$46)
                        ; } UDGTABLE#
 $C550 DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C552 DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1FC,attr=$45)
                        ; } UDGTABLE#
 $C553 DEFB $C5,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C555 DEFB $FE,$44     ; Attribute: #COLOUR(#PC+$01)
 $C557 DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1FC,attr=$44)
                        ; } UDGTABLE#
 $C558 DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $C55A DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1FC,attr=$46)
                        ; } UDGTABLE#
 $C55B DEFB $FE,$47     ; Attribute: #COLOUR(#PC+$01)
 $C55D DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1FC,attr=$47)
                        ; } UDGTABLE#
 $C55E DEFB $C5,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C560 DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1FC,attr=$47)
                        ; } UDGTABLE#
 $C561 DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C563 DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1FC,attr=$45)
                        ; } UDGTABLE#
 $C564 DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $C566 DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1FC,attr=$46)
                        ; } UDGTABLE#
 $C567 DEFB $FE,$44     ; Attribute: #COLOUR(#PC+$01)
 $C569 DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D1FC,attr=$44)
                        ; } UDGTABLE#
 $C56A DEFB $FF         ; Terminator.

; Graphic ID #N$03
@label=graphic_03
b$C56B DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C56C DEFW $DFEC    ; }
 $C56E DEFB $C8,$03  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C570 DEFB $FE,$45  ; Attribute: #COLOUR(#PC+$01)
 $C572 DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DFF4,attr=$45) }
                     ; UDGTABLE#
 $C573 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DFFC,attr=$45) }
                     ; UDGTABLE#
 $C574 DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E004,attr=$45) }
                     ; UDGTABLE#
 $C575 DEFB $04      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E00C,attr=$45) }
                     ; UDGTABLE#
 $C576 DEFB $FF      ; Terminator.

; Graphic ID #N$6C
@label=graphic_6c
b$C577 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C578 DEFW $D49C       ; }
 $C57A DEFB $FE,$44     ; Attribute: #COLOUR(#PC+$01)
 $C57C DEFB $F0,$0C,$04 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$0C,,4(n,{ #Nn | #UDG($D4BC,attr=$44) })
                        ; UDGTABLE#
 $C57F DEFB $FF         ; Terminator.

; Graphic ID #N$04
@label=graphic_04
b$C580 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C581 DEFW $D424       ; }
 $C583 DEFB $FE,$47     ; Attribute: #COLOUR(#PC+$01)
 $C585 DEFB $06         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D454,attr=$47)
                        ; } UDGTABLE#
 $C586 DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D45C,attr=$47)
                        ; } UDGTABLE#
 $C587 DEFB $C6,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C589 DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D464,attr=$47)
                        ; } UDGTABLE#
 $C58A DEFB $09         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D46C,attr=$47)
                        ; } UDGTABLE#
 $C58B DEFB $C6,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C58D DEFB $0A         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D474,attr=$47)
                        ; } UDGTABLE#
 $C58E DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D47C,attr=$47)
                        ; } UDGTABLE#
 $C58F DEFB $C6,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C591 DEFB $0C         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D484,attr=$47)
                        ; } UDGTABLE#
 $C592 DEFB $0D         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D48C,attr=$47)
                        ; } UDGTABLE#
 $C593 DEFB $C6,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C595 DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $C597 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D424,attr=$46)
                        ; } UDGTABLE#
 $C598 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D434,attr=$46)
                        ; } UDGTABLE#
 $C599 DEFB $C4,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C59B DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D424,attr=$46)
                        ; } UDGTABLE#
 $C59C DEFB $FD,$04,$01 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                        ; { #FOR$01,$04(n,#UDG($D42C,attr=$46), | ) }
                        ; UDGTABLE#
 $C59F DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D434,attr=$46)
                        ; } UDGTABLE#
 $C5A0 DEFB $C3,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C5A2 DEFB $FD,$04,$0E ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                        ; { #FOR$01,$04(n,#UDG($D494,attr=$46), | ) }
                        ; UDGTABLE#
 $C5A5 DEFB $C1,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C5A7 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D424,attr=$46)
                        ; } UDGTABLE#
 $C5A8 DEFB $FD,$08,$01 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c8 Columns } { #FOR$01,$08(n,=h #Nn, | ) }
                        ; { #FOR$01,$08(n,#UDG($D42C,attr=$46), | ) }
                        ; UDGTABLE#
 $C5AB DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D434,attr=$46)
                        ; } UDGTABLE#
 $C5AC DEFB $BF,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C5AE DEFB $FD,$08,$0E ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c8 Columns } { #FOR$01,$08(n,=h #Nn, | ) }
                        ; { #FOR$01,$08(n,#UDG($D494,attr=$46), | ) }
                        ; UDGTABLE#
 $C5B1 DEFB $BD,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C5B3 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D424,attr=$46)
                        ; } UDGTABLE#
 $C5B4 DEFB $FD,$0C,$01 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c12 Columns } { #FOR$01,$0C(n,=h #Nn, | ) }
                        ; { #FOR$01,$0C(n,#UDG($D42C,attr=$46), | ) }
                        ; UDGTABLE#
 $C5B7 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D434,attr=$46)
                        ; } UDGTABLE#
 $C5B8 DEFB $BB,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C5BA DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D43C,attr=$46)
                        ; } UDGTABLE#
 $C5BB DEFB $FD,$0A,$05 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c10 Columns } { #FOR$01,$0A(n,=h #Nn, | ) }
                        ; { #FOR$01,$0A(n,#UDG($D44C,attr=$46), | ) }
                        ; UDGTABLE#
 $C5BE DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D444,attr=$46)
                        ; } UDGTABLE#
 $C5BF DEFB $FF         ; Terminator.

; Graphic ID #N$05
@label=graphic_05
b$C5C0 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C5C1 DEFW $D3E4       ; }
 $C5C3 DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C5C5 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D3E4,attr=$45)
                        ; } UDGTABLE#
 $C5C6 DEFB $FD,$06,$01 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c6 Columns } { #FOR$01,$06(n,=h #Nn, | ) }
                        ; { #FOR$01,$06(n,#UDG($D3EC,attr=$45), | ) }
                        ; UDGTABLE#
 $C5C9 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D3F4,attr=$45)
                        ; } UDGTABLE#
 $C5CA DEFB $C0,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C5CC DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D3FC,attr=$45)
                        ; } UDGTABLE#
 $C5CD DEFB $FD,$06,$04 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c6 Columns } { #FOR$01,$06(n,=h #Nn, | ) }
                        ; { #FOR$01,$06(n,#UDG($D404,attr=$45), | ) }
                        ; UDGTABLE#
 $C5D0 DEFB $05         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D40C,attr=$45)
                        ; } UDGTABLE#
 $C5D1 DEFB $C0,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C5D3 DEFB $FE,$43     ; Attribute: #COLOUR(#PC+$01)
 $C5D5 DEFB $06         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D414,attr=$43)
                        ; } UDGTABLE#
 $C5D6 DEFB $CE,$00     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C5D8 DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D41C,attr=$43)
                        ; } UDGTABLE#
 $C5D9 DEFB $FF         ; Terminator.

; Graphic ID #N$43
@label=graphic_43
b$C5DA DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C5DB DEFW $D204       ; }
 $C5DD DEFB $FE,$43     ; Attribute: #COLOUR(#PC+$01)
 $C5DF DEFB $0C         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D264,attr=$43)
                        ; } UDGTABLE#
 $C5E0 DEFB $FD,$06,$09 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c6 Columns } { #FOR$01,$06(n,=h #Nn, | ) }
                        ; { #FOR$01,$06(n,#UDG($D24C,attr=$43), | ) }
                        ; UDGTABLE#
 $C5E3 DEFB $0D         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D26C,attr=$43)
                        ; } UDGTABLE#
 $C5E4 DEFB $C0,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C5E6 DEFB $FE,$42     ; Attribute: #COLOUR(#PC+$01)
 $C5E8 DEFB $0A         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D254,attr=$42)
                        ; } UDGTABLE#
 $C5E9 DEFB $FD,$06,$08 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c6 Columns } { #FOR$01,$06(n,=h #Nn, | ) }
                        ; { #FOR$01,$06(n,#UDG($D244,attr=$42), | ) }
                        ; UDGTABLE#
 $C5EC DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D25C,attr=$42)
                        ; } UDGTABLE#
 $C5ED DEFB $C0,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C5EF DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C5F0 DEFW $D3E4       ; }
 $C5F2 DEFB $FE,$44     ; Attribute: #COLOUR(#PC+$01)
 $C5F4 DEFB $06         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D414,attr=$44)
                        ; } UDGTABLE#
 $C5F5 DEFB $CE,$00     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C5F7 DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D41C,attr=$44)
                        ; } UDGTABLE#
 $C5F8 DEFB $FF         ; Terminator.

; Graphic ID #N$44
@label=graphic_44
b$C5F9 DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C5FA DEFW $D204    ; }
 $C5FC DEFB $FE,$43  ; Attribute: #COLOUR(#PC+$01)
 $C5FE DEFB $0C      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D264,attr=$43) }
                     ; UDGTABLE#
 $C5FF DEFB $0D      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D26C,attr=$43) }
                     ; UDGTABLE#
 $C600 DEFB $C6,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C602 DEFB $FE,$42  ; Attribute: #COLOUR(#PC+$01)
 $C604 DEFB $0A      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D254,attr=$42) }
                     ; UDGTABLE#
 $C605 DEFB $0B      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D25C,attr=$42) }
                     ; UDGTABLE#
 $C606 DEFB $C6,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C608 DEFB $FE,$44  ; Attribute: #COLOUR(#PC+$01)
 $C60A DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C60B DEFW $D3E4    ; }
 $C60D DEFB $06      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D414,attr=$44) }
                     ; UDGTABLE#
 $C60E DEFB $07      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D41C,attr=$44) }
                     ; UDGTABLE#
 $C60F DEFB $FF      ; Terminator.

; Graphic ID #N$45
@label=graphic_45
b$C610 DEFB $FB             ; {Sprite Data:
 $C611 DEFW $D27C           ; #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).}
 $C613 DEFB $FE,$45         ; Attribute: #COLOUR(#PC+$01)
 $C615 DEFB $F2,$10,$0F,$10 ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c16 Columns } { #FOR$01,$10(n,=h #Nn, | ) }
                            ; { #FOR$01,$10(n,#UDG($D2F4,attr=$45)#UDG($D2FC,attr=$45), | ) }
                            ; UDGTABLE#
 $C619 DEFB $FF             ; Terminator.

; Graphic ID #N$46
@label=graphic_46
b$C61A DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C61B DEFW $D27C       ; }
 $C61D DEFB $FE,$47     ; Attribute: #COLOUR(#PC+$01)
 $C61F DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D27C,attr=$47)
                        ; } UDGTABLE#
 $C620 DEFB $FD,$08,$01 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c8 Columns } { #FOR$01,$08(n,=h #Nn, | ) }
                        ; { #FOR$01,$08(n,#UDG($D284,attr=$47), | ) }
                        ; UDGTABLE#
 $C623 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D28C,attr=$47)
                        ; } UDGTABLE#
 $C624 DEFB $FF         ; Terminator.

; Graphic ID #N$47
@label=graphic_47
b$C625 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C626 DEFW $D27C       ; }
 $C628 DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C62A DEFB $F0,$04,$06 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$04,,4(n,{ #Nn | #UDG($D2AC,attr=$45) })
                        ; UDGTABLE#
 $C62D DEFB $C7,$00     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C62F DEFB $FE,$43     ; Attribute: #COLOUR(#PC+$01)
 $C631 DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D294,attr=$43)
                        ; } UDGTABLE#
 $C632 DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D29C,attr=$43)
                        ; } UDGTABLE#
 $C633 DEFB $05         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D2A4,attr=$43)
                        ; } UDGTABLE#
 $C634 DEFB $FF         ; Terminator.

; Graphic ID #N$48
@label=graphic_48
b$C635 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C636 DEFW $D27C       ; }
 $C638 DEFB $FE,$47     ; Attribute: #COLOUR(#PC+$01)
 $C63A DEFB $0C         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D2DC,attr=$47)
                        ; } UDGTABLE#
 $C63B DEFB $FD,$06,$0D ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c6 Columns } { #FOR$01,$06(n,=h #Nn, | ) }
                        ; { #FOR$01,$06(n,#UDG($D2E4,attr=$47), | ) }
                        ; UDGTABLE#
 $C63E DEFB $0E         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D2EC,attr=$47)
                        ; } UDGTABLE#
 $C63F DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $C641 DEFB $C0,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C643 DEFB $F0,$02,$0A ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$02,,4(n,{ #Nn | #UDG($D2CC,attr=$46) })
                        ; UDGTABLE#
 $C646 DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D2B4,attr=$46)
                        ; } UDGTABLE#
 $C647 DEFB $FD,$06,$08 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c6 Columns } { #FOR$01,$06(n,=h #Nn, | ) }
                        ; { #FOR$01,$06(n,#UDG($D2BC,attr=$46), | ) }
                        ; UDGTABLE#
 $C64A DEFB $C8,$FE     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C64C DEFB $F0,$02,$0B ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$02,,4(n,{ #Nn | #UDG($D2D4,attr=$46) })
                        ; UDGTABLE#
 $C64F DEFB $09         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D2C4,attr=$46)
                        ; } UDGTABLE#
 $C650 DEFB $FF         ; Terminator.

; Graphic ID #N$06
@label=graphic_06
b$C651 DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C652 DEFW $D35C    ; }
 $C654 DEFB $FE,$44  ; Attribute: #COLOUR(#PC+$01)
 $C656 DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D374,attr=$44) }
                     ; UDGTABLE#
 $C657 DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$44) }
                     ; UDGTABLE#
 $C658 DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D364,attr=$44) }
                     ; UDGTABLE#
 $C659 DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$44) }
                     ; UDGTABLE#
 $C65A DEFB $04      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D37C,attr=$44) }
                     ; UDGTABLE#
 $C65B DEFB $C1,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C65D DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D374,attr=$44) }
                     ; UDGTABLE#
 $C65E DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$44) }
                     ; UDGTABLE#
 $C65F DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D364,attr=$44) }
                     ; UDGTABLE#
 $C660 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$44) }
                     ; UDGTABLE#
 $C661 DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D364,attr=$44) }
                     ; UDGTABLE#
 $C662 DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D364,attr=$44) }
                     ; UDGTABLE#
 $C663 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$44) }
                     ; UDGTABLE#
 $C664 DEFB $04      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D37C,attr=$44) }
                     ; UDGTABLE#
 $C665 DEFB $BF,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C667 DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D374,attr=$44) }
                     ; UDGTABLE#
 $C668 DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$44) }
                     ; UDGTABLE#
 $C669 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$44) }
                     ; UDGTABLE#
 $C66A DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$44) }
                     ; UDGTABLE#
 $C66B DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$44) }
                     ; UDGTABLE#
 $C66C DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$44) }
                     ; UDGTABLE#
 $C66D DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D364,attr=$44) }
                     ; UDGTABLE#
 $C66E DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$44) }
                     ; UDGTABLE#
 $C66F DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$44) }
                     ; UDGTABLE#
 $C670 DEFB $BF,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C672 DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$44) }
                     ; UDGTABLE#
 $C673 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$44) }
                     ; UDGTABLE#
 $C674 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$44) }
                     ; UDGTABLE#
 $C675 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$44) }
                     ; UDGTABLE#
 $C676 DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D364,attr=$44) }
                     ; UDGTABLE#
 $C677 DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$44) }
                     ; UDGTABLE#
 $C678 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$44) }
                     ; UDGTABLE#
 $C679 DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D364,attr=$44) }
                     ; UDGTABLE#
 $C67A DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$44) }
                     ; UDGTABLE#
 $C67B DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$44) }
                     ; UDGTABLE#
 $C67C DEFB $BE,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C67E DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$44) }
                     ; UDGTABLE#
 $C67F DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D364,attr=$44) }
                     ; UDGTABLE#
 $C680 DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$44) }
                     ; UDGTABLE#
 $C681 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$44) }
                     ; UDGTABLE#
 $C682 DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D364,attr=$44) }
                     ; UDGTABLE#
 $C683 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$44) }
                     ; UDGTABLE#
 $C684 DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$44) }
                     ; UDGTABLE#
 $C685 DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D364,attr=$44) }
                     ; UDGTABLE#
 $C686 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$44) }
                     ; UDGTABLE#
 $C687 DEFB $05      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D384,attr=$44) }
                     ; UDGTABLE#
 $C688 DEFB $BD,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C68A DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D374,attr=$44) }
                     ; UDGTABLE#
 $C68B DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$44) }
                     ; UDGTABLE#
 $C68C DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$44) }
                     ; UDGTABLE#
 $C68D DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$44) }
                     ; UDGTABLE#
 $C68E DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D364,attr=$44) }
                     ; UDGTABLE#
 $C68F DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$44) }
                     ; UDGTABLE#
 $C690 DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$44) }
                     ; UDGTABLE#
 $C691 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$44) }
                     ; UDGTABLE#
 $C692 DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D364,attr=$44) }
                     ; UDGTABLE#
 $C693 DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D364,attr=$44) }
                     ; UDGTABLE#
 $C694 DEFB $04      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D37C,attr=$44) }
                     ; UDGTABLE#
 $C695 DEFB $BD,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C697 DEFB $06      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D38C,attr=$44) }
                     ; UDGTABLE#
 $C698 DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D364,attr=$44) }
                     ; UDGTABLE#
 $C699 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$44) }
                     ; UDGTABLE#
 $C69A DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D364,attr=$44) }
                     ; UDGTABLE#
 $C69B DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$44) }
                     ; UDGTABLE#
 $C69C DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$44) }
                     ; UDGTABLE#
 $C69D DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$44) }
                     ; UDGTABLE#
 $C69E DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D364,attr=$44) }
                     ; UDGTABLE#
 $C69F DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$44) }
                     ; UDGTABLE#
 $C6A0 DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$44) }
                     ; UDGTABLE#
 $C6A1 DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$44) }
                     ; UDGTABLE#
 $C6A2 DEFB $BE,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C6A4 DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$44) }
                     ; UDGTABLE#
 $C6A5 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$44) }
                     ; UDGTABLE#
 $C6A6 DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D364,attr=$44) }
                     ; UDGTABLE#
 $C6A7 DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$44) }
                     ; UDGTABLE#
 $C6A8 DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$44) }
                     ; UDGTABLE#
 $C6A9 DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D364,attr=$44) }
                     ; UDGTABLE#
 $C6AA DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$44) }
                     ; UDGTABLE#
 $C6AB DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$44) }
                     ; UDGTABLE#
 $C6AC DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D364,attr=$44) }
                     ; UDGTABLE#
 $C6AD DEFB $05      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D384,attr=$44) }
                     ; UDGTABLE#
 $C6AE DEFB $BF,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C6B0 DEFB $06      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D38C,attr=$44) }
                     ; UDGTABLE#
 $C6B1 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$44) }
                     ; UDGTABLE#
 $C6B2 DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D364,attr=$44) }
                     ; UDGTABLE#
 $C6B3 DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$44) }
                     ; UDGTABLE#
 $C6B4 DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$44) }
                     ; UDGTABLE#
 $C6B5 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$44) }
                     ; UDGTABLE#
 $C6B6 DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$44) }
                     ; UDGTABLE#
 $C6B7 DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$44) }
                     ; UDGTABLE#
 $C6B8 DEFB $C1,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C6BA DEFB $06      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D38C,attr=$44) }
                     ; UDGTABLE#
 $C6BB DEFB $05      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D384,attr=$44) }
                     ; UDGTABLE#
 $C6BC DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D364,attr=$44) }
                     ; UDGTABLE#
 $C6BD DEFB $05      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D384,attr=$44) }
                     ; UDGTABLE#
 $C6BE DEFB $06      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D38C,attr=$44) }
                     ; UDGTABLE#
 $C6BF DEFB $05      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D384,attr=$44) }
                     ; UDGTABLE#
 $C6C0 DEFB $C3,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C6C2 DEFB $FE,$42  ; Attribute: #COLOUR(#PC+$01)
 $C6C4 DEFB $09      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D3A4,attr=$42) }
                     ; UDGTABLE#
 $C6C5 DEFB $0A      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D3AC,attr=$42) }
                     ; UDGTABLE#
 $C6C6 DEFB $0B      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D3B4,attr=$42) }
                     ; UDGTABLE#
 $C6C7 DEFB $0C      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D3BC,attr=$42) }
                     ; UDGTABLE#
 $C6C8 DEFB $C5,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C6CA DEFB $07      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D394,attr=$42) }
                     ; UDGTABLE#
 $C6CB DEFB $08      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D39C,attr=$42) }
                     ; UDGTABLE#
 $C6CC DEFB $C6,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C6CE DEFB $07      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D394,attr=$42) }
                     ; UDGTABLE#
 $C6CF DEFB $08      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D39C,attr=$42) }
                     ; UDGTABLE#
 $C6D0 DEFB $C6,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C6D2 DEFB $08      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D39C,attr=$42) }
                     ; UDGTABLE#
 $C6D3 DEFB $07      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D394,attr=$42) }
                     ; UDGTABLE#
 $C6D4 DEFB $C6,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C6D6 DEFB $08      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D39C,attr=$42) }
                     ; UDGTABLE#
 $C6D7 DEFB $07      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D394,attr=$42) }
                     ; UDGTABLE#
 $C6D8 DEFB $C6,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C6DA DEFB $07      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D394,attr=$42) }
                     ; UDGTABLE#
 $C6DB DEFB $08      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D39C,attr=$42) }
                     ; UDGTABLE#
 $C6DC DEFB $C5,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C6DE DEFB $0D      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D3C4,attr=$42) }
                     ; UDGTABLE#
 $C6DF DEFB $0E      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D3CC,attr=$42) }
                     ; UDGTABLE#
 $C6E0 DEFB $0F      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D3D4,attr=$42) }
                     ; UDGTABLE#
 $C6E1 DEFB $10      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D3DC,attr=$42) }
                     ; UDGTABLE#
 $C6E2 DEFB $FF      ; Terminator.

; Graphic ID #N$07
@label=graphic_07
b$C6E3 DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C6E4 DEFW $D35C    ; }
 $C6E6 DEFB $FE,$04  ; Attribute: #COLOUR(#PC+$01)
 $C6E8 DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$4) }
                     ; UDGTABLE#
 $C6E9 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$4) }
                     ; UDGTABLE#
 $C6EA DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D364,attr=$4) }
                     ; UDGTABLE#
 $C6EB DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D364,attr=$4) }
                     ; UDGTABLE#
 $C6EC DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$4) }
                     ; UDGTABLE#
 $C6ED DEFB $C3,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C6EF DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$4) }
                     ; UDGTABLE#
 $C6F0 DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D364,attr=$4) }
                     ; UDGTABLE#
 $C6F1 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$4) }
                     ; UDGTABLE#
 $C6F2 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$4) }
                     ; UDGTABLE#
 $C6F3 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$4) }
                     ; UDGTABLE#
 $C6F4 DEFB $C3,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C6F6 DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$4) }
                     ; UDGTABLE#
 $C6F7 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$4) }
                     ; UDGTABLE#
 $C6F8 DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D364,attr=$4) }
                     ; UDGTABLE#
 $C6F9 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$4) }
                     ; UDGTABLE#
 $C6FA DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$4) }
                     ; UDGTABLE#
 $C6FB DEFB $C3,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C6FD DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$4) }
                     ; UDGTABLE#
 $C6FE DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D364,attr=$4) }
                     ; UDGTABLE#
 $C6FF DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D364,attr=$4) }
                     ; UDGTABLE#
 $C700 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$4) }
                     ; UDGTABLE#
 $C701 DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$4) }
                     ; UDGTABLE#
 $C702 DEFB $FF      ; Terminator.

; Graphic ID #N$08
@label=graphic_08
b$C703 DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C704 DEFW $D35C    ; }
 $C706 DEFB $FE,$04  ; Attribute: #COLOUR(#PC+$01)
 $C708 DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D364,attr=$4) }
                     ; UDGTABLE#
 $C709 DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$4) }
                     ; UDGTABLE#
 $C70A DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$4) }
                     ; UDGTABLE#
 $C70B DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D364,attr=$4) }
                     ; UDGTABLE#
 $C70C DEFB $C4,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C70E DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$4) }
                     ; UDGTABLE#
 $C70F DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D364,attr=$4) }
                     ; UDGTABLE#
 $C710 DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$4) }
                     ; UDGTABLE#
 $C711 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$4) }
                     ; UDGTABLE#
 $C712 DEFB $C4,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C714 DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D364,attr=$4) }
                     ; UDGTABLE#
 $C715 DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$4) }
                     ; UDGTABLE#
 $C716 DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D364,attr=$4) }
                     ; UDGTABLE#
 $C717 DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D364,attr=$4) }
                     ; UDGTABLE#
 $C718 DEFB $C4,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C71A DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D35C,attr=$4) }
                     ; UDGTABLE#
 $C71B DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$4) }
                     ; UDGTABLE#
 $C71C DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D36C,attr=$4) }
                     ; UDGTABLE#
 $C71D DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D364,attr=$4) }
                     ; UDGTABLE#
 $C71E DEFB $FF      ; Terminator.

; Graphic ID #N$09
@label=graphic_09
b$C71F DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C720 DEFW $D334       ; }
 $C722 DEFB $FE,$43     ; Attribute: #COLOUR(#PC+$01)
 $C724 DEFB $FD,$05,$00 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c5 Columns } { #FOR$01,$05(n,=h #Nn, | ) }
                        ; { #FOR$01,$05(n,#UDG($D334,attr=$43), | ) }
                        ; UDGTABLE#
 $C727 DEFB $C3,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C729 DEFB $FD,$05,$02 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c5 Columns } { #FOR$01,$05(n,=h #Nn, | ) }
                        ; { #FOR$01,$05(n,#UDG($D344,attr=$43), | ) }
                        ; UDGTABLE#
 $C72C DEFB $C3,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C72E DEFB $FD,$05,$01 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c5 Columns } { #FOR$01,$05(n,=h #Nn, | ) }
                        ; { #FOR$01,$05(n,#UDG($D33C,attr=$43), | ) }
                        ; UDGTABLE#
 $C731 DEFB $FF         ; Terminator.

; Graphic ID #N$0A
@label=graphic_0a
b$C732 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C733 DEFW $D334       ; }
 $C735 DEFB $FE,$43     ; Attribute: #COLOUR(#PC+$01)
 $C737 DEFB $FD,$04,$00 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                        ; { #FOR$01,$04(n,#UDG($D334,attr=$43), | ) }
                        ; UDGTABLE#
 $C73A DEFB $C4,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C73C DEFB $FD,$04,$02 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                        ; { #FOR$01,$04(n,#UDG($D344,attr=$43), | ) }
                        ; UDGTABLE#
 $C73F DEFB $C4,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C741 DEFB $FD,$04,$01 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                        ; { #FOR$01,$04(n,#UDG($D33C,attr=$43), | ) }
                        ; UDGTABLE#
 $C744 DEFB $FF         ; Terminator.

; Graphic ID #N$0B
@label=graphic_0b
b$C745 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C746 DEFW $D334       ; }
 $C748 DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C74A DEFB $FD,$05,$04 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c5 Columns } { #FOR$01,$05(n,=h #Nn, | ) }
                        ; { #FOR$01,$05(n,#UDG($D354,attr=$45), | ) }
                        ; UDGTABLE#
 $C74D DEFB $C3,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C74F DEFB $FD,$05,$03 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c5 Columns } { #FOR$01,$05(n,=h #Nn, | ) }
                        ; { #FOR$01,$05(n,#UDG($D34C,attr=$45), | ) }
                        ; UDGTABLE#
 $C752 DEFB $C3,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C754 DEFB $FD,$05,$03 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c5 Columns } { #FOR$01,$05(n,=h #Nn, | ) }
                        ; { #FOR$01,$05(n,#UDG($D34C,attr=$45), | ) }
                        ; UDGTABLE#
 $C757 DEFB $C3,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C759 DEFB $FD,$05,$03 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c5 Columns } { #FOR$01,$05(n,=h #Nn, | ) }
                        ; { #FOR$01,$05(n,#UDG($D34C,attr=$45), | ) }
                        ; UDGTABLE#
 $C75C DEFB $C3,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C75E DEFB $FD,$05,$03 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c5 Columns } { #FOR$01,$05(n,=h #Nn, | ) }
                        ; { #FOR$01,$05(n,#UDG($D34C,attr=$45), | ) }
                        ; UDGTABLE#
 $C761 DEFB $FF         ; Terminator.

; Graphic ID #N$23
@label=graphic_23
b$C762 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C763 DEFW $D334       ; }
 $C765 DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C767 DEFB $FD,$04,$04 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                        ; { #FOR$01,$04(n,#UDG($D354,attr=$45), | ) }
                        ; UDGTABLE#
 $C76A DEFB $C4,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C76C DEFB $FD,$04,$03 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                        ; { #FOR$01,$04(n,#UDG($D34C,attr=$45), | ) }
                        ; UDGTABLE#
 $C76F DEFB $C4,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C771 DEFB $FD,$04,$03 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                        ; { #FOR$01,$04(n,#UDG($D34C,attr=$45), | ) }
                        ; UDGTABLE#
 $C774 DEFB $C4,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C776 DEFB $FD,$04,$03 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                        ; { #FOR$01,$04(n,#UDG($D34C,attr=$45), | ) }
                        ; UDGTABLE#
 $C779 DEFB $C4,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C77B DEFB $FD,$04,$03 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                        ; { #FOR$01,$04(n,#UDG($D34C,attr=$45), | ) }
                        ; UDGTABLE#
 $C77E DEFB $FF         ; Terminator.

; Graphic ID #N$0C
@label=graphic_0c
b$C77F DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C780 DEFW $D514       ; }
 $C782 DEFB $FE,$72     ; Attribute: #COLOUR(#PC+$01)
 $C784 DEFB $FD,$10,$00 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c16 Columns } { #FOR$01,$10(n,=h #Nn, | ) }
                        ; { #FOR$01,$10(n,#UDG($D514,attr=$72), | ) }
                        ; UDGTABLE#
 $C787 DEFB $B8,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C789 DEFB $FD,$10,$00 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c16 Columns } { #FOR$01,$10(n,=h #Nn, | ) }
                        ; { #FOR$01,$10(n,#UDG($D514,attr=$72), | ) }
                        ; UDGTABLE#
 $C78C DEFB $B8,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C78E DEFB $FD,$10,$00 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c16 Columns } { #FOR$01,$10(n,=h #Nn, | ) }
                        ; { #FOR$01,$10(n,#UDG($D514,attr=$72), | ) }
                        ; UDGTABLE#
 $C791 DEFB $B8,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C793 DEFB $FD,$10,$00 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c16 Columns } { #FOR$01,$10(n,=h #Nn, | ) }
                        ; { #FOR$01,$10(n,#UDG($D514,attr=$72), | ) }
                        ; UDGTABLE#
 $C796 DEFB $FF         ; Terminator.

; Graphic ID #N$2C
@label=graphic_2c
b$C797 DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C798 DEFW $D5DC    ; }
 $C79A DEFB $FE,$46  ; Attribute: #COLOUR(#PC+$01)
 $C79C DEFB $F3      ; {Switch #REGhl to
 $C79D DEFW $C784    ; #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).}

; Graphic ID #N$29
@label=graphic_29
b$C79F DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C7A0 DEFW $D514       ; }
 $C7A2 DEFB $FE,$72     ; Attribute: #COLOUR(#PC+$01)
 $C7A4 DEFB $FD,$08,$00 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c8 Columns } { #FOR$01,$08(n,=h #Nn, | ) }
                        ; { #FOR$01,$08(n,#UDG($D514,attr=$72), | ) }
                        ; UDGTABLE#
 $C7A7 DEFB $C0,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C7A9 DEFB $FD,$08,$00 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c8 Columns } { #FOR$01,$08(n,=h #Nn, | ) }
                        ; { #FOR$01,$08(n,#UDG($D514,attr=$72), | ) }
                        ; UDGTABLE#
 $C7AC DEFB $C0,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C7AE DEFB $FD,$08,$00 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c8 Columns } { #FOR$01,$08(n,=h #Nn, | ) }
                        ; { #FOR$01,$08(n,#UDG($D514,attr=$72), | ) }
                        ; UDGTABLE#
 $C7B1 DEFB $C0,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C7B3 DEFB $FD,$08,$00 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c8 Columns } { #FOR$01,$08(n,=h #Nn, | ) }
                        ; { #FOR$01,$08(n,#UDG($D514,attr=$72), | ) }
                        ; UDGTABLE#
 $C7B6 DEFB $FF         ; Terminator.

; Graphic ID #N$1C
@label=graphic_1c
b$C7B7 DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C7B8 DEFW $D514    ; }
 $C7BA DEFB $FE,$56  ; Attribute: #COLOUR(#PC+$01)
 $C7BC DEFB $F3      ; {Switch #REGhl to
 $C7BD DEFW $C784    ; #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).}

; Graphic ID #N$0D
@label=graphic_0d
b$C7BF DEFB $FB             ; {Sprite Data:
 $C7C0 DEFW $D514           ; #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).}
 $C7C2 DEFB $FE,$02         ; Attribute: #COLOUR(#PC+$01)
 $C7C4 DEFB $FD,$10,$03     ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c16 Columns } { #FOR$01,$10(n,=h #Nn, | ) }
                            ; { #FOR$01,$10(n,#UDG($D52C,attr=$2), | ) }
                            ; UDGTABLE#
 $C7C7 DEFB $B8,$01         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $C7C9 DEFB $F2,$08,$01,$02 ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c8 Columns } { #FOR$01,$08(n,=h #Nn, | ) }
                            ; { #FOR$01,$08(n,#UDG($D51C,attr=$2)#UDG($D524,attr=$2), | ) }
                            ; UDGTABLE#
 $C7CD DEFB $B8,$01         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $C7CF DEFB $F2,$08,$01,$02 ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c8 Columns } { #FOR$01,$08(n,=h #Nn, | ) }
                            ; { #FOR$01,$08(n,#UDG($D51C,attr=$2)#UDG($D524,attr=$2), | ) }
                            ; UDGTABLE#
 $C7D3 DEFB $B8,$01         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $C7D5 DEFB $F2,$08,$01,$02 ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c8 Columns } { #FOR$01,$08(n,=h #Nn, | ) }
                            ; { #FOR$01,$08(n,#UDG($D51C,attr=$2)#UDG($D524,attr=$2), | ) }
                            ; UDGTABLE#
 $C7D9 DEFB $B8,$01         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $C7DB DEFB $F2,$08,$01,$02 ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c8 Columns } { #FOR$01,$08(n,=h #Nn, | ) }
                            ; { #FOR$01,$08(n,#UDG($D51C,attr=$2)#UDG($D524,attr=$2), | ) }
                            ; UDGTABLE#
 $C7DF DEFB $FF             ; Terminator.

; Graphic ID #N$2A
@label=graphic_2a
b$C7E0 DEFB $FB             ; {Sprite Data:
 $C7E1 DEFW $D514           ; #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).}
 $C7E3 DEFB $FE,$02         ; Attribute: #COLOUR(#PC+$01)
 $C7E5 DEFB $FD,$08,$03     ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c8 Columns } { #FOR$01,$08(n,=h #Nn, | ) }
                            ; { #FOR$01,$08(n,#UDG($D52C,attr=$2), | ) }
                            ; UDGTABLE#
 $C7E8 DEFB $C0,$01         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $C7EA DEFB $F2,$04,$01,$02 ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                            ; { #FOR$01,$04(n,#UDG($D51C,attr=$2)#UDG($D524,attr=$2), | ) }
                            ; UDGTABLE#
 $C7EE DEFB $C0,$01         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $C7F0 DEFB $F2,$04,$01,$02 ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                            ; { #FOR$01,$04(n,#UDG($D51C,attr=$2)#UDG($D524,attr=$2), | ) }
                            ; UDGTABLE#
 $C7F4 DEFB $C0,$01         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $C7F6 DEFB $F2,$04,$01,$02 ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                            ; { #FOR$01,$04(n,#UDG($D51C,attr=$2)#UDG($D524,attr=$2), | ) }
                            ; UDGTABLE#
 $C7FA DEFB $C0,$01         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $C7FC DEFB $F2,$04,$01,$02 ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                            ; { #FOR$01,$04(n,#UDG($D51C,attr=$2)#UDG($D524,attr=$2), | ) }
                            ; UDGTABLE#
 $C800 DEFB $FF             ; Terminator.

; Graphic ID #N$25
@label=graphic_25
b$C801 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C802 DEFW $D5FC       ; }
 $C804 DEFB $FE,$47     ; Attribute: #COLOUR(#PC+$01)
 $C806 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D5FC,attr=$47)
                        ; } UDGTABLE#
 $C807 DEFB $FD,$04,$01 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                        ; { #FOR$01,$04(n,#UDG($D604,attr=$47), | ) }
                        ; UDGTABLE#
 $C80A DEFB $C3,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C80C DEFB $F0,$04,$07 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$04,,4(n,{ #Nn | #UDG($D634,attr=$47) })
                        ; UDGTABLE#
 $C80F DEFB $10         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D67C,attr=$47)
                        ; } UDGTABLE#
 $C810 DEFB $FD,$04,$11 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                        ; { #FOR$01,$04(n,#UDG($D684,attr=$47), | ) }
                        ; UDGTABLE#
 $C813 DEFB $C4,$FC     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C815 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C816 DEFW $DFDC       ; }
 $C818 DEFB $FD,$04,$20 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                        ; { #FOR$01,$04(n,#UDG($E0DC,attr=$47), | ) }
                        ; UDGTABLE#
 $C81B DEFB $C4,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C81D DEFB $FD,$04,$20 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                        ; { #FOR$01,$04(n,#UDG($E0DC,attr=$47), | ) }
                        ; UDGTABLE#
 $C820 DEFB $C4,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C822 DEFB $FD,$04,$20 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                        ; { #FOR$01,$04(n,#UDG($E0DC,attr=$47), | ) }
                        ; UDGTABLE#
 $C825 DEFB $C4,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C827 DEFB $FD,$04,$20 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                        ; { #FOR$01,$04(n,#UDG($E0DC,attr=$47), | ) }
                        ; UDGTABLE#
 $C82A DEFB $FF         ; Terminator.

; Graphic ID #N$26
@label=graphic_26
b$C82B DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C82C DEFW $D5FC       ; }
 $C82E DEFB $FE,$47     ; Attribute: #COLOUR(#PC+$01)
 $C830 DEFB $FD,$04,$01 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                        ; { #FOR$01,$04(n,#UDG($D604,attr=$47), | ) }
                        ; UDGTABLE#
 $C833 DEFB $F0,$01,$02 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($D60C,attr=$47) })
                        ; UDGTABLE#
 $C836 DEFB $F0,$04,$08 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$04,,4(n,{ #Nn | #UDG($D63C,attr=$47) })
                        ; UDGTABLE#
 $C839 DEFB $C4,$00     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C83B DEFB $FD,$04,$11 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                        ; { #FOR$01,$04(n,#UDG($D684,attr=$47), | ) }
                        ; UDGTABLE#
 $C83E DEFB $12         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D68C,attr=$47)
                        ; } UDGTABLE#
 $C83F DEFB $C3,$FC     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C841 DEFB $F3         ; {Switch #REGhl to
 $C842 DEFW $C815       ; #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).}

; Graphic ID #N$0E
@label=graphic_0e
b$C844 DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C845 DEFW $D5FC    ; }
 $C847 DEFB $FE,$47  ; Attribute: #COLOUR(#PC+$01)
 $C849 DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D5FC,attr=$47) }
                     ; UDGTABLE#
 $C84A DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D604,attr=$47) }
                     ; UDGTABLE#
 $C84B DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D60C,attr=$47) }
                     ; UDGTABLE#
 $C84C DEFB $C5,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C84E DEFB $07      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D634,attr=$47) }
                     ; UDGTABLE#
 $C84F DEFB $06      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D62C,attr=$47) }
                     ; UDGTABLE#
 $C850 DEFB $08      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D63C,attr=$47) }
                     ; UDGTABLE#
 $C851 DEFB $C5,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C853 DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D614,attr=$47) }
                     ; UDGTABLE#
 $C854 DEFB $04      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D61C,attr=$47) }
                     ; UDGTABLE#
 $C855 DEFB $05      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D624,attr=$47) }
                     ; UDGTABLE#
 $C856 DEFB $FF      ; Terminator.

; Graphic ID #N$3A
@label=graphic_3a
b$C857 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C858 DEFW $DFDC       ; }
 $C85A DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $C85C DEFB $F0,$12,$20 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$12,,4(n,{ #Nn | #UDG($E0DC,attr=$46) })
                        ; UDGTABLE#
 $C85F DEFB $FF         ; Terminator.

; Graphic ID #N$13
@label=graphic_13
b$C860 DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C861 DEFW $D5FC    ; }
 $C863 DEFB $FE,$47  ; Attribute: #COLOUR(#PC+$01)
 $C865 DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D5FC,attr=$47) }
                     ; UDGTABLE#
 $C866 DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D604,attr=$47) }
                     ; UDGTABLE#
 $C867 DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D604,attr=$47) }
                     ; UDGTABLE#
 $C868 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D60C,attr=$47) }
                     ; UDGTABLE#
 $C869 DEFB $C4,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C86B DEFB $07      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D634,attr=$47) }
                     ; UDGTABLE#
 $C86C DEFB $06      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D62C,attr=$47) }
                     ; UDGTABLE#
 $C86D DEFB $06      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D62C,attr=$47) }
                     ; UDGTABLE#
 $C86E DEFB $08      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D63C,attr=$47) }
                     ; UDGTABLE#
 $C86F DEFB $C4,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C871 DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D614,attr=$47) }
                     ; UDGTABLE#
 $C872 DEFB $04      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D61C,attr=$47) }
                     ; UDGTABLE#
 $C873 DEFB $04      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D61C,attr=$47) }
                     ; UDGTABLE#
 $C874 DEFB $05      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D624,attr=$47) }
                     ; UDGTABLE#
 $C875 DEFB $FF      ; Terminator.

; Graphic ID #N$19
@label=graphic_19
b$C876 DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C877 DEFW $D334    ; }
 $C879 DEFB $FE,$45  ; Attribute: #COLOUR(#PC+$01)
 $C87B DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D34C,attr=$45) }
                     ; UDGTABLE#
 $C87C DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D34C,attr=$45) }
                     ; UDGTABLE#
 $C87D DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D34C,attr=$45) }
                     ; UDGTABLE#
 $C87E DEFB $C5,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C880 DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D34C,attr=$45) }
                     ; UDGTABLE#
 $C881 DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D34C,attr=$45) }
                     ; UDGTABLE#
 $C882 DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D34C,attr=$45) }
                     ; UDGTABLE#
 $C883 DEFB $C5,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C885 DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D34C,attr=$45) }
                     ; UDGTABLE#
 $C886 DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D34C,attr=$45) }
                     ; UDGTABLE#
 $C887 DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D34C,attr=$45) }
                     ; UDGTABLE#
 $C888 DEFB $FF      ; Terminator.

; Graphic ID #N$27
@label=graphic_27
b$C889 DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C88A DEFW $D5FC    ; }
 $C88C DEFB $FE,$47  ; Attribute: #COLOUR(#PC+$01)
 $C88E DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D5FC,attr=$47) }
                     ; UDGTABLE#
 $C88F DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D604,attr=$47) }
                     ; UDGTABLE#
 $C890 DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D604,attr=$47) }
                     ; UDGTABLE#
 $C891 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D60C,attr=$47) }
                     ; UDGTABLE#
 $C892 DEFB $C4,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C894 DEFB $07      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D634,attr=$47) }
                     ; UDGTABLE#
 $C895 DEFB $06      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D62C,attr=$47) }
                     ; UDGTABLE#
 $C896 DEFB $06      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D62C,attr=$47) }
                     ; UDGTABLE#
 $C897 DEFB $08      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D63C,attr=$47) }
                     ; UDGTABLE#
 $C898 DEFB $C4,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C89A DEFB $10      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D67C,attr=$47) }
                     ; UDGTABLE#
 $C89B DEFB $11      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D684,attr=$47) }
                     ; UDGTABLE#
 $C89C DEFB $11      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D684,attr=$47) }
                     ; UDGTABLE#
 $C89D DEFB $12      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D68C,attr=$47) }
                     ; UDGTABLE#
 $C89E DEFB $FF      ; Terminator.

; Graphic ID #N$28
@label=graphic_28
b$C89F DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C8A0 DEFW $D514    ; }
 $C8A2 DEFB $FE,$47  ; Attribute: #COLOUR(#PC+$01)
 $C8A4 DEFB $12      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D5A4,attr=$47) }
                     ; UDGTABLE#
 $C8A5 DEFB $13      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D5AC,attr=$47) }
                     ; UDGTABLE#
 $C8A6 DEFB $C6,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C8A8 DEFB $16      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D5C4,attr=$47) }
                     ; UDGTABLE#
 $C8A9 DEFB $15      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D5BC,attr=$47) }
                     ; UDGTABLE#
 $C8AA DEFB $C6,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C8AC DEFB $14      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D5B4,attr=$47) }
                     ; UDGTABLE#
 $C8AD DEFB $15      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D5BC,attr=$47) }
                     ; UDGTABLE#
 $C8AE DEFB $C6,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C8B0 DEFB $17      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D5CC,attr=$47) }
                     ; UDGTABLE#
 $C8B1 DEFB $18      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D5D4,attr=$47) }
                     ; UDGTABLE#
 $C8B2 DEFB $FF      ; Terminator.

; Graphic ID #N$1D
@label=graphic_1d
b$C8B3 DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C8B4 DEFW $D5FC    ; }
 $C8B6 DEFB $FE,$47  ; Attribute: #COLOUR(#PC+$01)
 $C8B8 DEFB $0B      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D654,attr=$47) }
                     ; UDGTABLE#
 $C8B9 DEFB $0D      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D664,attr=$47) }
                     ; UDGTABLE#
 $C8BA DEFB $C6,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C8BC DEFB $0E      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D66C,attr=$47) }
                     ; UDGTABLE#
 $C8BD DEFB $0F      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D674,attr=$47) }
                     ; UDGTABLE#
 $C8BE DEFB $C6,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C8C0 DEFB $0E      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D66C,attr=$47) }
                     ; UDGTABLE#
 $C8C1 DEFB $0F      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D674,attr=$47) }
                     ; UDGTABLE#
 $C8C2 DEFB $FF      ; Terminator.

; Graphic ID #N$1E
@label=graphic_1e
b$C8C3 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C8C4 DEFW $D5FC       ; }
 $C8C6 DEFB $FE,$47     ; Attribute: #COLOUR(#PC+$01)
 $C8C8 DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D654,attr=$47)
                        ; } UDGTABLE#
 $C8C9 DEFB $0C         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D65C,attr=$47)
                        ; } UDGTABLE#
 $C8CA DEFB $0C         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D65C,attr=$47)
                        ; } UDGTABLE#
 $C8CB DEFB $0D         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D664,attr=$47)
                        ; } UDGTABLE#
 $C8CC DEFB $C4,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C8CE DEFB $F0,$04,$0E ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$04,,4(n,{ #Nn | #UDG($D66C,attr=$47) })
                        ; UDGTABLE#
 $C8D1 DEFB $CB,$FC     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C8D3 DEFB $F0,$04,$0F ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$04,,4(n,{ #Nn | #UDG($D674,attr=$47) })
                        ; UDGTABLE#
 $C8D6 DEFB $C6,$FC     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C8D8 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C8D9 DEFW $DFDC       ; }
 $C8DB DEFB $F0,$04,$20 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$04,,4(n,{ #Nn | #UDG($E0DC,attr=$47) })
                        ; UDGTABLE#
 $C8DE DEFB $C9,$FC     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C8E0 DEFB $F0,$04,$20 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$04,,4(n,{ #Nn | #UDG($E0DC,attr=$47) })
                        ; UDGTABLE#
 $C8E3 DEFB $FF         ; Terminator.

; Graphic ID #N$1A
@label=graphic_1a
b$C8E4 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C8E5 DEFW $D334       ; }
 $C8E7 DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $C8E9 DEFB $FD,$04,$03 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                        ; { #FOR$01,$04(n,#UDG($D34C,attr=$45), | ) }
                        ; UDGTABLE#
 $C8EC DEFB $C4,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C8EE DEFB $FD,$04,$03 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                        ; { #FOR$01,$04(n,#UDG($D34C,attr=$45), | ) }
                        ; UDGTABLE#
 $C8F1 DEFB $C4,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C8F3 DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D34C,attr=$45)
                        ; } UDGTABLE#
 $C8F4 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C8F5 DEFW $D5FC       ; }
 $C8F7 DEFB $0A         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D64C,attr=$45)
                        ; } UDGTABLE#
 $C8F8 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C8F9 DEFW $D334       ; }
 $C8FB DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D34C,attr=$45)
                        ; } UDGTABLE#
 $C8FC DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D34C,attr=$45)
                        ; } UDGTABLE#
 $C8FD DEFB $C4,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C8FF DEFB $FD,$04,$03 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                        ; { #FOR$01,$04(n,#UDG($D34C,attr=$45), | ) }
                        ; UDGTABLE#
 $C902 DEFB $C4,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C904 DEFB $FD,$04,$03 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                        ; { #FOR$01,$04(n,#UDG($D34C,attr=$45), | ) }
                        ; UDGTABLE#
 $C907 DEFB $FF         ; Terminator.

; Graphic ID #N$14
@label=graphic_14
b$C908 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C909 DEFW $D5FC       ; }
 $C90B DEFB $FE,$47     ; Attribute: #COLOUR(#PC+$01)
 $C90D DEFB $09         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D644,attr=$47)
                        ; } UDGTABLE#
 $C90E DEFB $F0,$04,$09 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$04,,4(n,{ #Nn | #UDG($D644,attr=$47) })
                        ; UDGTABLE#
 $C911 DEFB $C7,$FD     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C913 DEFB $F0,$01,$0A ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($D64C,attr=$47) })
                        ; UDGTABLE#
 $C916 DEFB $F0,$02,$09 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$02,,4(n,{ #Nn | #UDG($D644,attr=$47) })
                        ; UDGTABLE#
 $C919 DEFB $FF         ; Terminator.

; Graphic ID #N$22
@label=graphic_22
b$C91A DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C91B DEFW $D5FC       ; }
 $C91D DEFB $FE,$47     ; Attribute: #COLOUR(#PC+$01)
 $C91F DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D5FC,attr=$47)
                        ; } UDGTABLE#
 $C920 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D604,attr=$47)
                        ; } UDGTABLE#
 $C921 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D604,attr=$47)
                        ; } UDGTABLE#
 $C922 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D60C,attr=$47)
                        ; } UDGTABLE#
 $C923 DEFB $C4,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C925 DEFB $F0,$04,$07 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$04,,4(n,{ #Nn | #UDG($D634,attr=$47) })
                        ; UDGTABLE#
 $C928 DEFB $CB,$FC     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C92A DEFB $F0,$04,$08 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$04,,4(n,{ #Nn | #UDG($D63C,attr=$47) })
                        ; UDGTABLE#
 $C92D DEFB $FF         ; Terminator.

; Graphic ID #N$3C
@label=graphic_3c
b$C92E DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C92F DEFW $D5FC       ; }
 $C931 DEFB $FE,$47     ; Attribute: #COLOUR(#PC+$01)
 $C933 DEFB $13         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D694,attr=$47)
                        ; } UDGTABLE#
 $C934 DEFB $FD,$12,$14 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c18 Columns } { #FOR$01,$12(n,=h #Nn, | ) }
                        ; { #FOR$01,$12(n,#UDG($D69C,attr=$47), | ) }
                        ; UDGTABLE#
 $C937 DEFB $F0,$01,$15 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($D6A4,attr=$47) })
                        ; UDGTABLE#
 $C93A DEFB $F0,$05,$17 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$05,,4(n,{ #Nn | #UDG($D6B4,attr=$47) })
                        ; UDGTABLE#
 $C93D DEFB $B5,$FB     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C93F DEFB $F0,$05,$16 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$05,,4(n,{ #Nn | #UDG($D6AC,attr=$47) })
                        ; UDGTABLE#
 $C942 DEFB $FF         ; Terminator.

; Graphic ID #N$24
@label=graphic_24
b$C943 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C944 DEFW $D5FC       ; }
 $C946 DEFB $FE,$47     ; Attribute: #COLOUR(#PC+$01)
 $C948 DEFB $13         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D694,attr=$47)
                        ; } UDGTABLE#
 $C949 DEFB $14         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D69C,attr=$47)
                        ; } UDGTABLE#
 $C94A DEFB $14         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D69C,attr=$47)
                        ; } UDGTABLE#
 $C94B DEFB $15         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6A4,attr=$47)
                        ; } UDGTABLE#
 $C94C DEFB $C4,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C94E DEFB $F0,$04,$16 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$04,,4(n,{ #Nn | #UDG($D6AC,attr=$47) })
                        ; UDGTABLE#
 $C951 DEFB $CB,$FC     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $C953 DEFB $F0,$04,$17 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$04,,4(n,{ #Nn | #UDG($D6B4,attr=$47) })
                        ; UDGTABLE#
 $C956 DEFB $FF         ; Terminator.

; Graphic ID #N$6F
@label=graphic_6f
b$C957 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C958 DEFW $DFEC       ; }
 $C95A DEFB $FE,$44     ; Attribute: #COLOUR(#PC+$01)
 $C95C DEFB $FD,$1E,$09 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c30 Columns } { #FOR$01,$1E(n,=h #Nn, | ) }
                        ; { #FOR$01,$1E(n,#UDG($E034,attr=$44), | ) }
                        ; UDGTABLE#
 $C95F DEFB $FF         ; Terminator.

; Graphic ID #N$6D
@label=graphic_6d
b$C960 DEFB $FB             ; {Sprite Data:
 $C961 DEFW $D514           ; #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).}
 $C963 DEFB $FE,$46         ; Attribute: #COLOUR(#PC+$01)
 $C965 DEFB $F2,$02,$09,$0A ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c2 Columns } { #FOR$01,$02(n,=h #Nn, | ) }
                            ; { #FOR$01,$02(n,#UDG($D55C,attr=$46)#UDG($D564,attr=$46), | ) }
                            ; UDGTABLE#
 $C969 DEFB $C3,$01         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $C96B DEFB $F2,$02,$09,$0A ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c2 Columns } { #FOR$01,$02(n,=h #Nn, | ) }
                            ; { #FOR$01,$02(n,#UDG($D55C,attr=$46)#UDG($D564,attr=$46), | ) }
                            ; UDGTABLE#
 $C96F DEFB $C5,$01         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $C971 DEFB $09             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($D55C,attr=$46) } UDGTABLE#
 $C972 DEFB $0A             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($D564,attr=$46) } UDGTABLE#
 $C973 DEFB $C5,$00         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $C975 DEFB $FE,$44         ; Attribute: #COLOUR(#PC+$01)
 $C977 DEFB $FB             ; {Sprite Data:
 $C978 DEFW $DFEC           ; #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).}
 $C97A DEFB $08             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($E02C,attr=$44) } UDGTABLE#
 $C97B DEFB $C8,$01         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $C97D DEFB $08             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($E02C,attr=$44) } UDGTABLE#
 $C97E DEFB $08             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($E02C,attr=$44) } UDGTABLE#
 $C97F DEFB $C8,$FF         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $C981 DEFB $08             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($E02C,attr=$44) } UDGTABLE#
 $C982 DEFB $C8,$FF         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $C984 DEFB $08             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($E02C,attr=$44) } UDGTABLE#
 $C985 DEFB $FF             ; Terminator.

; Graphic ID #N$15
@label=graphic_15
b$C986 DEFB $FB             ; {Sprite Data:
 $C987 DEFW $D514           ; #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).}
 $C989 DEFB $FE,$46         ; Attribute: #COLOUR(#PC+$01)
 $C98B DEFB $F2,$04,$09,$0A ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                            ; { #FOR$01,$04(n,#UDG($D55C,attr=$46)#UDG($D564,attr=$46), | ) }
                            ; UDGTABLE#
 $C98F DEFB $C0,$01         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $C991 DEFB $F2,$04,$0A,$09 ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                            ; { #FOR$01,$04(n,#UDG($D564,attr=$46)#UDG($D55C,attr=$46), | ) }
                            ; UDGTABLE#
 $C995 DEFB $C0,$01         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $C997 DEFB $F2,$04,$09,$0A ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                            ; { #FOR$01,$04(n,#UDG($D55C,attr=$46)#UDG($D564,attr=$46), | ) }
                            ; UDGTABLE#
 $C99B DEFB $C0,$01         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $C99D DEFB $F2,$04,$0A,$09 ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c4 Columns } { #FOR$01,$04(n,=h #Nn, | ) }
                            ; { #FOR$01,$04(n,#UDG($D564,attr=$46)#UDG($D55C,attr=$46), | ) }
                            ; UDGTABLE#
 $C9A1 DEFB $FF             ; Terminator.

; Graphic ID #N$16
@label=graphic_16
b$C9A2 DEFB $FB             ; {Sprite Data:
 $C9A3 DEFW $D514           ; #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).}
 $C9A5 DEFB $FE,$46         ; Attribute: #COLOUR(#PC+$01)
 $C9A7 DEFB $F2,$08,$09,$0A ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c8 Columns } { #FOR$01,$08(n,=h #Nn, | ) }
                            ; { #FOR$01,$08(n,#UDG($D55C,attr=$46)#UDG($D564,attr=$46), | ) }
                            ; UDGTABLE#
 $C9AB DEFB $B8,$01         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $C9AD DEFB $F2,$08,$0A,$09 ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c8 Columns } { #FOR$01,$08(n,=h #Nn, | ) }
                            ; { #FOR$01,$08(n,#UDG($D564,attr=$46)#UDG($D55C,attr=$46), | ) }
                            ; UDGTABLE#
 $C9B1 DEFB $B8,$01         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $C9B3 DEFB $F2,$08,$09,$0A ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c8 Columns } { #FOR$01,$08(n,=h #Nn, | ) }
                            ; { #FOR$01,$08(n,#UDG($D55C,attr=$46)#UDG($D564,attr=$46), | ) }
                            ; UDGTABLE#
 $C9B7 DEFB $B8,$01         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $C9B9 DEFB $F2,$08,$0A,$09 ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c8 Columns } { #FOR$01,$08(n,=h #Nn, | ) }
                            ; { #FOR$01,$08(n,#UDG($D564,attr=$46)#UDG($D55C,attr=$46), | ) }
                            ; UDGTABLE#
 $C9BD DEFB $FF             ; Terminator.

; Graphic ID #N$0F
@label=graphic_0f
b$C9BE DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C9BF DEFW $D514    ; }
 $C9C1 DEFB $FE,$43  ; Attribute: #COLOUR(#PC+$01)
 $C9C3 DEFB $04      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D534,attr=$43) }
                     ; UDGTABLE#
 $C9C4 DEFB $05      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D53C,attr=$43) }
                     ; UDGTABLE#
 $C9C5 DEFB $05      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D53C,attr=$43) }
                     ; UDGTABLE#
 $C9C6 DEFB $05      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D53C,attr=$43) }
                     ; UDGTABLE#
 $C9C7 DEFB $04      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D534,attr=$43) }
                     ; UDGTABLE#
 $C9C8 DEFB $05      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D53C,attr=$43) }
                     ; UDGTABLE#
 $C9C9 DEFB $05      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D53C,attr=$43) }
                     ; UDGTABLE#
 $C9CA DEFB $05      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D53C,attr=$43) }
                     ; UDGTABLE#
 $C9CB DEFB $04      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D534,attr=$43) }
                     ; UDGTABLE#
 $C9CC DEFB $05      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D53C,attr=$43) }
                     ; UDGTABLE#
 $C9CD DEFB $05      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D53C,attr=$43) }
                     ; UDGTABLE#
 $C9CE DEFB $05      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D53C,attr=$43) }
                     ; UDGTABLE#
 $C9CF DEFB $04      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D534,attr=$43) }
                     ; UDGTABLE#
 $C9D0 DEFB $05      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D53C,attr=$43) }
                     ; UDGTABLE#
 $C9D1 DEFB $05      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D53C,attr=$43) }
                     ; UDGTABLE#
 $C9D2 DEFB $05      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D53C,attr=$43) }
                     ; UDGTABLE#
 $C9D3 DEFB $FF      ; Terminator.

; Graphic ID #N$1B
@label=graphic_1b
b$C9D4 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C9D5 DEFW $D514       ; }
 $C9D7 DEFB $FE,$44     ; Attribute: #COLOUR(#PC+$01)
 $C9D9 DEFB $FD,$10,$11 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c16 Columns } { #FOR$01,$10(n,=h #Nn, | ) }
                        ; { #FOR$01,$10(n,#UDG($D59C,attr=$44), | ) }
                        ; UDGTABLE#
 $C9DC DEFB $FF         ; Terminator.

; Graphic ID #N$10
@label=graphic_10
b$C9DD DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C9DE DEFW $D514       ; }
 $C9E0 DEFB $FE,$43     ; Attribute: #COLOUR(#PC+$01)
 $C9E2 DEFB $F0,$01,$06 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($D544,attr=$43) })
                        ; UDGTABLE#
 $C9E5 DEFB $F0,$02,$07 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$02,,4(n,{ #Nn | #UDG($D54C,attr=$43) })
                        ; UDGTABLE#
 $C9E8 DEFB $F0,$01,$08 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($D554,attr=$43) })
                        ; UDGTABLE#
 $C9EB DEFB $F0,$02,$07 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$02,,4(n,{ #Nn | #UDG($D54C,attr=$43) })
                        ; UDGTABLE#
 $C9EE DEFB $F0,$01,$08 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($D554,attr=$43) })
                        ; UDGTABLE#
 $C9F1 DEFB $F0,$02,$07 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$02,,4(n,{ #Nn | #UDG($D54C,attr=$43) })
                        ; UDGTABLE#
 $C9F4 DEFB $F0,$01,$08 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($D554,attr=$43) })
                        ; UDGTABLE#
 $C9F7 DEFB $F0,$02,$07 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$02,,4(n,{ #Nn | #UDG($D54C,attr=$43) })
                        ; UDGTABLE#
 $C9FA DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D554,attr=$43)
                        ; } UDGTABLE#
 $C9FB DEFB $FF         ; Terminator.

; Graphic ID #N$11
@label=graphic_11
b$C9FC DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $C9FD DEFW $D49C       ; }
 $C9FF DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $CA01 DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D4F4,attr=$45)
                        ; } UDGTABLE#
 $CA02 DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $CA04 DEFB $C6,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CA06 DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D4DC,attr=$46)
                        ; } UDGTABLE#
 $CA07 DEFB $09         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D4E4,attr=$46)
                        ; } UDGTABLE#
 $CA08 DEFB $0A         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D4EC,attr=$46)
                        ; } UDGTABLE#
 $CA09 DEFB $C5,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CA0B DEFB $05         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D4C4,attr=$46)
                        ; } UDGTABLE#
 $CA0C DEFB $06         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D4CC,attr=$46)
                        ; } UDGTABLE#
 $CA0D DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D4D4,attr=$46)
                        ; } UDGTABLE#
 $CA0E DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $CA10 DEFB $C6,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CA12 DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D4BC,attr=$45)
                        ; } UDGTABLE#
 $CA13 DEFB $C6,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CA15 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D4A4,attr=$45)
                        ; } UDGTABLE#
 $CA16 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D49C,attr=$45)
                        ; } UDGTABLE#
 $CA17 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D4AC,attr=$45)
                        ; } UDGTABLE#
 $CA18 DEFB $C6,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CA1A DEFB $F0,$08,$04 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$08,,4(n,{ #Nn | #UDG($D4BC,attr=$45) })
                        ; UDGTABLE#
 $CA1D DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D4B4,attr=$45)
                        ; } UDGTABLE#
 $CA1E DEFB $FF         ; Terminator.

; Graphic ID #N$4E
@label=graphic_4e
b$CA1F DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $CA20 DEFW $D6BC       ; }
 $CA22 DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $CA24 DEFB $0A         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D70C,attr=$46)
                        ; } UDGTABLE#
 $CA25 DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D714,attr=$46)
                        ; } UDGTABLE#
 $CA26 DEFB $F1         ; Action: move down one character block.
 $CA27 DEFB $0A         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D70C,attr=$46)
                        ; } UDGTABLE#
 $CA28 DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D714,attr=$46)
                        ; } UDGTABLE#
 $CA29 DEFB $C3,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CA2B DEFB $0C         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D71C,attr=$46)
                        ; } UDGTABLE#
 $CA2C DEFB $0D         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D724,attr=$46)
                        ; } UDGTABLE#
 $CA2D DEFB $F1         ; Action: move down one character block.
 $CA2E DEFB $0C         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D71C,attr=$46)
                        ; } UDGTABLE#
 $CA2F DEFB $0D         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D724,attr=$46)
                        ; } UDGTABLE#
 $CA30 DEFB $C3,$02     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CA32 DEFB $0A         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D70C,attr=$46)
                        ; } UDGTABLE#
 $CA33 DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D714,attr=$46)
                        ; } UDGTABLE#
 $CA34 DEFB $F1         ; Action: move down one character block.
 $CA35 DEFB $0A         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D70C,attr=$46)
                        ; } UDGTABLE#
 $CA36 DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D714,attr=$46)
                        ; } UDGTABLE#
 $CA37 DEFB $C3,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CA39 DEFB $0C         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D71C,attr=$46)
                        ; } UDGTABLE#
 $CA3A DEFB $0D         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D724,attr=$46)
                        ; } UDGTABLE#
 $CA3B DEFB $F1         ; Action: move down one character block.
 $CA3C DEFB $0C         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D71C,attr=$46)
                        ; } UDGTABLE#
 $CA3D DEFB $0D         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D724,attr=$46)
                        ; } UDGTABLE#
 $CA3E DEFB $C2,$FE     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CA40 DEFB $FE,$43     ; Attribute: #COLOUR(#PC+$01)
 $CA42 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6BC,attr=$43)
                        ; } UDGTABLE#
 $CA43 DEFB $FD,$05,$01 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c5 Columns } { #FOR$01,$05(n,=h #Nn, | ) }
                        ; { #FOR$01,$05(n,#UDG($D6C4,attr=$43), | ) }
                        ; UDGTABLE#
 $CA46 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6CC,attr=$43)
                        ; } UDGTABLE#
 $CA47 DEFB $C1,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CA49 DEFB $F0,$02,$08 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$02,,4(n,{ #Nn | #UDG($D6FC,attr=$43) })
                        ; UDGTABLE#
 $CA4C DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6BC,attr=$43)
                        ; } UDGTABLE#
 $CA4D DEFB $FD,$05,$01 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c5 Columns } { #FOR$01,$05(n,=h #Nn, | ) }
                        ; { #FOR$01,$05(n,#UDG($D6C4,attr=$43), | ) }
                        ; UDGTABLE#
 $CA50 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6CC,attr=$43)
                        ; } UDGTABLE#
 $CA51 DEFB $C7,$FE     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CA53 DEFB $F0,$02,$09 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$02,,4(n,{ #Nn | #UDG($D704,attr=$43) })
                        ; UDGTABLE#
 $CA56 DEFB $FF         ; Terminator.

; Graphic ID #N$12
@label=graphic_12
b$CA57 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $CA58 DEFW $D6BC       ; }
 $CA5A DEFB $FE,$43     ; Attribute: #COLOUR(#PC+$01)
 $CA5C DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6BC,attr=$43)
                        ; } UDGTABLE#
 $CA5D DEFB $FD,$08,$01 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c8 Columns } { #FOR$01,$08(n,=h #Nn, | ) }
                        ; { #FOR$01,$08(n,#UDG($D6C4,attr=$43), | ) }
                        ; UDGTABLE#
 $CA60 DEFB $F0,$01,$02 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($D6CC,attr=$43) })
                        ; UDGTABLE#
 $CA63 DEFB $F0,$07,$09 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$07,,4(n,{ #Nn | #UDG($D704,attr=$43) })
                        ; UDGTABLE#
 $CA66 DEFB $BF,$F9     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CA68 DEFB $F0,$07,$08 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$07,,4(n,{ #Nn | #UDG($D6FC,attr=$43) })
                        ; UDGTABLE#
 $CA6B DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $CA6D DEFB $C9,$F8     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CA6F DEFB $F0,$01,$03 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($D6D4,attr=$46) })
                        ; UDGTABLE#
 $CA72 DEFB $F0,$05,$04 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$05,,4(n,{ #Nn | #UDG($D6DC,attr=$46) })
                        ; UDGTABLE#
 $CA75 DEFB $CA,$FA     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CA77 DEFB $F0,$01,$03 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($D6D4,attr=$46) })
                        ; UDGTABLE#
 $CA7A DEFB $F0,$05,$04 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$05,,4(n,{ #Nn | #UDG($D6DC,attr=$46) })
                        ; UDGTABLE#
 $CA7D DEFB $CB,$FA     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CA7F DEFB $F0,$01,$03 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($D6D4,attr=$46) })
                        ; UDGTABLE#
 $CA82 DEFB $F0,$05,$04 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$05,,4(n,{ #Nn | #UDG($D6DC,attr=$46) })
                        ; UDGTABLE#
 $CA85 DEFB $CA,$FA     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CA87 DEFB $F0,$01,$03 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($D6D4,attr=$46) })
                        ; UDGTABLE#
 $CA8A DEFB $F0,$05,$04 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$05,,4(n,{ #Nn | #UDG($D6DC,attr=$46) })
                        ; UDGTABLE#
 $CA8D DEFB $C1,$00     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CA8F DEFB $FE,$47     ; Attribute: #COLOUR(#PC+$01)
 $CA91 DEFB $05         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6E4,attr=$47)
                        ; } UDGTABLE#
 $CA92 DEFB $06         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6EC,attr=$47)
                        ; } UDGTABLE#
 $CA93 DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6F4,attr=$47)
                        ; } UDGTABLE#
 $CA94 DEFB $F1         ; Action: move down one character block.
 $CA95 DEFB $F1         ; Action: move down one character block.
 $CA96 DEFB $05         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6E4,attr=$47)
                        ; } UDGTABLE#
 $CA97 DEFB $06         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6EC,attr=$47)
                        ; } UDGTABLE#
 $CA98 DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6F4,attr=$47)
                        ; } UDGTABLE#
 $CA99 DEFB $FF         ; Terminator.

; Graphic ID #N$17
@label=graphic_17
b$CA9A DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $CA9B DEFW $D49C       ; }
 $CA9D DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $CA9F DEFB $F0,$01,$0B ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($D4F4,attr=$46) })
                        ; UDGTABLE#
 $CAA2 DEFB $F0,$07,$04 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$07,,4(n,{ #Nn | #UDG($D4BC,attr=$46) })
                        ; UDGTABLE#
 $CAA5 DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D4B4,attr=$46)
                        ; } UDGTABLE#
 $CAA6 DEFB $C6,$FA     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CAA8 DEFB $FE,$44     ; Attribute: #COLOUR(#PC+$01)
 $CAAA DEFB $0C         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D4FC,attr=$44)
                        ; } UDGTABLE#
 $CAAB DEFB $0D         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D504,attr=$44)
                        ; } UDGTABLE#
 $CAAC DEFB $0E         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D50C,attr=$44)
                        ; } UDGTABLE#
 $CAAD DEFB $FF         ; Terminator.

; Graphic ID #N$18
@label=graphic_18
b$CAAE DEFB $FB             ; {Sprite Data:
 $CAAF DEFW $D514           ; #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).}
 $CAB1 DEFB $FE,$42         ; Attribute: #COLOUR(#PC+$01)
 $CAB3 DEFB $F2,$08,$1B,$1C ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c8 Columns } { #FOR$01,$08(n,=h #Nn, | ) }
                            ; { #FOR$01,$08(n,#UDG($D5EC,attr=$42)#UDG($D5F4,attr=$42), | ) }
                            ; UDGTABLE#
 $CAB7 DEFB $B8,$01         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $CAB9 DEFB $F2,$08,$1B,$1C ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c8 Columns } { #FOR$01,$08(n,=h #Nn, | ) }
                            ; { #FOR$01,$08(n,#UDG($D5EC,attr=$42)#UDG($D5F4,attr=$42), | ) }
                            ; UDGTABLE#
 $CABD DEFB $B8,$01         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $CABF DEFB $F2,$08,$1B,$1C ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c8 Columns } { #FOR$01,$08(n,=h #Nn, | ) }
                            ; { #FOR$01,$08(n,#UDG($D5EC,attr=$42)#UDG($D5F4,attr=$42), | ) }
                            ; UDGTABLE#
 $CAC3 DEFB $B8,$01         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $CAC5 DEFB $F2,$08,$1B,$1C ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c8 Columns } { #FOR$01,$08(n,=h #Nn, | ) }
                            ; { #FOR$01,$08(n,#UDG($D5EC,attr=$42)#UDG($D5F4,attr=$42), | ) }
                            ; UDGTABLE#
 $CAC9 DEFB $FF             ; Terminator.

; Graphic ID #N$4B
@label=graphic_4b
b$CACA DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $CACB DEFW $DA9C       ; }
 $CACD DEFB $FE,$43     ; Attribute: #COLOUR(#PC+$01)
 $CACF DEFB $FD,$10,$10 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c16 Columns } { #FOR$01,$10(n,=h #Nn, | ) }
                        ; { #FOR$01,$10(n,#UDG($DB1C,attr=$43), | ) }
                        ; UDGTABLE#
 $CAD2 DEFB $B8,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CAD4 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $CAD5 DEFW $D514       ; }
 $CAD7 DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $CAD9 DEFB $FD,$10,$1A ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c16 Columns } { #FOR$01,$10(n,=h #Nn, | ) }
                        ; { #FOR$01,$10(n,#UDG($D5E4,attr=$45), | ) }
                        ; UDGTABLE#
 $CADC DEFB $B8,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CADE DEFB $FD,$10,$1A ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c16 Columns } { #FOR$01,$10(n,=h #Nn, | ) }
                        ; { #FOR$01,$10(n,#UDG($D5E4,attr=$45), | ) }
                        ; UDGTABLE#
 $CAE1 DEFB $B8,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CAE3 DEFB $FD,$10,$1A ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c16 Columns } { #FOR$01,$10(n,=h #Nn, | ) }
                        ; { #FOR$01,$10(n,#UDG($D5E4,attr=$45), | ) }
                        ; UDGTABLE#
 $CAE6 DEFB $B8,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CAE8 DEFB $FD,$10,$1A ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c16 Columns } { #FOR$01,$10(n,=h #Nn, | ) }
                        ; { #FOR$01,$10(n,#UDG($D5E4,attr=$45), | ) }
                        ; UDGTABLE#
 $CAEB DEFB $FF         ; Terminator.

; Graphic ID #N$65
@label=graphic_65
b$CAEC DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $CAED DEFW $D6BC       ; }
 $CAEF DEFB $FE,$43     ; Attribute: #COLOUR(#PC+$01)
 $CAF1 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D6BC,attr=$43)
                        ; } UDGTABLE#
 $CAF2 DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $CAF4 DEFB $FD,$0D,$01 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c13 Columns } { #FOR$01,$0D(n,=h #Nn, | ) }
                        ; { #FOR$01,$0D(n,#UDG($D6C4,attr=$46), | ) }
                        ; UDGTABLE#
 $CAF7 DEFB $FE,$43     ; Attribute: #COLOUR(#PC+$01)
 $CAF9 DEFB $F0,$01,$02 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($D6CC,attr=$43) })
                        ; UDGTABLE#
 $CAFC DEFB $F0,$0A,$09 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$0A,,4(n,{ #Nn | #UDG($D704,attr=$43) })
                        ; UDGTABLE#
 $CAFF DEFB $BA,$F6     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CB01 DEFB $F0,$0A,$08 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$0A,,4(n,{ #Nn | #UDG($D6FC,attr=$43) })
                        ; UDGTABLE#
 $CB04 DEFB $FF         ; Terminator.

; Graphic ID #N$2B
@label=graphic_2b
b$CB05 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $CB06 DEFW $D204       ; }
 $CB08 DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $CB0A DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D23C,attr=$46)
                        ; } UDGTABLE#
 $CB0B DEFB $FD,$06,$01 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c6 Columns } { #FOR$01,$06(n,=h #Nn, | ) }
                        ; { #FOR$01,$06(n,#UDG($D20C,attr=$46), | ) }
                        ; UDGTABLE#
 $CB0E DEFB $F0,$01,$02 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($D214,attr=$46) })
                        ; UDGTABLE#
 $CB11 DEFB $F0,$02,$03 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$02,,4(n,{ #Nn | #UDG($D21C,attr=$46) })
                        ; UDGTABLE#
 $CB14 DEFB $C1,$FE     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CB16 DEFB $F0,$02,$04 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$02,,4(n,{ #Nn | #UDG($D224,attr=$46) })
                        ; UDGTABLE#
 $CB19 DEFB $FF         ; Terminator.

; Graphic ID #N$3F
@label=graphic_3f
b$CB1A DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $CB1B DEFW $D204       ; }
 $CB1D DEFB $FE,$43     ; Attribute: #COLOUR(#PC+$01)
 $CB1F DEFB $07         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D23C,attr=$43)
                        ; } UDGTABLE#
 $CB20 DEFB $FD,$06,$01 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c6 Columns } { #FOR$01,$06(n,=h #Nn, | ) }
                        ; { #FOR$01,$06(n,#UDG($D20C,attr=$43), | ) }
                        ; UDGTABLE#
 $CB23 DEFB $F0,$01,$02 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($D214,attr=$43) })
                        ; UDGTABLE#
 $CB26 DEFB $F0,$02,$0E ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$02,,4(n,{ #Nn | #UDG($D274,attr=$43) })
                        ; UDGTABLE#
 $CB29 DEFB $C1,$FE     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CB2B DEFB $F0,$02,$0E ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$02,,4(n,{ #Nn | #UDG($D274,attr=$43) })
                        ; UDGTABLE#
 $CB2E DEFB $FF         ; Terminator.

; Graphic ID #N$30
@label=graphic_30
b$CB2F DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $CB30 DEFW $D7BC    ; }
 $CB32 DEFB $FE,$42  ; Attribute: #COLOUR(#PC+$01)
 $CB34 DEFB $08      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D7FC,attr=$42) }
                     ; UDGTABLE#
 $CB35 DEFB $09      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D804,attr=$42) }
                     ; UDGTABLE#
 $CB36 DEFB $0A      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D80C,attr=$42) }
                     ; UDGTABLE#
 $CB37 DEFB $C5,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CB39 DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D7BC,attr=$42) }
                     ; UDGTABLE#
 $CB3A DEFB $04      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D7DC,attr=$42) }
                     ; UDGTABLE#
 $CB3B DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D7C4,attr=$42) }
                     ; UDGTABLE#
 $CB3C DEFB $C5,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CB3E DEFB $07      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D7F4,attr=$42) }
                     ; UDGTABLE#
 $CB3F DEFB $FE,$45  ; Attribute: #COLOUR(#PC+$01)
 $CB41 DEFB $0B      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D814,attr=$45) }
                     ; UDGTABLE#
 $CB42 DEFB $FE,$42  ; Attribute: #COLOUR(#PC+$01)
 $CB44 DEFB $05      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D7E4,attr=$42) }
                     ; UDGTABLE#
 $CB45 DEFB $C5,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CB47 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D7CC,attr=$42) }
                     ; UDGTABLE#
 $CB48 DEFB $06      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D7EC,attr=$42) }
                     ; UDGTABLE#
 $CB49 DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D7D4,attr=$42) }
                     ; UDGTABLE#
 $CB4A DEFB $C5,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CB4C DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D7BC,attr=$42) }
                     ; UDGTABLE#
 $CB4D DEFB $04      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D7DC,attr=$42) }
                     ; UDGTABLE#
 $CB4E DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D7C4,attr=$42) }
                     ; UDGTABLE#
 $CB4F DEFB $C5,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CB51 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D7CC,attr=$42) }
                     ; UDGTABLE#
 $CB52 DEFB $06      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D7EC,attr=$42) }
                     ; UDGTABLE#
 $CB53 DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D7D4,attr=$42) }
                     ; UDGTABLE#
 $CB54 DEFB $FF      ; Terminator.

; Graphic ID #N$31
@label=graphic_31
b$CB55 DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $CB56 DEFW $D7BC    ; }
 $CB58 DEFB $FE,$42  ; Attribute: #COLOUR(#PC+$01)
 $CB5A DEFB $12      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D84C,attr=$42) }
                     ; UDGTABLE#
 $CB5B DEFB $13      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D854,attr=$42) }
                     ; UDGTABLE#
 $CB5C DEFB $C6,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CB5E DEFB $10      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D83C,attr=$42) }
                     ; UDGTABLE#
 $CB5F DEFB $11      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D844,attr=$42) }
                     ; UDGTABLE#
 $CB60 DEFB $C6,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CB62 DEFB $0E      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D82C,attr=$42) }
                     ; UDGTABLE#
 $CB63 DEFB $0F      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D834,attr=$42) }
                     ; UDGTABLE#
 $CB64 DEFB $C6,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CB66 DEFB $FE,$45  ; Attribute: #COLOUR(#PC+$01)
 $CB68 DEFB $0C      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D81C,attr=$45) }
                     ; UDGTABLE#
 $CB69 DEFB $0D      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D824,attr=$45) }
                     ; UDGTABLE#
 $CB6A DEFB $FF      ; Terminator.

; Graphic ID #N$32
@label=graphic_32
b$CB6B DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $CB6C DEFW $D874    ; }
 $CB6E DEFB $FE,$42  ; Attribute: #COLOUR(#PC+$01)
 $CB70 DEFB $06      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D8A4,attr=$42) }
                     ; UDGTABLE#
 $CB71 DEFB $FE,$56  ; Attribute: #COLOUR(#PC+$01)
 $CB73 DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D874,attr=$56) }
                     ; UDGTABLE#
 $CB74 DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D87C,attr=$56) }
                     ; UDGTABLE#
 $CB75 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D884,attr=$56) }
                     ; UDGTABLE#
 $CB76 DEFB $FE,$42  ; Attribute: #COLOUR(#PC+$01)
 $CB78 DEFB $08      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D8B4,attr=$42) }
                     ; UDGTABLE#
 $CB79 DEFB $C3,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CB7B DEFB $07      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D8AC,attr=$42) }
                     ; UDGTABLE#
 $CB7C DEFB $FE,$56  ; Attribute: #COLOUR(#PC+$01)
 $CB7E DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D88C,attr=$56) }
                     ; UDGTABLE#
 $CB7F DEFB $04      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D894,attr=$56) }
                     ; UDGTABLE#
 $CB80 DEFB $05      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D89C,attr=$56) }
                     ; UDGTABLE#
 $CB81 DEFB $FE,$42  ; Attribute: #COLOUR(#PC+$01)
 $CB83 DEFB $09      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D8BC,attr=$42) }
                     ; UDGTABLE#
 $CB84 DEFB $FF      ; Terminator.

; Graphic ID #N$73
@label=graphic_73
b$CB85 DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $CB86 DEFW $D9E4    ; }
 $CB88 DEFB $FE,$42  ; Attribute: #COLOUR(#PC+$01)
 $CB8A DEFB $0B      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$42) }
                     ; UDGTABLE#
 $CB8B DEFB $0B      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$42) }
                     ; UDGTABLE#
 $CB8C DEFB $0B      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$42) }
                     ; UDGTABLE#
 $CB8D DEFB $C5,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CB8F DEFB $0B      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$42) }
                     ; UDGTABLE#
 $CB90 DEFB $F1      ; Action: move down one character block.
 $CB91 DEFB $0B      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$42) }
                     ; UDGTABLE#
 $CB92 DEFB $C5,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CB94 DEFB $0B      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$42) }
                     ; UDGTABLE#
 $CB95 DEFB $0B      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$42) }
                     ; UDGTABLE#
 $CB96 DEFB $0B      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA3C,attr=$42) }
                     ; UDGTABLE#
 $CB97 DEFB $C6,$FF  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CB99 DEFB $FE,$56  ; Attribute: #COLOUR(#PC+$01)
 $CB9B DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $CB9C DEFW $D874    ; }
 $CB9E DEFB $0A      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D8C4,attr=$56) }
                     ; UDGTABLE#
 $CB9F DEFB $FF      ; Terminator.

; Graphic ID #N$33
@label=graphic_33
b$CBA0 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $CBA1 DEFW $D49C       ; }
 $CBA3 DEFB $FE,$47     ; Attribute: #COLOUR(#PC+$01)
 $CBA5 DEFB $F0,$01,$0B ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($D4F4,attr=$47) })
                        ; UDGTABLE#
 $CBA8 DEFB $F0,$0C,$04 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$0C,,4(n,{ #Nn | #UDG($D4BC,attr=$47) })
                        ; UDGTABLE#
 $CBAB DEFB $F0,$01,$03 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($D4B4,attr=$47) })
                        ; UDGTABLE#
 $CBAE DEFB $C6,$F3     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CBB0 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $CBB1 DEFW $D5FC       ; }
 $CBB3 DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $CBB5 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D5FC,attr=$46)
                        ; } UDGTABLE#
 $CBB6 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D604,attr=$46)
                        ; } UDGTABLE#
 $CBB7 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D604,attr=$46)
                        ; } UDGTABLE#
 $CBB8 DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D604,attr=$46)
                        ; } UDGTABLE#
 $CBB9 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D60C,attr=$46)
                        ; } UDGTABLE#
 $CBBA DEFB $C3,$04     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CBBC DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D614,attr=$46)
                        ; } UDGTABLE#
 $CBBD DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D61C,attr=$46)
                        ; } UDGTABLE#
 $CBBE DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D61C,attr=$46)
                        ; } UDGTABLE#
 $CBBF DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D61C,attr=$46)
                        ; } UDGTABLE#
 $CBC0 DEFB $05         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D624,attr=$46)
                        ; } UDGTABLE#
 $CBC1 DEFB $C3,$FD     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CBC3 DEFB $F0,$03,$07 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$03,,4(n,{ #Nn | #UDG($D634,attr=$46) })
                        ; UDGTABLE#
 $CBC6 DEFB $CC,$FD     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CBC8 DEFB $F0,$03,$08 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$03,,4(n,{ #Nn | #UDG($D63C,attr=$46) })
                        ; UDGTABLE#
 $CBCB DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $CBCC DEFW $D874       ; }
 $CBCE DEFB $FE,$7A     ; Attribute: #COLOUR(#PC+$01)
 $CBD0 DEFB $C5,$FD     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CBD2 DEFB $0C         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D8D4,attr=$7A)
                        ; } UDGTABLE#
 $CBD3 DEFB $0D         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D8DC,attr=$7A)
                        ; } UDGTABLE#
 $CBD4 DEFB $0E         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D8E4,attr=$7A)
                        ; } UDGTABLE#
 $CBD5 DEFB $C5,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CBD7 DEFB $0F         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D8EC,attr=$7A)
                        ; } UDGTABLE#
 $CBD8 DEFB $10         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D8F4,attr=$7A)
                        ; } UDGTABLE#
 $CBD9 DEFB $11         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D8FC,attr=$7A)
                        ; } UDGTABLE#
 $CBDA DEFB $C5,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CBDC DEFB $12         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D904,attr=$7A)
                        ; } UDGTABLE#
 $CBDD DEFB $13         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D90C,attr=$7A)
                        ; } UDGTABLE#
 $CBDE DEFB $14         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D914,attr=$7A)
                        ; } UDGTABLE#
 $CBDF DEFB $FF         ; Terminator.

; Graphic ID #N$34
@label=graphic_34
b$CBE0 DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $CBE1 DEFW $D7BC    ; }
 $CBE3 DEFB $FE,$43  ; Attribute: #COLOUR(#PC+$01)
 $CBE5 DEFB $14      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D85C,attr=$43) }
                     ; UDGTABLE#
 $CBE6 DEFB $15      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D864,attr=$43) }
                     ; UDGTABLE#
 $CBE7 DEFB $C6,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CBE9 DEFB $10      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D83C,attr=$43) }
                     ; UDGTABLE#
 $CBEA DEFB $11      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D844,attr=$43) }
                     ; UDGTABLE#
 $CBEB DEFB $C6,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CBED DEFB $0E      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D82C,attr=$43) }
                     ; UDGTABLE#
 $CBEE DEFB $0F      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D834,attr=$43) }
                     ; UDGTABLE#
 $CBEF DEFB $FF      ; Terminator.

; Graphic ID #N$35
@label=graphic_35
b$CBF0 DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $CBF1 DEFW $D91C    ; }
 $CBF3 DEFB $FE,$45  ; Attribute: #COLOUR(#PC+$01)
 $CBF5 DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D91C,attr=$45) }
                     ; UDGTABLE#
 $CBF6 DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D924,attr=$45) }
                     ; UDGTABLE#
 $CBF7 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D92C,attr=$45) }
                     ; UDGTABLE#
 $CBF8 DEFB $C5,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CBFA DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D934,attr=$45) }
                     ; UDGTABLE#
 $CBFB DEFB $04      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D93C,attr=$45) }
                     ; UDGTABLE#
 $CBFC DEFB $05      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D944,attr=$45) }
                     ; UDGTABLE#
 $CBFD DEFB $C5,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CBFF DEFB $06      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D94C,attr=$45) }
                     ; UDGTABLE#
 $CC00 DEFB $07      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D954,attr=$45) }
                     ; UDGTABLE#
 $CC01 DEFB $08      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D95C,attr=$45) }
                     ; UDGTABLE#
 $CC02 DEFB $FF      ; Terminator.

; Graphic ID #N$36
@label=graphic_36
b$CC03 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $CC04 DEFW $DFDC       ; }
 $CC06 DEFB $FE,$4F     ; Attribute: #COLOUR(#PC+$01)
 $CC08 DEFB $FD,$0F,$20 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c15 Columns } { #FOR$01,$0F(n,=h #Nn, | ) }
                        ; { #FOR$01,$0F(n,#UDG($E0DC,attr=$4F), | ) }
                        ; UDGTABLE#
 $CC0B DEFB $B9,$02     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CC0D DEFB $FD,$0F,$20 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c15 Columns } { #FOR$01,$0F(n,=h #Nn, | ) }
                        ; { #FOR$01,$0F(n,#UDG($E0DC,attr=$4F), | ) }
                        ; UDGTABLE#
 $CC10 DEFB $B9,$FF     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CC12 DEFB $FD,$0F,$20 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c15 Columns } { #FOR$01,$0F(n,=h #Nn, | ) }
                        ; { #FOR$01,$0F(n,#UDG($E0DC,attr=$4F), | ) }
                        ; UDGTABLE#
 $CC15 DEFB $BC,$00     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CC17 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $CC18 DEFW $D91C       ; }
 $CC1A DEFB $0F         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D994,attr=$4F)
                        ; } UDGTABLE#
 $CC1B DEFB $10         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D99C,attr=$4F)
                        ; } UDGTABLE#
 $CC1C DEFB $11         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D9A4,attr=$4F)
                        ; } UDGTABLE#
 $CC1D DEFB $12         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D9AC,attr=$4F)
                        ; } UDGTABLE#
 $CC1E DEFB $17         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D9D4,attr=$4F)
                        ; } UDGTABLE#
 $CC1F DEFB $18         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D9DC,attr=$4F)
                        ; } UDGTABLE#
 $CC20 DEFB $13         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D9B4,attr=$4F)
                        ; } UDGTABLE#
 $CC21 DEFB $14         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D9BC,attr=$4F)
                        ; } UDGTABLE#
 $CC22 DEFB $15         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D9C4,attr=$4F)
                        ; } UDGTABLE#
 $CC23 DEFB $16         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D9CC,attr=$4F)
                        ; } UDGTABLE#
 $CC24 DEFB $FF         ; Terminator.

; Graphic ID #N$37
@label=graphic_37
b$CC25 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $CC26 DEFW $DFDC       ; }
 $CC28 DEFB $FE,$57     ; Attribute: #COLOUR(#PC+$01)
 $CC2A DEFB $FD,$10,$20 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c16 Columns } { #FOR$01,$10(n,=h #Nn, | ) }
                        ; { #FOR$01,$10(n,#UDG($E0DC,attr=$57), | ) }
                        ; UDGTABLE#
 $CC2D DEFB $BE,$00     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CC2F DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $CC30 DEFW $D91C       ; }
 $CC32 DEFB $09         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D964,attr=$57)
                        ; } UDGTABLE#
 $CC33 DEFB $0A         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D96C,attr=$57)
                        ; } UDGTABLE#
 $CC34 DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D974,attr=$57)
                        ; } UDGTABLE#
 $CC35 DEFB $0C         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D97C,attr=$57)
                        ; } UDGTABLE#
 $CC36 DEFB $0D         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D984,attr=$57)
                        ; } UDGTABLE#
 $CC37 DEFB $0E         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D98C,attr=$57)
                        ; } UDGTABLE#
 $CC38 DEFB $FF         ; Terminator.

; Graphic ID #N$3D
@label=graphic_3d
b$CC39 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $CC3A DEFW $DA9C       ; }
 $CC3C DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $CC3E DEFB $F0,$05,$15 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$05,,4(n,{ #Nn | #UDG($DB44,attr=$45) })
                        ; UDGTABLE#
 $CC41 DEFB $C9,$FB     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CC43 DEFB $F0,$05,$16 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$05,,4(n,{ #Nn | #UDG($DB4C,attr=$45) })
                        ; UDGTABLE#
 $CC46 DEFB $C9,$FB     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CC48 DEFB $F0,$05,$17 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$05,,4(n,{ #Nn | #UDG($DB54,attr=$45) })
                        ; UDGTABLE#
 $CC4B DEFB $C9,$FB     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CC4D DEFB $F0,$05,$15 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$05,,4(n,{ #Nn | #UDG($DB44,attr=$45) })
                        ; UDGTABLE#
 $CC50 DEFB $C9,$FB     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CC52 DEFB $F0,$05,$16 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$05,,4(n,{ #Nn | #UDG($DB4C,attr=$45) })
                        ; UDGTABLE#
 $CC55 DEFB $C9,$FB     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CC57 DEFB $F0,$05,$17 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$05,,4(n,{ #Nn | #UDG($DB54,attr=$45) })
                        ; UDGTABLE#
 $CC5A DEFB $C9,$FB     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CC5C DEFB $FF         ; Terminator.

; Graphic ID #N$42
@label=graphic_42
b$CC5D DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $CC5E DEFW $D9E4       ; }
 $CC60 DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $CC62 DEFB $0D         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA4C,attr=$45)
                        ; } UDGTABLE#
 $CC63 DEFB $0E         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA54,attr=$45)
                        ; } UDGTABLE#
 $CC64 DEFB $0F         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA5C,attr=$45)
                        ; } UDGTABLE#
 $CC65 DEFB $C5,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CC67 DEFB $FE,$44     ; Attribute: #COLOUR(#PC+$01)
 $CC69 DEFB $F0,$01,$07 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($DA1C,attr=$44) })
                        ; UDGTABLE#
 $CC6C DEFB $FE,$47     ; Attribute: #COLOUR(#PC+$01)
 $CC6E DEFB $04         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA04,attr=$47)
                        ; } UDGTABLE#
 $CC6F DEFB $0A         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA34,attr=$47)
                        ; } UDGTABLE#
 $CC70 DEFB $05         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA0C,attr=$47)
                        ; } UDGTABLE#
 $CC71 DEFB $C5,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CC73 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D9F4,attr=$47)
                        ; } UDGTABLE#
 $CC74 DEFB $F1         ; Action: move down one character block.
 $CC75 DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D9FC,attr=$47)
                        ; } UDGTABLE#
 $CC76 DEFB $C5,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CC78 DEFB $00         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D9E4,attr=$47)
                        ; } UDGTABLE#
 $CC79 DEFB $09         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA2C,attr=$47)
                        ; } UDGTABLE#
 $CC7A DEFB $01         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($D9EC,attr=$47)
                        ; } UDGTABLE#
 $CC7B DEFB $C8,$FE     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CC7D DEFB $FE,$45     ; Attribute: #COLOUR(#PC+$01)
 $CC7F DEFB $F0,$01,$06 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($DA14,attr=$45) })
                        ; UDGTABLE#
 $CC82 DEFB $F0,$01,$07 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($DA1C,attr=$45) })
                        ; UDGTABLE#
 $CC85 DEFB $08         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA24,attr=$45)
                        ; } UDGTABLE#
 $CC86 DEFB $C5,$FF     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CC88 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $CC89 DEFW $DFDC       ; }
 $CC8B DEFB $50         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E25C,attr=$45)
                        ; } UDGTABLE#
 $CC8C DEFB $FF         ; Terminator.

; Graphic ID #N$41
@label=graphic_41
b$CC8D DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $CC8E DEFW $DA9C       ; }
 $CC90 DEFB $FE,$44     ; Attribute: #COLOUR(#PC+$01)
 $CC92 DEFB $F0,$01,$18 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$01,,4(n,{ #Nn | #UDG($DB5C,attr=$44) })
                        ; UDGTABLE#
 $CC95 DEFB $14         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DB3C,attr=$44)
                        ; } UDGTABLE#
 $CC96 DEFB $FF         ; Terminator.

; Graphic ID #N$3E
@label=graphic_3e
b$CC97 DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $CC98 DEFW $DB64    ; }
 $CC9A DEFB $FE,$46  ; Attribute: #COLOUR(#PC+$01)
 $CC9C DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DB64,attr=$46) }
                     ; UDGTABLE#
 $CC9D DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DB6C,attr=$46) }
                     ; UDGTABLE#
 $CC9E DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DB74,attr=$46) }
                     ; UDGTABLE#
 $CC9F DEFB $C5,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CCA1 DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DB7C,attr=$46) }
                     ; UDGTABLE#
 $CCA2 DEFB $04      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DB84,attr=$46) }
                     ; UDGTABLE#
 $CCA3 DEFB $05      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DB8C,attr=$46) }
                     ; UDGTABLE#
 $CCA4 DEFB $C5,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CCA6 DEFB $06      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DB94,attr=$46) }
                     ; UDGTABLE#
 $CCA7 DEFB $07      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DB9C,attr=$46) }
                     ; UDGTABLE#
 $CCA8 DEFB $08      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DBA4,attr=$46) }
                     ; UDGTABLE#
 $CCA9 DEFB $FF      ; Terminator.

; Graphic ID #N$40
@label=graphic_40
b$CCAA DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $CCAB DEFW $DFDC    ; }
 $CCAD DEFB $FE,$46  ; Attribute: #COLOUR(#PC+$01)
 $CCAF DEFB $20      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E0DC,attr=$46) }
                     ; UDGTABLE#
 $CCB0 DEFB $20      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($E0DC,attr=$46) }
                     ; UDGTABLE#
 $CCB1 DEFB $FF      ; Terminator.

; Graphic ID #N$4C
@label=graphic_4c
b$CCB2 DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $CCB3 DEFW $DA9C    ; }
 $CCB5 DEFB $FE,$47  ; Attribute: #COLOUR(#PC+$01)
 $CCB7 DEFB $0A      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DAEC,attr=$47) }
                     ; UDGTABLE#
 $CCB8 DEFB $0B      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DAF4,attr=$47) }
                     ; UDGTABLE#
 $CCB9 DEFB $0B      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DAF4,attr=$47) }
                     ; UDGTABLE#
 $CCBA DEFB $0C      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DAFC,attr=$47) }
                     ; UDGTABLE#
 $CCBB DEFB $C4,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CCBD DEFB $0D      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DB04,attr=$47) }
                     ; UDGTABLE#
 $CCBE DEFB $F1      ; Action: move down one character block.
 $CCBF DEFB $F1      ; Action: move down one character block.
 $CCC0 DEFB $0E      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DB0C,attr=$47) }
                     ; UDGTABLE#
 $CCC1 DEFB $C4,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CCC3 DEFB $0D      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DB04,attr=$47) }
                     ; UDGTABLE#
 $CCC4 DEFB $F1      ; Action: move down one character block.
 $CCC5 DEFB $F1      ; Action: move down one character block.
 $CCC6 DEFB $0E      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DB0C,attr=$47) }
                     ; UDGTABLE#
 $CCC7 DEFB $C4,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CCC9 DEFB $0A      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DAEC,attr=$47) }
                     ; UDGTABLE#
 $CCCA DEFB $0B      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DAF4,attr=$47) }
                     ; UDGTABLE#
 $CCCB DEFB $0B      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DAF4,attr=$47) }
                     ; UDGTABLE#
 $CCCC DEFB $0C      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DAFC,attr=$47) }
                     ; UDGTABLE#
 $CCCD DEFB $C4,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CCCF DEFB $0D      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DB04,attr=$47) }
                     ; UDGTABLE#
 $CCD0 DEFB $F1      ; Action: move down one character block.
 $CCD1 DEFB $F1      ; Action: move down one character block.
 $CCD2 DEFB $0E      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DB0C,attr=$47) }
                     ; UDGTABLE#
 $CCD3 DEFB $C4,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CCD5 DEFB $0F      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DB14,attr=$47) }
                     ; UDGTABLE#
 $CCD6 DEFB $F1      ; Action: move down one character block.
 $CCD7 DEFB $F1      ; Action: move down one character block.
 $CCD8 DEFB $11      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DB24,attr=$47) }
                     ; UDGTABLE#
 $CCD9 DEFB $FF      ; Terminator.

; Graphic ID #N$38
@label=graphic_38
b$CCDA DEFB $FB      ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $CCDB DEFW $DA9C    ; }
 $CCDD DEFB $FE,$44  ; Attribute: #COLOUR(#PC+$01)
 $CCDF DEFB $00      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DA9C,attr=$44) }
                     ; UDGTABLE#
 $CCE0 DEFB $01      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DAA4,attr=$44) }
                     ; UDGTABLE#
 $CCE1 DEFB $02      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DAAC,attr=$44) }
                     ; UDGTABLE#
 $CCE2 DEFB $C5,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CCE4 DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DAB4,attr=$44) }
                     ; UDGTABLE#
 $CCE5 DEFB $04      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DABC,attr=$44) }
                     ; UDGTABLE#
 $CCE6 DEFB $05      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DAC4,attr=$44) }
                     ; UDGTABLE#
 $CCE7 DEFB $C5,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CCE9 DEFB $03      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DAB4,attr=$44) }
                     ; UDGTABLE#
 $CCEA DEFB $06      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DACC,attr=$44) }
                     ; UDGTABLE#
 $CCEB DEFB $05      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DAC4,attr=$44) }
                     ; UDGTABLE#
 $CCEC DEFB $C5,$01  ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CCEE DEFB $07      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DAD4,attr=$44) }
                     ; UDGTABLE#
 $CCEF DEFB $08      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DADC,attr=$44) }
                     ; UDGTABLE#
 $CCF0 DEFB $09      ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DAE4,attr=$44) }
                     ; UDGTABLE#
 $CCF1 DEFB $FF      ; Terminator.

; Graphic ID #N$39
@label=graphic_39
b$CCF2 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $CCF3 DEFW $DA9C       ; }
 $CCF5 DEFB $FE,$44     ; Attribute: #COLOUR(#PC+$01)
 $CCF7 DEFB $12         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DB2C,attr=$44)
                        ; } UDGTABLE#
 $CCF8 DEFB $0A         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DAEC,attr=$44)
                        ; } UDGTABLE#
 $CCF9 DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DAF4,attr=$44)
                        ; } UDGTABLE#
 $CCFA DEFB $0C         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DAFC,attr=$44)
                        ; } UDGTABLE#
 $CCFB DEFB $C4,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CCFD DEFB $13         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DB34,attr=$44)
                        ; } UDGTABLE#
 $CCFE DEFB $0D         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DB04,attr=$44)
                        ; } UDGTABLE#
 $CCFF DEFB $F1         ; Action: move down one character block.
 $CD00 DEFB $0E         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DB0C,attr=$44)
                        ; } UDGTABLE#
 $CD01 DEFB $C5,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CD03 DEFB $0D         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DB04,attr=$44)
                        ; } UDGTABLE#
 $CD04 DEFB $F1         ; Action: move down one character block.
 $CD05 DEFB $0E         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DB0C,attr=$44)
                        ; } UDGTABLE#
 $CD06 DEFB $C5,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CD08 DEFB $0F         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DB14,attr=$44)
                        ; } UDGTABLE#
 $CD09 DEFB $10         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DB1C,attr=$44)
                        ; } UDGTABLE#
 $CD0A DEFB $11         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DB24,attr=$44)
                        ; } UDGTABLE#
 $CD0B DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $CD0C DEFW $DFDC       ; }
 $CD0E DEFB $C6,$FE     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CD10 DEFB $F0,$02,$20 ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE {{ =h Row | =h Graphic }}
                        ; #FOR$01,$02,,4(n,{ #Nn | #UDG($E0DC,attr=$44) })
                        ; UDGTABLE#
 $CD13 DEFB $FF         ; Terminator.

; Graphic ID #N$67
@label=graphic_67
b$CD14 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $CD15 DEFW $DFDC       ; }
 $CD17 DEFB $FE,$72     ; Attribute: #COLOUR(#PC+$01)
 $CD19 DEFB $FD,$05,$20 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c5 Columns } { #FOR$01,$05(n,=h #Nn, | ) }
                        ; { #FOR$01,$05(n,#UDG($E0DC,attr=$72), | ) }
                        ; UDGTABLE#
 $CD1C DEFB $C3,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CD1E DEFB $FD,$05,$20 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c5 Columns } { #FOR$01,$05(n,=h #Nn, | ) }
                        ; { #FOR$01,$05(n,#UDG($E0DC,attr=$72), | ) }
                        ; UDGTABLE#
 $CD21 DEFB $C3,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CD23 DEFB $FD,$05,$20 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c5 Columns } { #FOR$01,$05(n,=h #Nn, | ) }
                        ; { #FOR$01,$05(n,#UDG($E0DC,attr=$72), | ) }
                        ; UDGTABLE#
 $CD26 DEFB $C4,$FF     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CD28 DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $CD29 DEFW $DEDC       ; }
 $CD2B DEFB $0B         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF34,attr=$72)
                        ; } UDGTABLE#
 $CD2C DEFB $0C         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF3C,attr=$72)
                        ; } UDGTABLE#
 $CD2D DEFB $0C         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DF3C,attr=$72)
                        ; } UDGTABLE#
 $CD2E DEFB $FF         ; Terminator.

; Graphic ID #N$74
@label=graphic_74
b$CD2F DEFB $FB         ; {Sprite Data: #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).
 $CD30 DEFW $DFCC       ; }
 $CD32 DEFB $FE,$46     ; Attribute: #COLOUR(#PC+$01)
 $CD34 DEFB $FD,$06,$01 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c6 Columns } { #FOR$01,$06(n,=h #Nn, | ) }
                        ; { #FOR$01,$06(n,#UDG($DFD4,attr=$46), | ) }
                        ; UDGTABLE#
 $CD37 DEFB $C1,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CD39 DEFB $03         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DFE4,attr=$46)
                        ; } UDGTABLE#
 $CD3A DEFB $C8,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CD3C DEFB $FD,$06,$00 ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                        ; #UDGTABLE { =h,c6 Columns } { #FOR$01,$06(n,=h #Nn, | ) }
                        ; { #FOR$01,$06(n,#UDG($DFCC,attr=$46), | ) }
                        ; UDGTABLE#
 $CD3F DEFB $C8,$FF     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $CD41 DEFB $02         ; Tile #N(#PEEK(#PC)): #UDGTABLE { #UDG($DFDC,attr=$46)
                        ; } UDGTABLE#
 $CD42 DEFB $FF         ; Terminator.

; Graphic ID #N$75
@label=graphic_75
b$CD43 DEFB $FB             ; {Sprite Data:
 $CD44 DEFW $D9E4           ; #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).}
 $CD46 DEFB $FE,$43         ; Attribute: #COLOUR(#PC+$01)
 $CD48 DEFB $04             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($DA04,attr=$43) } UDGTABLE#
 $CD49 DEFB $FD,$1E,$0A     ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c30 Columns } { #FOR$01,$1E(n,=h #Nn, | ) }
                            ; { #FOR$01,$1E(n,#UDG($DA34,attr=$43), | ) }
                            ; UDGTABLE#
 $CD4C DEFB $05             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($DA0C,attr=$43) } UDGTABLE#
 $CD4D DEFB $A8,$01         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $CD4F DEFB $02             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($D9F4,attr=$43) } UDGTABLE#
 $CD50 DEFB $FD,$1E,$0B     ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c30 Columns } { #FOR$01,$1E(n,=h #Nn, | ) }
                            ; { #FOR$01,$1E(n,#UDG($DA3C,attr=$43), | ) }
                            ; UDGTABLE#
 $CD53 DEFB $03             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($D9FC,attr=$43) } UDGTABLE#
 $CD54 DEFB $A8,$01         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $CD56 DEFB $00             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($D9E4,attr=$43) } UDGTABLE#
 $CD57 DEFB $FD,$1E,$09     ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c30 Columns } { #FOR$01,$1E(n,=h #Nn, | ) }
                            ; { #FOR$01,$1E(n,#UDG($DA2C,attr=$43), | ) }
                            ; UDGTABLE#
 $CD5A DEFB $01             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($D9EC,attr=$43) } UDGTABLE#
 $CD5B DEFB $A8,$01         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $CD5D DEFB $FE,$06         ; Attribute: #COLOUR(#PC+$01)
 $CD5F DEFB $F2,$10,$16,$15 ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c16 Columns } { #FOR$01,$10(n,=h #Nn, | ) }
                            ; { #FOR$01,$10(n,#UDG($DA94,attr=$6)#UDG($DA8C,attr=$6), | ) }
                            ; UDGTABLE#
 $CD63 DEFB $A8,$01         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $CD65 DEFB $F2,$10,$15,$16 ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c16 Columns } { #FOR$01,$10(n,=h #Nn, | ) }
                            ; { #FOR$01,$10(n,#UDG($DA8C,attr=$6)#UDG($DA94,attr=$6), | ) }
                            ; UDGTABLE#
 $CD69 DEFB $A8,$01         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $CD6B DEFB $F2,$10,$16,$15 ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c16 Columns } { #FOR$01,$10(n,=h #Nn, | ) }
                            ; { #FOR$01,$10(n,#UDG($DA94,attr=$6)#UDG($DA8C,attr=$6), | ) }
                            ; UDGTABLE#
 $CD6F DEFB $A8,$01         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $CD71 DEFB $F2,$10,$15,$16 ; Tile sprites #N(#PEEK(#PC+$02)) and #N(#PEEK(#PC+$03)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c16 Columns } { #FOR$01,$10(n,=h #Nn, | ) }
                            ; { #FOR$01,$10(n,#UDG($DA8C,attr=$6)#UDG($DA94,attr=$6), | ) }
                            ; UDGTABLE#
 $CD75 DEFB $A8,$01         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $CD77 DEFB $FE,$42         ; Attribute: #COLOUR(#PC+$01)
 $CD79 DEFB $FB             ; {Sprite Data:
 $CD7A DEFW $E06C           ; #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).}
 $CD7C DEFB $FD,$20,$0C     ; Tile sprite #N(#PEEK(#PC+$02)) horizontally #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE { =h,c32 Columns } { #FOR$01,$20(n,=h #Nn, | ) }
                            ; { #FOR$01,$20(n,#UDG($E0CC,attr=$42), | ) }
                            ; UDGTABLE#
 $CD7F DEFB $C3,$00         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $CD81 DEFB $FE,$46         ; Attribute: #COLOUR(#PC+$01)
 $CD83 DEFB $F0,$01,$02     ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE {{ =h Row | =h Graphic }}
                            ; #FOR$01,$01,,4(n,{ #Nn | #UDG($E07C,attr=$46) })
                            ; UDGTABLE#
 $CD86 DEFB $F0,$04,$04     ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE {{ =h Row | =h Graphic }}
                            ; #FOR$01,$04,,4(n,{ #Nn | #UDG($E08C,attr=$46) })
                            ; UDGTABLE#
 $CD89 DEFB $BC,$FB         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $CD8B DEFB $F0,$01,$02     ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE {{ =h Row | =h Graphic }}
                            ; #FOR$01,$01,,4(n,{ #Nn | #UDG($E07C,attr=$46) })
                            ; UDGTABLE#
 $CD8E DEFB $F0,$04,$04     ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE {{ =h Row | =h Graphic }}
                            ; #FOR$01,$04,,4(n,{ #Nn | #UDG($E08C,attr=$46) })
                            ; UDGTABLE#
 $CD91 DEFB $BC,$FB         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $CD93 DEFB $F0,$01,$02     ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE {{ =h Row | =h Graphic }}
                            ; #FOR$01,$01,,4(n,{ #Nn | #UDG($E07C,attr=$46) })
                            ; UDGTABLE#
 $CD96 DEFB $F0,$04,$04     ; Tile sprite #N(#PEEK(#PC+$02)) vertically #N(#PEEK(#PC+$01)) times.
                            ; #UDGTABLE {{ =h Row | =h Graphic }}
                            ; #FOR$01,$04,,4(n,{ #Nn | #UDG($E08C,attr=$46) })
                            ; UDGTABLE#
 $CD99 DEFB $FE,$5F         ; Attribute: #COLOUR(#PC+$01)
 $CD9B DEFB $CA,$F5         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $CD9D DEFB $FB             ; {Sprite Data:
 $CD9E DEFW $DFDC           ; #R(#PEEK(#PC+$01)+#PEEK(#PC+$02)*$100).}
 $CDA0 DEFB $4D             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($E244,attr=$5F) } UDGTABLE#
 $CDA1 DEFB $49             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($E224,attr=$5F) } UDGTABLE#
 $CDA2 DEFB $4B             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($E234,attr=$5F) } UDGTABLE#
 $CDA3 DEFB $52             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($E26C,attr=$5F) } UDGTABLE#
 $CDA4 DEFB $4F             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($E254,attr=$5F) } UDGTABLE#
 $CDA5 DEFB $2D             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($E144,attr=$5F) } UDGTABLE#
 $CDA6 DEFB $47             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($E214,attr=$5F) } UDGTABLE#
 $CDA7 DEFB $45             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($E204,attr=$5F) } UDGTABLE#
 $CDA8 DEFB $4E             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($E24C,attr=$5F) } UDGTABLE#
 $CDA9 DEFB $CC,$00         ; Move cursor: #N(#PEEK(#PC)-$C8),
                            ; #N(#PEEK(#PC+$01)).
 $CDAB DEFB $4D             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($E244,attr=$5F) } UDGTABLE#
 $CDAC DEFB $49             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($E224,attr=$5F) } UDGTABLE#
 $CDAD DEFB $4B             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($E234,attr=$5F) } UDGTABLE#
 $CDAE DEFB $52             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($E26C,attr=$5F) } UDGTABLE#
 $CDAF DEFB $4F             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($E254,attr=$5F) } UDGTABLE#
 $CDB0 DEFB $2D             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($E144,attr=$5F) } UDGTABLE#
 $CDB1 DEFB $47             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($E214,attr=$5F) } UDGTABLE#
 $CDB2 DEFB $45             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($E204,attr=$5F) } UDGTABLE#
 $CDB3 DEFB $4E             ; Tile #N(#PEEK(#PC)): #UDGTABLE {
                            ; #UDG($E24C,attr=$5F) } UDGTABLE#
 $CDB4 DEFB $FF             ; Terminator.

; Table: Room Data
@label=Table_RoomData
w$CDB5 DEFW $CDF7    ; #LET(room=#PEEK(#PC)+#PEEK(#PC+$01)*$100)#R({room})(#D({room})).
 $CDB7 DEFW $CE01    ; #LET(room=#PEEK(#PC)+#PEEK(#PC+$01)*$100)#R({room})(#D({room})).
 $CDB9 DEFW $CE25    ; #LET(room=#PEEK(#PC)+#PEEK(#PC+$01)*$100)#R({room})(#D({room})).
 $CDBB DEFW $CE37    ; #LET(room=#PEEK(#PC)+#PEEK(#PC+$01)*$100)#R({room})(#D({room})).
 $CDBD DEFW $CE69    ; #LET(room=#PEEK(#PC)+#PEEK(#PC+$01)*$100)#R({room})(#D({room})).
 $CDBF DEFW $CE7B    ; #LET(room=#PEEK(#PC)+#PEEK(#PC+$01)*$100)#R({room})(#D({room})).
 $CDC1 DEFW $CE89    ; #LET(room=#PEEK(#PC)+#PEEK(#PC+$01)*$100)#R({room})(#D({room})).
 $CDC3 DEFW $CEAD    ; #LET(room=#PEEK(#PC)+#PEEK(#PC+$01)*$100)#R({room})(#D({room})).
 $CDC5 DEFW $CEC9    ; #LET(room=#PEEK(#PC)+#PEEK(#PC+$01)*$100)#R({room})(#D({room})).
 $CDC7 DEFW $CEE1    ; #LET(room=#PEEK(#PC)+#PEEK(#PC+$01)*$100)#R({room})(#D({room})).
 $CDC9 DEFW $CEF9    ; #LET(room=#PEEK(#PC)+#PEEK(#PC+$01)*$100)#R({room})(#D({room})).
 $CDCB DEFW $CF09    ; #LET(room=#PEEK(#PC)+#PEEK(#PC+$01)*$100)#R({room})(#D({room})).
 $CDCD DEFW $CF29    ; #LET(room=#PEEK(#PC)+#PEEK(#PC+$01)*$100)#R({room})(#D({room})).
 $CDCF DEFW $CF49    ; #LET(room=#PEEK(#PC)+#PEEK(#PC+$01)*$100)#R({room})(#D({room})).
 $CDD1 DEFW $CF71    ; #LET(room=#PEEK(#PC)+#PEEK(#PC+$01)*$100)#R({room})(#D({room})).
 $CDD3 DEFW $CF97    ; #LET(room=#PEEK(#PC)+#PEEK(#PC+$01)*$100)#R({room})(#D({room})).
 $CDD5 DEFW $CFB5    ; #LET(room=#PEEK(#PC)+#PEEK(#PC+$01)*$100)#R({room})(#D({room})).
 $CDD7 DEFW $CFD9    ; #LET(room=#PEEK(#PC)+#PEEK(#PC+$01)*$100)#R({room})(#D({room})).
 $CDD9 DEFW $CFEF    ; #LET(room=#PEEK(#PC)+#PEEK(#PC+$01)*$100)#R({room})(#D({room})).
 $CDDB DEFW $D009    ; #LET(room=#PEEK(#PC)+#PEEK(#PC+$01)*$100)#R({room})(#D({room})).
 $CDDD DEFW $D039    ; #LET(room=#PEEK(#PC)+#PEEK(#PC+$01)*$100)#R({room})(#D({room})).
 $CDDF DEFW $D057    ; #LET(room=#PEEK(#PC)+#PEEK(#PC+$01)*$100)#R({room})(#D({room})).
 $CDE1 DEFW $D08B    ; #LET(room=#PEEK(#PC)+#PEEK(#PC+$01)*$100)#R({room})(#D({room})).
 $CDE3 DEFW $D0AF    ; #LET(room=#PEEK(#PC)+#PEEK(#PC+$01)*$100)#R({room})(#D({room})).
 $CDE5 DEFW $D0C3    ; #LET(room=#PEEK(#PC)+#PEEK(#PC+$01)*$100)#R({room})(#D({room})).
 $CDE7 DEFW $D0E7    ; #LET(room=#PEEK(#PC)+#PEEK(#PC+$01)*$100)#R({room})(#D({room})).
 $CDE9 DEFW $D109    ; #LET(room=#PEEK(#PC)+#PEEK(#PC+$01)*$100)#R({room})(#D({room})).
 $CDEB DEFW $D125    ; #LET(room=#PEEK(#PC)+#PEEK(#PC+$01)*$100)#R({room})(#D({room})).
 $CDED DEFW $D135    ; #LET(room=#PEEK(#PC)+#PEEK(#PC+$01)*$100)#R({room})(#D({room})).
 $CDEF DEFW $D153    ; #LET(room=#PEEK(#PC)+#PEEK(#PC+$01)*$100)#R({room})(#D({room})).
 $CDF1 DEFW $D16D    ; #LET(room=#PEEK(#PC)+#PEEK(#PC+$01)*$100)#R({room})(#D({room})).
 $CDF3 DEFW $D17D    ; #LET(room=#PEEK(#PC)+#PEEK(#PC+$01)*$100)#R({room})(#D({room})).
 $CDF5 DEFW $D191    ; #LET(room=#PEEK(#PC)+#PEEK(#PC+$01)*$100)#R({room})(#D({room})).

; Room #N$00: Town Square
;
; #BACKGROUND($00)(town-square)
b$CDF7 DEFB $80,$07  ; #ROOM(#PC).
 $CDF9 DEFB $86,$B0  ; #ROOM(#PC).
 $CDFB DEFB $84,$4B  ; #ROOM(#PC).
 $CDFD DEFB $85,$AF  ; #ROOM(#PC).
 $CDFF DEFB $7F,$00  ; #ROOM(#PC).

; Room #N$01: Stamp Street
;
; #BACKGROUND($01)(stamp-street)
b$CE01 DEFB $80,$07  ; #ROOM(#PC).
 $CE03 DEFB $08,$E7  ; #ROOM(#PC).
 $CE05 DEFB $30,$DE  ; #ROOM(#PC).
 $CE07 DEFB $8A,$87  ; #ROOM(#PC).
 $CE09 DEFB $8A,$9F  ; #ROOM(#PC).
 $CE0B DEFB $0C,$03  ; #ROOM(#PC).
 $CE0D DEFB $0D,$01  ; #ROOM(#PC).
 $CE0F DEFB $8F,$03  ; #ROOM(#PC).
 $CE11 DEFB $0C,$05  ; #ROOM(#PC).
 $CE13 DEFB $0C,$07  ; #ROOM(#PC).
 $CE15 DEFB $14,$37  ; #ROOM(#PC).
 $CE17 DEFB $A4,$2E  ; #ROOM(#PC).
 $CE19 DEFB $B2,$84  ; #ROOM(#PC).
 $CE1B DEFB $27,$5E  ; #ROOM(#PC).
 $CE1D DEFB $34,$0F  ; #ROOM(#PC).
 $CE1F DEFB $BB,$28  ; #ROOM(#PC).
 $CE21 DEFB $BB,$48  ; #ROOM(#PC).
 $CE23 DEFB $7F,$00  ; #ROOM(#PC).

; Room #N$02: The Post Office
;
; #BACKGROUND($02)(the-post-office)
b$CE25 DEFB $A0,$07  ; #ROOM(#PC).
 $CE27 DEFB $49,$00  ; #ROOM(#PC).
 $CE29 DEFB $EA,$04  ; #ROOM(#PC).
 $CE2B DEFB $EB,$0E  ; #ROOM(#PC).
 $CE2D DEFB $6B,$0F  ; #ROOM(#PC).
 $CE2F DEFB $C7,$20  ; #ROOM(#PC).
 $CE31 DEFB $C7,$D8  ; #ROOM(#PC).
 $CE33 DEFB $C6,$60  ; #ROOM(#PC).
 $CE35 DEFB $7F,$00  ; #ROOM(#PC).

; Room #N$03: Market Street
;
; #BACKGROUND($03)(market-street)
b$CE37 DEFB $80,$07  ; #ROOM(#PC).
 $CE39 DEFB $0D,$20  ; #ROOM(#PC).
 $CE3B DEFB $8F,$22  ; #ROOM(#PC).
 $CE3D DEFB $0C,$23  ; #ROOM(#PC).
 $CE3F DEFB $0C,$25  ; #ROOM(#PC).
 $CE41 DEFB $0C,$27  ; #ROOM(#PC).
 $CE43 DEFB $2A,$A0  ; #ROOM(#PC).
 $CE45 DEFB $29,$A3  ; #ROOM(#PC).
 $CE47 DEFB $29,$A5  ; #ROOM(#PC).
 $CE49 DEFB $29,$A7  ; #ROOM(#PC).
 $CE4B DEFB $28,$7F  ; #ROOM(#PC).
 $CE4D DEFB $A4,$76  ; #ROOM(#PC).
 $CE4F DEFB $25,$2D  ; #ROOM(#PC).
 $CE51 DEFB $26,$45  ; #ROOM(#PC).
 $CE53 DEFB $25,$9D  ; #ROOM(#PC).
 $CE55 DEFB $26,$B5  ; #ROOM(#PC).
 $CE57 DEFB $08,$E7  ; #ROOM(#PC).
 $CE59 DEFB $08,$07  ; #ROOM(#PC).
 $CE5B DEFB $8F,$62  ; #ROOM(#PC).
 $CE5D DEFB $5B,$24  ; #ROOM(#PC).
 $CE5F DEFB $DC,$35  ; #ROOM(#PC).
 $CE61 DEFB $5C,$AF  ; #ROOM(#PC).
 $CE63 DEFB $DD,$3E  ; #ROOM(#PC).
 $CE65 DEFB $DD,$A5  ; #ROOM(#PC).
 $CE67 DEFB $7F,$00  ; #ROOM(#PC).

; Room #N$04: The Super Market
;
; #BACKGROUND($04)(the-super-market)
b$CE69 DEFB $A0,$07  ; #ROOM(#PC).
 $CE6B DEFB $48,$0F  ; #ROOM(#PC).
 $CE6D DEFB $E8,$57  ; #ROOM(#PC).
 $CE6F DEFB $E8,$55  ; #ROOM(#PC).
 $CE71 DEFB $49,$00  ; #ROOM(#PC).
 $CE73 DEFB $C7,$28  ; #ROOM(#PC).
 $CE75 DEFB $C7,$80  ; #ROOM(#PC).
 $CE77 DEFB $C7,$D0  ; #ROOM(#PC).
 $CE79 DEFB $7F,$00  ; #ROOM(#PC).

; Room #N$05: The Park
;
; #BACKGROUND($05)(the-park)
b$CE7B DEFB $80,$07  ; #ROOM(#PC).
 $CE7D DEFB $83,$2F  ; #ROOM(#PC).
 $CE7F DEFB $86,$20  ; #ROOM(#PC).
 $CE81 DEFB $12,$6D  ; #ROOM(#PC).
 $CE83 DEFB $86,$C8  ; #ROOM(#PC).
 $CE85 DEFB $85,$1F  ; #ROOM(#PC).
 $CE87 DEFB $7F,$00  ; #ROOM(#PC).

; Room #N$06: Wobbly Walk
;
; #BACKGROUND($06)(wobbly-walk)
b$CE89 DEFB $80,$07  ; #ROOM(#PC).
 $CE8B DEFB $0D,$80  ; #ROOM(#PC).
 $CE8D DEFB $8F,$82  ; #ROOM(#PC).
 $CE8F DEFB $0C,$83  ; #ROOM(#PC).
 $CE91 DEFB $0C,$85  ; #ROOM(#PC).
 $CE93 DEFB $0C,$87  ; #ROOM(#PC).
 $CE95 DEFB $11,$1A  ; #ROOM(#PC).
 $CE97 DEFB $89,$07  ; #ROOM(#PC).
 $CE99 DEFB $08,$4F  ; #ROOM(#PC).
 $CE9B DEFB $08,$67  ; #ROOM(#PC).
 $CE9D DEFB $33,$5A  ; #ROOM(#PC).
 $CE9F DEFB $A4,$BE  ; #ROOM(#PC).
 $CEA1 DEFB $14,$C7  ; #ROOM(#PC).
 $CEA3 DEFB $A7,$96  ; #ROOM(#PC).
 $CEA5 DEFB $A7,$93  ; #ROOM(#PC).
 $CEA7 DEFB $A7,$DB  ; #ROOM(#PC).
 $CEA9 DEFB $B7,$85  ; #ROOM(#PC).
 $CEAB DEFB $7F,$00  ; #ROOM(#PC).

; Room #N$07: Rubble Road
;
; #BACKGROUND($07)(rubble-road)
b$CEAD DEFB $80,$07  ; #ROOM(#PC).
 $CEAF DEFB $18,$85  ; #ROOM(#PC).
 $CEB1 DEFB $18,$87  ; #ROOM(#PC).
 $CEB3 DEFB $4B,$82  ; #ROOM(#PC).
 $CEB5 DEFB $8F,$84  ; #ROOM(#PC).
 $CEB7 DEFB $89,$07  ; #ROOM(#PC).
 $CEB9 DEFB $08,$4F  ; #ROOM(#PC).
 $CEBB DEFB $08,$67  ; #ROOM(#PC).
 $CEBD DEFB $97,$64  ; #ROOM(#PC).
 $CEBF DEFB $31,$17  ; #ROOM(#PC).
 $CEC1 DEFB $A2,$BE  ; #ROOM(#PC).
 $CEC3 DEFB $14,$C7  ; #ROOM(#PC).
 $CEC5 DEFB $0E,$96  ; #ROOM(#PC).
 $CEC7 DEFB $7F,$00  ; #ROOM(#PC).

; Room #N$08: Wall Street
;
; #BACKGROUND($08)(wall-street)
b$CEC9 DEFB $80,$07  ; #ROOM(#PC).
 $CECB DEFB $D0,$3C  ; #ROOM(#PC).
 $CECD DEFB $15,$C5  ; #ROOM(#PC).
 $CECF DEFB $15,$C7  ; #ROOM(#PC).
 $CED1 DEFB $66,$67  ; #ROOM(#PC).
 $CED3 DEFB $66,$A7  ; #ROOM(#PC).
 $CED5 DEFB $66,$87  ; #ROOM(#PC).
 $CED7 DEFB $7E,$09  ; #ROOM(#PC).
 $CED9 DEFB $0C,$67  ; #ROOM(#PC).
 $CEDB DEFB $7E,$09  ; #ROOM(#PC).
 $CEDD DEFB $0C,$65  ; #ROOM(#PC).
 $CEDF DEFB $7F,$00  ; #ROOM(#PC).

; Room #N$09: Pete Street
;
; #BACKGROUND($09)(pete-street)
b$CEE1 DEFB $80,$07  ; #ROOM(#PC).
 $CEE3 DEFB $4F,$5F  ; #ROOM(#PC).
 $CEE5 DEFB $18,$85  ; #ROOM(#PC).
 $CEE7 DEFB $18,$87  ; #ROOM(#PC).
 $CEE9 DEFB $4B,$82  ; #ROOM(#PC).
 $CEEB DEFB $8F,$84  ; #ROOM(#PC).
 $CEED DEFB $A2,$BE  ; #ROOM(#PC).
 $CEEF DEFB $14,$C7  ; #ROOM(#PC).
 $CEF1 DEFB $0E,$96  ; #ROOM(#PC).
 $CEF3 DEFB $0E,$E6  ; #ROOM(#PC).
 $CEF5 DEFB $86,$20  ; #ROOM(#PC).
 $CEF7 DEFB $7F,$00  ; #ROOM(#PC).

; Room #N$0A: The Work Shed
;
; #BACKGROUND($0A)(the-work-shed)
b$CEF9 DEFB $80,$07  ; #ROOM(#PC).
 $CEFB DEFB $A4,$2E  ; #ROOM(#PC).
 $CEFD DEFB $BF,$5F  ; #ROOM(#PC).
 $CEFF DEFB $BF,$B7  ; #ROOM(#PC).
 $CF01 DEFB $70,$7F  ; #ROOM(#PC).
 $CF03 DEFB $E8,$1A  ; #ROOM(#PC).
 $CF05 DEFB $68,$45  ; #ROOM(#PC).
 $CF07 DEFB $7F,$00  ; #ROOM(#PC).

; Room #N$0B: School Lane
;
; #BACKGROUND($0B)(school-lane)
b$CF09 DEFB $80,$07  ; #ROOM(#PC).
 $CF0B DEFB $64,$62  ; #ROOM(#PC).
 $CF0D DEFB $1B,$64  ; #ROOM(#PC).
 $CF0F DEFB $18,$64  ; #ROOM(#PC).
 $CF11 DEFB $18,$65  ; #ROOM(#PC).
 $CF13 DEFB $18,$67  ; #ROOM(#PC).
 $CF15 DEFB $8A,$E7  ; #ROOM(#PC).
 $CF17 DEFB $A4,$76  ; #ROOM(#PC).
 $CF19 DEFB $14,$7F  ; #ROOM(#PC).
 $CF1B DEFB $0E,$9E  ; #ROOM(#PC).
 $CF1D DEFB $0E,$BE  ; #ROOM(#PC).
 $CF1F DEFB $08,$07  ; #ROOM(#PC).
 $CF21 DEFB $08,$27  ; #ROOM(#PC).
 $CF23 DEFB $08,$47  ; #ROOM(#PC).
 $CF25 DEFB $4D,$29  ; #ROOM(#PC).
 $CF27 DEFB $7F,$00  ; #ROOM(#PC).

; Room #N$0C: The School
;
; #BACKGROUND($0C)(the-school)
b$CF29 DEFB $A0,$07  ; #ROOM(#PC).
 $CF2B DEFB $A1,$37  ; #ROOM(#PC).
 $CF2D DEFB $A1,$5F  ; #ROOM(#PC).
 $CF2F DEFB $A1,$87  ; #ROOM(#PC).
 $CF31 DEFB $A1,$AF  ; #ROOM(#PC).
 $CF33 DEFB $A1,$D7  ; #ROOM(#PC).
 $CF35 DEFB $49,$00  ; #ROOM(#PC).
 $CF37 DEFB $C6,$60  ; #ROOM(#PC).
 $CF39 DEFB $C7,$28  ; #ROOM(#PC).
 $CF3B DEFB $C7,$D8  ; #ROOM(#PC).
 $CF3D DEFB $0E,$3C  ; #ROOM(#PC).
 $CF3F DEFB $0E,$7C  ; #ROOM(#PC).
 $CF41 DEFB $0E,$BC  ; #ROOM(#PC).
 $CF43 DEFB $F2,$37  ; #ROOM(#PC).
 $CF45 DEFB $71,$03  ; #ROOM(#PC).
 $CF47 DEFB $7F,$00  ; #ROOM(#PC).

; Room #N$0D: Baker Street
;
; #BACKGROUND($0D)(baker-street)
b$CF49 DEFB $80,$07  ; #ROOM(#PC).
 $CF4B DEFB $08,$07  ; #ROOM(#PC).
 $CF4D DEFB $89,$DF  ; #ROOM(#PC).
 $CF4F DEFB $0D,$20  ; #ROOM(#PC).
 $CF51 DEFB $08,$9F  ; #ROOM(#PC).
 $CF53 DEFB $2C,$23  ; #ROOM(#PC).
 $CF55 DEFB $2C,$25  ; #ROOM(#PC).
 $CF57 DEFB $2C,$27  ; #ROOM(#PC).
 $CF59 DEFB $A4,$76  ; #ROOM(#PC).
 $CF5B DEFB $28,$7F  ; #ROOM(#PC).
 $CF5D DEFB $11,$0A  ; #ROOM(#PC).
 $CF5F DEFB $A5,$2D  ; #ROOM(#PC).
 $CF61 DEFB $A6,$45  ; #ROOM(#PC).
 $CF63 DEFB $2F,$4E  ; #ROOM(#PC).
 $CF65 DEFB $97,$EC  ; #ROOM(#PC).
 $CF67 DEFB $8F,$22  ; #ROOM(#PC).
 $CF69 DEFB $93,$33  ; #ROOM(#PC).
 $CF6B DEFB $93,$73  ; #ROOM(#PC).
 $CF6D DEFB $DE,$75  ; #ROOM(#PC).
 $CF6F DEFB $7F,$00  ; #ROOM(#PC).

; Room #N$0E: The Bakers
;
; #BACKGROUND($0E)(the-bakers)
b$CF71 DEFB $A0,$07  ; #ROOM(#PC).
 $CF73 DEFB $48,$07  ; #ROOM(#PC).
 $CF75 DEFB $48,$47  ; #ROOM(#PC).
 $CF77 DEFB $48,$87  ; #ROOM(#PC).
 $CF79 DEFB $48,$C7  ; #ROOM(#PC).
 $CF7B DEFB $C6,$18  ; #ROOM(#PC).
 $CF7D DEFB $C7,$A0  ; #ROOM(#PC).
 $CF7F DEFB $C7,$D0  ; #ROOM(#PC).
 $CF81 DEFB $4A,$06  ; #ROOM(#PC).
 $CF83 DEFB $49,$00  ; #ROOM(#PC).
 $CF85 DEFB $2F,$35  ; #ROOM(#PC).
 $CF87 DEFB $2F,$5D  ; #ROOM(#PC).
 $CF89 DEFB $2F,$85  ; #ROOM(#PC).
 $CF8B DEFB $62,$AE  ; #ROOM(#PC).
 $CF8D DEFB $62,$D6  ; #ROOM(#PC).
 $CF8F DEFB $E1,$DE  ; #ROOM(#PC).
 $CF91 DEFB $E1,$AE  ; #ROOM(#PC).
 $CF93 DEFB $E1,$5E  ; #ROOM(#PC).
 $CF95 DEFB $7F,$00  ; #ROOM(#PC).

; Room #N$0F: The Pub
;
; #BACKGROUND($0F)(the-pub)
b$CF97 DEFB $A0,$07  ; #ROOM(#PC).
 $CF99 DEFB $D7,$27  ; #ROOM(#PC).
 $CF9B DEFB $DA,$3E  ; #ROOM(#PC).
 $CF9D DEFB $DA,$7E  ; #ROOM(#PC).
 $CF9F DEFB $DA,$BE  ; #ROOM(#PC).
 $CFA1 DEFB $D8,$23  ; #ROOM(#PC).
 $CFA3 DEFB $D8,$4B  ; #ROOM(#PC).
 $CFA5 DEFB $D9,$7B  ; #ROOM(#PC).
 $CFA7 DEFB $D9,$BB  ; #ROOM(#PC).
 $CFA9 DEFB $D9,$7C  ; #ROOM(#PC).
 $CFAB DEFB $D9,$BC  ; #ROOM(#PC).
 $CFAD DEFB $49,$00  ; #ROOM(#PC).
 $CFAF DEFB $C6,$18  ; #ROOM(#PC).
 $CFB1 DEFB $C6,$A0  ; #ROOM(#PC).
 $CFB3 DEFB $7F,$00  ; #ROOM(#PC).

; Room #N$10: Motor Way
;
; #BACKGROUND($10)(motor-way)
b$CFB5 DEFB $80,$07  ; #ROOM(#PC).
 $CFB7 DEFB $6C,$9B  ; #ROOM(#PC).
 $CFB9 DEFB $6C,$EB  ; #ROOM(#PC).
 $CFBB DEFB $2C,$03  ; #ROOM(#PC).
 $CFBD DEFB $2C,$05  ; #ROOM(#PC).
 $CFBF DEFB $2C,$07  ; #ROOM(#PC).
 $CFC1 DEFB $8D,$00  ; #ROOM(#PC).
 $CFC3 DEFB $0F,$03  ; #ROOM(#PC).
 $CFC5 DEFB $27,$0D  ; #ROOM(#PC).
 $CFC7 DEFB $27,$55  ; #ROOM(#PC).
 $CFC9 DEFB $89,$97  ; #ROOM(#PC).
 $CFCB DEFB $89,$DF  ; #ROOM(#PC).
 $CFCD DEFB $A4,$2E  ; #ROOM(#PC).
 $CFCF DEFB $14,$37  ; #ROOM(#PC).
 $CFD1 DEFB $3B,$10  ; #ROOM(#PC).
 $CFD3 DEFB $D4,$81  ; #ROOM(#PC).
 $CFD5 DEFB $E0,$23  ; #ROOM(#PC).
 $CFD7 DEFB $7F,$00  ; #ROOM(#PC).

; Room #N$11: The Laboratory
;
; #BACKGROUND($11)(the-laboratory)
b$CFD9 DEFB $A0,$07  ; #ROOM(#PC).
 $CFDB DEFB $AB,$5F  ; #ROOM(#PC).
 $CFDD DEFB $AB,$B7  ; #ROOM(#PC).
 $CFDF DEFB $A4,$2E  ; #ROOM(#PC).
 $CFE1 DEFB $69,$6B  ; #ROOM(#PC).
 $CFE3 DEFB $49,$00  ; #ROOM(#PC).
 $CFE5 DEFB $C6,$18  ; #ROOM(#PC).
 $CFE7 DEFB $C6,$A0  ; #ROOM(#PC).
 $CFE9 DEFB $AD,$13  ; #ROOM(#PC).
 $CFEB DEFB $2D,$15  ; #ROOM(#PC).
 $CFED DEFB $7F,$00  ; #ROOM(#PC).

; Room #N$12: The Garage
;
; #BACKGROUND($12)(the-garage)
b$CFEF DEFB $80,$07  ; #ROOM(#PC).
 $CFF1 DEFB $C2,$16  ; #ROOM(#PC).
 $CFF3 DEFB $C2,$5E  ; #ROOM(#PC).
 $CFF5 DEFB $6C,$03  ; #ROOM(#PC).
 $CFF7 DEFB $6C,$E3  ; #ROOM(#PC).
 $CFF9 DEFB $6C,$53  ; #ROOM(#PC).
 $CFFB DEFB $6C,$9B  ; #ROOM(#PC).
 $CFFD DEFB $C2,$A6  ; #ROOM(#PC).
 $CFFF DEFB $4E,$D6  ; #ROOM(#PC).
 $D001 DEFB $D1,$3E  ; #ROOM(#PC).
 $D003 DEFB $D4,$01  ; #ROOM(#PC).
 $D005 DEFB $D4,$81  ; #ROOM(#PC).
 $D007 DEFB $7F,$00  ; #ROOM(#PC).

; Room #N$13: Reference Road
;
; #BACKGROUND($13)(reference-road)
b$D009 DEFB $80,$07  ; #ROOM(#PC).
 $D00B DEFB $8D,$48  ; #ROOM(#PC).
 $D00D DEFB $AA,$B8  ; #ROOM(#PC).
 $D00F DEFB $1C,$4B  ; #ROOM(#PC).
 $D011 DEFB $1C,$4D  ; #ROOM(#PC).
 $D013 DEFB $1C,$4F  ; #ROOM(#PC).
 $D015 DEFB $1C,$7B  ; #ROOM(#PC).
 $D017 DEFB $1C,$7D  ; #ROOM(#PC).
 $D019 DEFB $1C,$7F  ; #ROOM(#PC).
 $D01B DEFB $A4,$76  ; #ROOM(#PC).
 $D01D DEFB $14,$7F  ; #ROOM(#PC).
 $D01F DEFB $08,$0F  ; #ROOM(#PC).
 $D021 DEFB $11,$22  ; #ROOM(#PC).
 $D023 DEFB $30,$06  ; #ROOM(#PC).
 $D025 DEFB $1D,$5C  ; #ROOM(#PC).
 $D027 DEFB $1D,$7C  ; #ROOM(#PC).
 $D029 DEFB $1D,$9C  ; #ROOM(#PC).
 $D02B DEFB $1D,$BC  ; #ROOM(#PC).
 $D02D DEFB $1D,$DC  ; #ROOM(#PC).
 $D02F DEFB $9D,$5E  ; #ROOM(#PC).
 $D031 DEFB $9D,$9E  ; #ROOM(#PC).
 $D033 DEFB $9D,$BE  ; #ROOM(#PC).
 $D035 DEFB $9D,$DE  ; #ROOM(#PC).
 $D037 DEFB $7F,$00  ; #ROOM(#PC).

; Room #N$14: The Library
;
; #BACKGROUND($14)(the-library)
b$D039 DEFB $A0,$07  ; #ROOM(#PC).
 $D03B DEFB $AB,$27  ; #ROOM(#PC).
 $D03D DEFB $AB,$6F  ; #ROOM(#PC).
 $D03F DEFB $AB,$B7  ; #ROOM(#PC).
 $D041 DEFB $2D,$11  ; #ROOM(#PC).
 $D043 DEFB $2D,$13  ; #ROOM(#PC).
 $D045 DEFB $2D,$15  ; #ROOM(#PC).
 $D047 DEFB $2D,$61  ; #ROOM(#PC).
 $D049 DEFB $2D,$63  ; #ROOM(#PC).
 $D04B DEFB $2D,$65  ; #ROOM(#PC).
 $D04D DEFB $2D,$B1  ; #ROOM(#PC).
 $D04F DEFB $2D,$B3  ; #ROOM(#PC).
 $D051 DEFB $2D,$B5  ; #ROOM(#PC).
 $D053 DEFB $49,$00  ; #ROOM(#PC).
 $D055 DEFB $7F,$00  ; #ROOM(#PC).

; Room #N$15: Penny Lane
;
; #BACKGROUND($15)(penny-lane)
b$D057 DEFB $80,$07  ; #ROOM(#PC).
 $D059 DEFB $16,$03  ; #ROOM(#PC).
 $D05B DEFB $16,$05  ; #ROOM(#PC).
 $D05D DEFB $16,$07  ; #ROOM(#PC).
 $D05F DEFB $B6,$04  ; #ROOM(#PC).
 $D061 DEFB $90,$7A  ; #ROOM(#PC).
 $D063 DEFB $0D,$80  ; #ROOM(#PC).
 $D065 DEFB $0C,$83  ; #ROOM(#PC).
 $D067 DEFB $0C,$85  ; #ROOM(#PC).
 $D069 DEFB $0C,$87  ; #ROOM(#PC).
 $D06B DEFB $8F,$03  ; #ROOM(#PC).
 $D06D DEFB $8F,$82  ; #ROOM(#PC).
 $D06F DEFB $A4,$2E  ; #ROOM(#PC).
 $D071 DEFB $14,$37  ; #ROOM(#PC).
 $D073 DEFB $14,$C7  ; #ROOM(#PC).
 $D075 DEFB $A2,$BE  ; #ROOM(#PC).
 $D077 DEFB $35,$0F  ; #ROOM(#PC).
 $D079 DEFB $93,$96  ; #ROOM(#PC).
 $D07B DEFB $8E,$E6  ; #ROOM(#PC).
 $D07D DEFB $A7,$56  ; #ROOM(#PC).
 $D07F DEFB $0D,$01  ; #ROOM(#PC).
 $D081 DEFB $93,$93  ; #ROOM(#PC).
 $D083 DEFB $93,$DB  ; #ROOM(#PC).
 $D085 DEFB $3A,$80  ; #ROOM(#PC).
 $D087 DEFB $BB,$20  ; #ROOM(#PC).
 $D089 DEFB $7F,$00  ; #ROOM(#PC).

; Room #N$16: The Bank
;
; #BACKGROUND($16)(the-bank)
b$D08B DEFB $80,$07  ; #ROOM(#PC).
 $D08D DEFB $BC,$44  ; #ROOM(#PC).
 $D08F DEFB $3D,$4D  ; #ROOM(#PC).
 $D091 DEFB $3D,$7D  ; #ROOM(#PC).
 $D093 DEFB $3D,$AD  ; #ROOM(#PC).
 $D095 DEFB $40,$5F  ; #ROOM(#PC).
 $D097 DEFB $40,$8F  ; #ROOM(#PC).
 $D099 DEFB $40,$BF  ; #ROOM(#PC).
 $D09B DEFB $C1,$26  ; #ROOM(#PC).
 $D09D DEFB $C1,$36  ; #ROOM(#PC).
 $D09F DEFB $BE,$12  ; #ROOM(#PC).
 $D0A1 DEFB $BF,$17  ; #ROOM(#PC).
 $D0A3 DEFB $BF,$4F  ; #ROOM(#PC).
 $D0A5 DEFB $BF,$87  ; #ROOM(#PC).
 $D0A7 DEFB $BF,$BF  ; #ROOM(#PC).
 $D0A9 DEFB $38,$EF  ; #ROOM(#PC).
 $D0AB DEFB $49,$00  ; #ROOM(#PC).
 $D0AD DEFB $7F,$00  ; #ROOM(#PC).

; Room #N$17: Wally's House
;
; #BACKGROUND($17)(wallys-house)
b$D0AF DEFB $A0,$07  ; #ROOM(#PC).
 $D0B1 DEFB $C4,$07  ; #ROOM(#PC).
 $D0B3 DEFB $AB,$1F  ; #ROOM(#PC).
 $D0B5 DEFB $C4,$67  ; #ROOM(#PC).
 $D0B7 DEFB $C3,$97  ; #ROOM(#PC).
 $D0B9 DEFB $C7,$38  ; #ROOM(#PC).
 $D0BB DEFB $C7,$78  ; #ROOM(#PC).
 $D0BD DEFB $C7,$B8  ; #ROOM(#PC).
 $D0BF DEFB $49,$00  ; #ROOM(#PC).
 $D0C1 DEFB $7F,$00  ; #ROOM(#PC).

; Room #N$18: Meat Street
;
; #BACKGROUND($18)(meat-street)
b$D0C3 DEFB $80,$07  ; #ROOM(#PC).
 $D0C5 DEFB $0D,$20  ; #ROOM(#PC).
 $D0C7 DEFB $8F,$22  ; #ROOM(#PC).
 $D0C9 DEFB $1C,$25  ; #ROOM(#PC).
 $D0CB DEFB $8A,$9F  ; #ROOM(#PC).
 $D0CD DEFB $1C,$27  ; #ROOM(#PC).
 $D0CF DEFB $07,$DF  ; #ROOM(#PC).
 $D0D1 DEFB $08,$07  ; #ROOM(#PC).
 $D0D3 DEFB $1C,$23  ; #ROOM(#PC).
 $D0D5 DEFB $28,$37  ; #ROOM(#PC).
 $D0D7 DEFB $A2,$2E  ; #ROOM(#PC).
 $D0D9 DEFB $A5,$55  ; #ROOM(#PC).
 $D0DB DEFB $A6,$75  ; #ROOM(#PC).
 $D0DD DEFB $2E,$66  ; #ROOM(#PC).
 $D0DF DEFB $2E,$86  ; #ROOM(#PC).
 $D0E1 DEFB $97,$EC  ; #ROOM(#PC).
 $D0E3 DEFB $5F,$34  ; #ROOM(#PC).
 $D0E5 DEFB $7F,$00  ; #ROOM(#PC).

; Room #N$19: The Butchers
;
; #BACKGROUND($19)(the-butchers)
b$D0E7 DEFB $A0,$07  ; #ROOM(#PC).
 $D0E9 DEFB $48,$2F  ; #ROOM(#PC).
 $D0EB DEFB $48,$6F  ; #ROOM(#PC).
 $D0ED DEFB $48,$AF  ; #ROOM(#PC).
 $D0EF DEFB $C5,$02  ; #ROOM(#PC).
 $D0F1 DEFB $C6,$18  ; #ROOM(#PC).
 $D0F3 DEFB $C6,$A0  ; #ROOM(#PC).
 $D0F5 DEFB $2E,$23  ; #ROOM(#PC).
 $D0F7 DEFB $2E,$43  ; #ROOM(#PC).
 $D0F9 DEFB $2E,$63  ; #ROOM(#PC).
 $D0FB DEFB $2E,$83  ; #ROOM(#PC).
 $D0FD DEFB $2E,$A3  ; #ROOM(#PC).
 $D0FF DEFB $2E,$C3  ; #ROOM(#PC).
 $D101 DEFB $2E,$E3  ; #ROOM(#PC).
 $D103 DEFB $49,$00  ; #ROOM(#PC).
 $D105 DEFB $4C,$0E  ; #ROOM(#PC).
 $D107 DEFB $7F,$00  ; #ROOM(#PC).

; Room #N$1A: Trunk Road
;
; #BACKGROUND($1A)(trunk-road)
b$D109 DEFB $80,$07  ; #ROOM(#PC).
 $D10B DEFB $63,$05  ; #ROOM(#PC).
 $D10D DEFB $07,$DF  ; #ROOM(#PC).
 $D10F DEFB $8B,$06  ; #ROOM(#PC).
 $D111 DEFB $A3,$46  ; #ROOM(#PC).
 $D113 DEFB $A3,$66  ; #ROOM(#PC).
 $D115 DEFB $64,$03  ; #ROOM(#PC).
 $D117 DEFB $9E,$2E  ; #ROOM(#PC).
 $D119 DEFB $A3,$86  ; #ROOM(#PC).
 $D11B DEFB $A3,$9E  ; #ROOM(#PC).
 $D11D DEFB $11,$AA  ; #ROOM(#PC).
 $D11F DEFB $31,$E7  ; #ROOM(#PC).
 $D121 DEFB $67,$85  ; #ROOM(#PC).
 $D123 DEFB $7F,$00  ; #ROOM(#PC).

; Room #N$1B: The Zoo
;
; #BACKGROUND($1B)(the-zoo)
b$D125 DEFB $80,$07  ; #ROOM(#PC).
 $D127 DEFB $64,$83  ; #ROOM(#PC).
 $D129 DEFB $63,$85  ; #ROOM(#PC).
 $D12B DEFB $63,$87  ; #ROOM(#PC).
 $D12D DEFB $0E,$96  ; #ROOM(#PC).
 $D12F DEFB $0E,$DE  ; #ROOM(#PC).
 $D131 DEFB $E5,$03  ; #ROOM(#PC).
 $D133 DEFB $7F,$00  ; #ROOM(#PC).

; Room #N$1C: Rail Road
;
; #BACKGROUND($1C)(rail-road)
b$D135 DEFB $80,$07  ; #ROOM(#PC).
 $D137 DEFB $A3,$06  ; #ROOM(#PC).
 $D139 DEFB $A3,$26  ; #ROOM(#PC).
 $D13B DEFB $0C,$47  ; #ROOM(#PC).
 $D13D DEFB $0C,$45  ; #ROOM(#PC).
 $D13F DEFB $0C,$43  ; #ROOM(#PC).
 $D141 DEFB $9B,$42  ; #ROOM(#PC).
 $D143 DEFB $0D,$40  ; #ROOM(#PC).
 $D145 DEFB $08,$C7  ; #ROOM(#PC).
 $D147 DEFB $08,$E7  ; #ROOM(#PC).
 $D149 DEFB $9E,$76  ; #ROOM(#PC).
 $D14B DEFB $1D,$56  ; #ROOM(#PC).
 $D14D DEFB $1D,$A6  ; #ROOM(#PC).
 $D14F DEFB $73,$2C  ; #ROOM(#PC).
 $D151 DEFB $7F,$00  ; #ROOM(#PC).

; Room #N$1D: The Station
;
; #BACKGROUND($1D)(the-station)
b$D153 DEFB $80,$07  ; #ROOM(#PC).
 $D155 DEFB $0D,$00  ; #ROOM(#PC).
 $D157 DEFB $0D,$80  ; #ROOM(#PC).
 $D159 DEFB $9B,$02  ; #ROOM(#PC).
 $D15B DEFB $9B,$82  ; #ROOM(#PC).
 $D15D DEFB $1F,$13  ; #ROOM(#PC).
 $D15F DEFB $1F,$7B  ; #ROOM(#PC).
 $D161 DEFB $1F,$E3  ; #ROOM(#PC).
 $D163 DEFB $85,$9F  ; #ROOM(#PC).
 $D165 DEFB $85,$37  ; #ROOM(#PC).
 $D167 DEFB $73,$44  ; #ROOM(#PC).
 $D169 DEFB $73,$AC  ; #ROOM(#PC).
 $D16B DEFB $7F,$00  ; #ROOM(#PC).

; Room #N$1E: The Docks
;
; #BACKGROUND($1E)(the-docks)
b$D16D DEFB $A0,$07  ; #ROOM(#PC).
 $D16F DEFB $83,$77  ; #ROOM(#PC).
 $D171 DEFB $D5,$0C  ; #ROOM(#PC).
 $D173 DEFB $07,$9F  ; #ROOM(#PC).
 $D175 DEFB $08,$C7  ; #ROOM(#PC).
 $D177 DEFB $08,$E7  ; #ROOM(#PC).
 $D179 DEFB $D6,$C0  ; #ROOM(#PC).
 $D17B DEFB $7F,$00  ; #ROOM(#PC).

; Room #N$1F: The Sewer
;
; #BACKGROUND($1F)(the-sewer)
b$D17D DEFB $80,$07  ; #ROOM(#PC).
 $D17F DEFB $01,$04  ; #ROOM(#PC).
 $D181 DEFB $02,$D4  ; #ROOM(#PC).
 $D183 DEFB $ED,$31  ; #ROOM(#PC).
 $D185 DEFB $ED,$82  ; #ROOM(#PC).
 $D187 DEFB $ED,$75  ; #ROOM(#PC).
 $D189 DEFB $6D,$B1  ; #ROOM(#PC).
 $D18B DEFB $ED,$16  ; #ROOM(#PC).
 $D18D DEFB $6D,$DE  ; #ROOM(#PC).
 $D18F DEFB $7F,$00  ; #ROOM(#PC).

; Room #N$20: The Cave
;
; #BACKGROUND($20)(the-cave)
b$D191 DEFB $80,$07  ; #ROOM(#PC).
 $D193 DEFB $52,$00  ; #ROOM(#PC).
 $D195 DEFB $52,$18  ; #ROOM(#PC).
 $D197 DEFB $52,$58  ; #ROOM(#PC).
 $D199 DEFB $52,$88  ; #ROOM(#PC).
 $D19B DEFB $52,$98  ; #ROOM(#PC).
 $D19D DEFB $52,$C8  ; #ROOM(#PC).
 $D19F DEFB $53,$30  ; #ROOM(#PC).
 $D1A1 DEFB $53,$48  ; #ROOM(#PC).
 $D1A3 DEFB $53,$70  ; #ROOM(#PC).
 $D1A5 DEFB $53,$B0  ; #ROOM(#PC).
 $D1A7 DEFB $53,$D8  ; #ROOM(#PC).
 $D1A9 DEFB $53,$F0  ; #ROOM(#PC).
 $D1AB DEFB $6D,$2C  ; #ROOM(#PC).
 $D1AD DEFB $ED,$8C  ; #ROOM(#PC).
 $D1AF DEFB $6D,$BD  ; #ROOM(#PC).
 $D1B1 DEFB $EF,$17  ; #ROOM(#PC).
 $D1B3 DEFB $6E,$26  ; #ROOM(#PC).
 $D1B5 DEFB $6E,$76  ; #ROOM(#PC).
 $D1B7 DEFB $6E,$D6  ; #ROOM(#PC).
 $D1B9 DEFB $7F,$00  ; #ROOM(#PC).

; Data block at D1BB
b$D1BB DEFB $00

; Graphics
@label=Graphics
b$D1BC DEFB $00,$FF,$FE,$01,$03,$01,$00,$00 ; #UDG(#PC)
 $D1C4 DEFB $00,$FF,$7F,$80,$C0,$80,$00,$00 ; #UDG(#PC)
 $D1CC DEFB $00,$FF,$FF,$00,$00,$00,$00,$00 ; #UDG(#PC)
 $D1D4 DEFB $D8,$D8,$DC,$CC,$CC,$CE,$C6,$C6 ; #UDG(#PC)
 $D1DC DEFB $18,$1B,$1B,$DB,$DB,$DB,$DB,$DB ; #UDG(#PC)
 $D1E4 DEFB $30,$30,$36,$36,$66,$66,$66,$66 ; #UDG(#PC)
 $D1EC DEFB $38,$00,$38,$FE,$BE,$BE,$5C,$5C ; #UDG(#PC)
 $D1F4 DEFB $5C,$BE,$BE,$BE,$BE,$BE,$BE,$5C ; #UDG(#PC)
 $D1FC DEFB $00,$BE,$40,$BE,$BE,$BE,$40,$BE ; #UDG(#PC)
 $D204 DEFB $CE,$FE,$00,$2F,$2F,$37,$30,$30 ; #UDG(#PC)
 $D20C DEFB $FF,$FF,$00,$FF,$FF,$FF,$00,$00 ; #UDG(#PC)
 $D214 DEFB $FF,$FF,$00,$F4,$F4,$EC,$0C,$0C ; #UDG(#PC)
 $D21C DEFB $0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C ; #UDG(#PC)
 $D224 DEFB $30,$30,$30,$30,$30,$30,$30,$30 ; #UDG(#PC)
 $D22C DEFB $ED,$ED,$0C,$6C,$6C,$6C,$6C,$6C ; #UDG(#PC)
 $D234 DEFB $6C,$6C,$6C,$6C,$6C,$6C,$6C,$6C ; #UDG(#PC)
 $D23C DEFB $FF,$FF,$00,$2F,$2F,$37,$30,$30 ; #UDG(#PC)
 $D244 DEFB $81,$00,$FF,$FF,$00,$FF,$FF,$00 ; #UDG(#PC)
 $D24C DEFB $7E,$FF,$7F,$77,$EB,$77,$7F,$FF ; #UDG(#PC)
 $D254 DEFB $31,$00,$1F,$7F,$00,$FF,$FF,$00 ; #UDG(#PC)
 $D25C DEFB $8C,$00,$F8,$FE,$00,$FF,$FF,$00 ; #UDG(#PC)
 $D264 DEFB $1E,$3F,$7F,$7B,$75,$7B,$7F,$7F ; #UDG(#PC)
 $D26C DEFB $78,$FC,$7E,$6E,$D6,$6E,$7E,$FE ; #UDG(#PC)
 $D274 DEFB $3C,$3C,$3C,$3C,$3C,$3C,$3C,$3C ; #UDG(#PC)
 $D27C DEFB $00,$FF,$BF,$C0,$DB,$DA,$DB,$00 ; #UDG(#PC)
 $D284 DEFB $00,$FF,$FF,$00,$FF,$00,$FF,$00 ; #UDG(#PC)
 $D28C DEFB $00,$FF,$FD,$03,$DB,$5B,$DB,$00 ; #UDG(#PC)
 $D294 DEFB $01,$07,$1D,$33,$6F,$7F,$00,$00 ; #UDG(#PC)
 $D29C DEFB $C3,$7F,$FF,$FF,$FF,$FF,$00,$3C ; #UDG(#PC)
 $D2A4 DEFB $80,$E0,$F8,$FC,$FE,$FE,$00,$00 ; #UDG(#PC)
 $D2AC DEFB $18,$18,$18,$18,$18,$18,$2C,$2C ; #UDG(#PC)
 $D2B4 DEFB $C0,$BF,$BF,$C0,$DF,$DF,$D0,$D0 ; #UDG(#PC)
 $D2BC DEFB $00,$FF,$FF,$00,$FF,$FF,$00,$00 ; #UDG(#PC)
 $D2C4 DEFB $03,$FD,$FD,$03,$FB,$FB,$0B,$0B ; #UDG(#PC)
 $D2CC DEFB $C2,$C4,$C8,$D0,$C0,$C0,$C4,$C8 ; #UDG(#PC)
 $D2D4 DEFB $03,$0B,$13,$23,$43,$03,$0B,$13 ; #UDG(#PC)
 $D2DC DEFB $7F,$CC,$BF,$3F,$C0,$C0,$C0,$C0 ; #UDG(#PC)
 $D2E4 DEFB $FF,$99,$FF,$FF,$00,$00,$00,$00 ; #UDG(#PC)
 $D2EC DEFB $FE,$9B,$FF,$FC,$03,$03,$03,$03 ; #UDG(#PC)
 $D2F4 DEFB $00,$00,$00,$00,$18,$E7,$FF,$18 ; #UDG(#PC)
 $D2FC DEFB $00,$00,$00,$00,$00,$FF,$FF,$00 ; #UDG(#PC)
 $D304 DEFB $BF,$BF,$BF,$BF,$BF,$BF,$80,$FF ; #UDG(#PC)
 $D30C DEFB $FF,$E7,$99,$99,$C3,$FF,$00,$FF ; #UDG(#PC)
 $D314 DEFB $FD,$FD,$FD,$FD,$FD,$FD,$01,$FF ; #UDG(#PC)
 $D31C DEFB $FF,$FF,$CC,$D5,$CC,$D5,$C5,$FF ; #UDG(#PC)
 $D324 DEFB $FF,$FF,$C6,$5D,$C4,$5D,$45,$FF ; #UDG(#PC)
 $D32C DEFB $FF,$FF,$CF,$57,$57,$57,$4F,$FF ; #UDG(#PC)
 $D334 DEFB $08,$08,$18,$1C,$3C,$BB,$BB,$3C ; #UDG(#PC)
 $D33C DEFB $34,$2C,$2C,$BB,$BB,$3C,$34,$2C ; #UDG(#PC)
 $D344 DEFB $3C,$34,$34,$2C,$2C,$34,$34,$3C ; #UDG(#PC)
 $D34C DEFB $7D,$81,$81,$81,$81,$81,$81,$7D ; #UDG(#PC)
 $D354 DEFB $81,$80,$C2,$C2,$80,$81,$81,$7D ; #UDG(#PC)
 $D35C DEFB $20,$64,$44,$16,$B2,$D0,$46,$0C ; #UDG(#PC)
 $D364 DEFB $00,$20,$64,$46,$02,$10,$30,$00 ; #UDG(#PC)
 $D36C DEFB $81,$C3,$4A,$18,$10,$C6,$63,$00 ; #UDG(#PC)
 $D374 DEFB $00,$00,$03,$06,$00,$09,$1B,$12 ; #UDG(#PC)
 $D37C DEFB $00,$00,$60,$30,$00,$88,$CC,$44 ; #UDG(#PC)
 $D384 DEFB $60,$64,$CC,$08,$20,$60,$40,$00 ; #UDG(#PC)
 $D38C DEFB $02,$33,$19,$00,$00,$0C,$06,$00 ; #UDG(#PC)
 $D394 DEFB $DD,$CD,$6E,$6E,$77,$77,$6F,$EF ; #UDG(#PC)
 $D39C DEFB $EE,$EE,$FE,$B7,$B7,$77,$7B,$7B ; #UDG(#PC)
 $D3A4 DEFB $F0,$3C,$0E,$07,$03,$03,$01,$01 ; #UDG(#PC)
 $D3AC DEFB $18,$38,$74,$F6,$F7,$EF,$ED,$DE ; #UDG(#PC)
 $D3B4 DEFB $10,$10,$30,$78,$BD,$BD,$DB,$DB ; #UDG(#PC)
 $D3BC DEFB $03,$06,$0E,$3C,$F8,$E0,$C0,$80 ; #UDG(#PC)
 $D3C4 DEFB $01,$01,$03,$03,$07,$0E,$3C,$F0 ; #UDG(#PC)
 $D3CC DEFB $DE,$ED,$EF,$F7,$F6,$74,$38,$18 ; #UDG(#PC)
 $D3D4 DEFB $DB,$DB,$BD,$BD,$78,$30,$10,$10 ; #UDG(#PC)
 $D3DC DEFB $80,$C0,$E0,$F8,$3C,$0E,$06,$03 ; #UDG(#PC)
 $D3E4 DEFB $6F,$EF,$E0,$E0,$E0,$E0,$E0,$80 ; #UDG(#PC)
 $D3EC DEFB $FF,$E7,$18,$18,$18,$18,$18,$18 ; #UDG(#PC)
 $D3F4 DEFB $F6,$F7,$07,$07,$07,$07,$07,$01 ; #UDG(#PC)
 $D3FC DEFB $70,$F8,$98,$60,$60,$6F,$9F,$FF ; #UDG(#PC)
 $D404 DEFB $18,$18,$18,$18,$00,$FF,$FF,$FF ; #UDG(#PC)
 $D40C DEFB $0E,$1F,$19,$06,$06,$F6,$F9,$FF ; #UDG(#PC)
 $D414 DEFB $38,$38,$38,$70,$70,$70,$E0,$E0 ; #UDG(#PC)
 $D41C DEFB $1C,$1C,$1C,$0E,$0E,$0E,$07,$07 ; #UDG(#PC)
 $D424 DEFB $00,$7F,$80,$FF,$7F,$00,$0E,$03 ; #UDG(#PC)
 $D42C DEFB $00,$FF,$00,$FF,$FF,$00,$AA,$55 ; #UDG(#PC)
 $D434 DEFB $00,$FE,$01,$FF,$FE,$00,$F0,$C0 ; #UDG(#PC)
 $D43C DEFB $EA,$35,$1A,$0D,$0E,$07,$06,$07 ; #UDG(#PC)
 $D444 DEFB $AF,$5C,$B8,$50,$B0,$60,$A0,$60 ; #UDG(#PC)
 $D44C DEFB $AA,$55,$AA,$55,$AA,$55,$AA,$55 ; #UDG(#PC)
 $D454 DEFB $00,$03,$0F,$09,$06,$03,$0F,$07 ; #UDG(#PC)
 $D45C DEFB $00,$80,$C0,$E0,$E0,$60,$C0,$A0 ; #UDG(#PC)
 $D464 DEFB $80,$C1,$A3,$93,$8A,$85,$43,$4C ; #UDG(#PC)
 $D46C DEFB $78,$7C,$AC,$9C,$78,$E0,$98,$78 ; #UDG(#PC)
 $D474 DEFB $32,$C2,$22,$25,$25,$15,$14,$0A ; #UDG(#PC)
 $D47C DEFB $F8,$F0,$F0,$E0,$C0,$E3,$FA,$F9 ; #UDG(#PC)
 $D484 DEFB $03,$01,$01,$01,$00,$00,$03,$07 ; #UDG(#PC)
 $D48C DEFB $73,$83,$C1,$C0,$E0,$00,$60,$A0 ; #UDG(#PC)
 $D494 DEFB $BF,$5E,$2C,$2C,$2C,$2C,$5E,$5E ; #UDG(#PC)
 $D49C DEFB $2C,$2C,$2C,$AB,$AB,$2C,$2C,$2C ; #UDG(#PC)
 $D4A4 DEFB $00,$60,$90,$B7,$B7,$90,$60,$00 ; #UDG(#PC)
 $D4AC DEFB $00,$06,$09,$EB,$EB,$09,$06,$00 ; #UDG(#PC)
 $D4B4 DEFB $2C,$2C,$2C,$5E,$5E,$BF,$FF,$00 ; #UDG(#PC)
 $D4BC DEFB $2C,$2C,$2C,$2C,$2C,$2C,$2C,$2C ; #UDG(#PC)
 $D4C4 DEFB $0B,$05,$05,$05,$05,$04,$03,$03 ; #UDG(#PC)
 $D4CC DEFB $E7,$FF,$D3,$D3,$FF,$00,$FF,$C3 ; #UDG(#PC)
 $D4D4 DEFB $D0,$A0,$A0,$A0,$A0,$20,$C0,$C0 ; #UDG(#PC)
 $D4DC DEFB $00,$03,$0E,$19,$37,$2B,$0B,$0B ; #UDG(#PC)
 $D4E4 DEFB $FF,$81,$7E,$FF,$FF,$E7,$C3,$D3 ; #UDG(#PC)
 $D4EC DEFB $00,$C0,$70,$98,$EC,$D4,$D0,$D0 ; #UDG(#PC)
 $D4F4 DEFB $3C,$5E,$5E,$2C,$18,$2C,$5E,$00 ; #UDG(#PC)
 $D4FC DEFB $1F,$71,$F7,$FB,$FB,$FD,$71,$1F ; #UDG(#PC)
 $D504 DEFB $FF,$11,$B5,$B5,$B5,$B5,$B1,$FF ; #UDG(#PC)
 $D50C DEFB $F8,$1E,$5F,$5F,$1F,$7F,$7E,$F8 ; #UDG(#PC)
 $D514 DEFB $00,$DF,$DF,$DF,$00,$FB,$FB,$FB ; #UDG(#PC)
 $D51C DEFB $FF,$FF,$FE,$00,$7F,$7F,$3F,$80 ; #UDG(#PC)
 $D524 DEFB $7F,$7F,$3F,$80,$FF,$FF,$FE,$00 ; #UDG(#PC)
 $D52C DEFB $00,$00,$70,$97,$D7,$D7,$F7,$00 ; #UDG(#PC)
 $D534 DEFB $3C,$18,$00,$FF,$C3,$DB,$18,$00 ; #UDG(#PC)
 $D53C DEFB $00,$00,$00,$FF,$FF,$FF,$00,$00 ; #UDG(#PC)
 $D544 DEFB $00,$00,$FF,$7F,$7F,$7F,$D2,$2C ; #UDG(#PC)
 $D54C DEFB $16,$16,$16,$16,$16,$16,$16,$16 ; #UDG(#PC)
 $D554 DEFB $16,$96,$C9,$BF,$BF,$C9,$96,$16 ; #UDG(#PC)
 $D55C DEFB $00,$55,$2A,$55,$2A,$55,$2A,$7F ; #UDG(#PC)
 $D564 DEFB $00,$55,$AB,$55,$AB,$55,$AB,$FF ; #UDG(#PC)
 $D56C DEFB $00,$33,$67,$33,$00,$67,$CF,$CF ; #UDG(#PC)
 $D574 DEFB $00,$FC,$FE,$FC,$00,$FE,$FF,$FF ; #UDG(#PC)
 $D57C DEFB $67,$CF,$CF,$67,$00,$67,$67,$00 ; #UDG(#PC)
 $D584 DEFB $FE,$FF,$FF,$FE,$00,$FE,$FE,$00 ; #UDG(#PC)
 $D58C DEFB $33,$33,$33,$33,$33,$33,$33,$33 ; #UDG(#PC)
 $D594 DEFB $7C,$7C,$7C,$7C,$7C,$7C,$7C,$7C ; #UDG(#PC)
 $D59C DEFB $EF,$9C,$38,$70,$66,$6E,$3C,$00 ; #UDG(#PC)
 $D5A4 DEFB $FF,$80,$90,$A2,$84,$88,$92,$A4 ; #UDG(#PC)
 $D5AC DEFB $FF,$01,$21,$41,$05,$09,$11,$21 ; #UDG(#PC)
 $D5B4 DEFB $80,$88,$90,$A1,$82,$84,$88,$80 ; #UDG(#PC)
 $D5BC DEFB $09,$11,$21,$41,$09,$11,$21,$01 ; #UDG(#PC)
 $D5C4 DEFB $80,$80,$80,$B8,$B8,$B8,$B8,$B8 ; #UDG(#PC)
 $D5CC DEFB $80,$88,$90,$A2,$84,$88,$80,$FF ; #UDG(#PC)
 $D5D4 DEFB $01,$11,$21,$41,$05,$09,$01,$FF ; #UDG(#PC)
 $D5DC DEFB $3E,$7F,$7F,$38,$C7,$EF,$EF,$C0 ; #UDG(#PC)
 $D5E4 DEFB $3C,$FF,$3F,$BF,$3F,$BF,$7F,$C3 ; #UDG(#PC)
 $D5EC DEFB $F7,$F7,$D7,$F7,$EF,$EF,$EF,$EF ; #UDG(#PC)
 $D5F4 DEFB $EF,$EF,$EF,$EF,$EF,$F7,$B7,$EF ; #UDG(#PC)
 $D5FC DEFB $00,$7F,$60,$5F,$50,$50,$50,$50 ; #UDG(#PC)
 $D604 DEFB $00,$FF,$00,$FF,$00,$00,$00,$00 ; #UDG(#PC)
 $D60C DEFB $00,$FE,$06,$FA,$0A,$0A,$0A,$0A ; #UDG(#PC)
 $D614 DEFB $50,$50,$50,$50,$5F,$60,$7F,$00 ; #UDG(#PC)
 $D61C DEFB $00,$00,$00,$00,$FF,$00,$FF,$00 ; #UDG(#PC)
 $D624 DEFB $0A,$0A,$0A,$0A,$FA,$06,$FE,$00 ; #UDG(#PC)
 $D62C DEFB $02,$24,$48,$10,$22,$44,$88,$10 ; #UDG(#PC)
 $D634 DEFB $50,$50,$50,$50,$50,$50,$50,$50 ; #UDG(#PC)
 $D63C DEFB $0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A ; #UDG(#PC)
 $D644 DEFB $FF,$81,$BD,$AD,$A5,$BD,$81,$FF ; #UDG(#PC)
 $D64C DEFB $FF,$81,$FD,$CD,$A5,$A5,$CD,$FF ; #UDG(#PC)
 $D654 DEFB $00,$79,$67,$4F,$1C,$38,$38,$70 ; #UDG(#PC)
 $D65C DEFB $3C,$FF,$FF,$00,$00,$00,$00,$00 ; #UDG(#PC)
 $D664 DEFB $00,$8F,$E7,$F3,$38,$1C,$1C,$0E ; #UDG(#PC)
 $D66C DEFB $70,$00,$70,$70,$70,$70,$70,$70 ; #UDG(#PC)
 $D674 DEFB $0E,$00,$0E,$0E,$0E,$0E,$0E,$0E ; #UDG(#PC)
 $D67C DEFB $50,$50,$50,$00,$7F,$FF,$FF,$00 ; #UDG(#PC)
 $D684 DEFB $00,$00,$00,$00,$FF,$FF,$FF,$00 ; #UDG(#PC)
 $D68C DEFB $0A,$0A,$0A,$00,$FE,$FF,$FF,$00 ; #UDG(#PC)
 $D694 DEFB $FF,$7F,$80,$BF,$CF,$D0,$D8,$D8 ; #UDG(#PC)
 $D69C DEFB $FF,$FF,$00,$FF,$FF,$00,$00,$00 ; #UDG(#PC)
 $D6A4 DEFB $FF,$FE,$01,$FD,$F3,$0B,$1B,$1B ; #UDG(#PC)
 $D6AC DEFB $D8,$D8,$D8,$D8,$D8,$D8,$D8,$D8 ; #UDG(#PC)
 $D6B4 DEFB $1B,$1B,$1B,$1B,$1B,$1B,$1B,$1B ; #UDG(#PC)
 $D6BC DEFB $E0,$DF,$DF,$E0,$E0,$E0,$E0,$E0 ; #UDG(#PC)
 $D6C4 DEFB $00,$FF,$FF,$00,$00,$00,$00,$00 ; #UDG(#PC)
 $D6CC DEFB $07,$FB,$FB,$07,$07,$07,$07,$07 ; #UDG(#PC)
 $D6D4 DEFB $3C,$BD,$A5,$18,$3C,$18,$24,$24 ; #UDG(#PC)
 $D6DC DEFB $18,$18,$18,$18,$24,$24,$24,$24 ; #UDG(#PC)
 $D6E4 DEFB $18,$18,$18,$18,$67,$7F,$67,$18 ; #UDG(#PC)
 $D6EC DEFB $00,$00,$00,$00,$00,$FF,$FF,$FF ; #UDG(#PC)
 $D6F4 DEFB $18,$18,$18,$18,$E6,$FE,$E6,$18 ; #UDG(#PC)
 $D6FC DEFB $E0,$E0,$E0,$E0,$E0,$E0,$E0,$E0 ; #UDG(#PC)
 $D704 DEFB $07,$07,$07,$07,$07,$07,$07,$07 ; #UDG(#PC)
 $D70C DEFB $38,$01,$7F,$81,$BE,$BF,$BF,$BF ; #UDG(#PC)
 $D714 DEFB $C0,$F0,$9C,$87,$61,$99,$E7,$FB ; #UDG(#PC)
 $D71C DEFB $A2,$AB,$AB,$A2,$BF,$BF,$80,$7F ; #UDG(#PC)
 $D724 DEFB $2D,$6D,$6D,$25,$FD,$FD,$01,$FE ; #UDG(#PC)
 $D72C DEFB $18,$18,$18,$0C,$0C,$06,$06,$46 ; #UDG(#PC)
 $D734 DEFB $54,$3A,$67,$6F,$76,$3C,$18,$18 ; #UDG(#PC)
 $D73C DEFB $10,$28,$34,$3C,$3E,$7E,$7E,$FF ; #UDG(#PC)
 $D744 DEFB $00,$01,$01,$03,$03,$07,$07,$03 ; #UDG(#PC)
 $D74C DEFB $E3,$97,$4F,$BF,$FF,$FC,$E3,$DF ; #UDG(#PC)
 $D754 DEFB $80,$C0,$C0,$A0,$60,$E0,$C0,$00 ; #UDG(#PC)
 $D75C DEFB $AA,$DB,$00,$7F,$7F,$7F,$80,$FF ; #UDG(#PC)
 $D764 DEFB $AA,$6D,$00,$FF,$FF,$FF,$00,$FF ; #UDG(#PC)
 $D76C DEFB $55,$B7,$00,$FE,$FE,$FE,$01,$FF ; #UDG(#PC)
 $D774 DEFB $00,$0F,$00,$06,$06,$00,$0F,$00 ; #UDG(#PC)
 $D77C DEFB $00,$F0,$00,$60,$60,$00,$F0,$00 ; #UDG(#PC)
 $D784 DEFB $1A,$0B,$00,$0F,$0F,$0F,$10,$1F ; #UDG(#PC)
 $D78C DEFB $A8,$50,$00,$F0,$F0,$F0,$08,$F8 ; #UDG(#PC)
 $D794 DEFB $00,$C1,$77,$7A,$38,$3C,$18,$00 ; #UDG(#PC)
 $D79C DEFB $00,$7F,$03,$01,$01,$01,$07,$3F ; #UDG(#PC)
 $D7A4 DEFB $00,$FE,$C0,$80,$80,$80,$E0,$FC ; #UDG(#PC)
 $D7AC DEFB $00,$00,$7B,$CD,$B5,$BB,$C0,$7E ; #UDG(#PC)
 $D7B4 DEFB $00,$00,$F8,$FC,$FC,$F8,$00,$FF ; #UDG(#PC)
 $D7BC DEFB $EF,$EF,$F7,$F8,$F0,$F0,$F0,$F0 ; #UDG(#PC)
 $D7C4 DEFB $F7,$F7,$EF,$1F,$0F,$0F,$0F,$0F ; #UDG(#PC)
 $D7CC DEFB $F0,$F0,$F0,$F0,$F8,$F7,$EF,$EF ; #UDG(#PC)
 $D7D4 DEFB $0F,$0F,$0F,$0F,$1F,$EF,$F7,$F7 ; #UDG(#PC)
 $D7DC DEFB $FF,$FF,$FF,$00,$00,$00,$00,$00 ; #UDG(#PC)
 $D7E4 DEFB $0F,$0F,$0F,$0F,$0F,$0F,$0F,$0F ; #UDG(#PC)
 $D7EC DEFB $00,$00,$00,$00,$00,$FF,$FF,$FF ; #UDG(#PC)
 $D7F4 DEFB $F0,$F0,$F0,$F0,$F0,$F0,$F0,$F0 ; #UDG(#PC)
 $D7FC DEFB $00,$FF,$FF,$81,$D5,$D0,$FF,$00 ; #UDG(#PC)
 $D804 DEFB $00,$FF,$FF,$04,$40,$14,$FF,$00 ; #UDG(#PC)
 $D80C DEFB $00,$FF,$FF,$11,$83,$11,$FF,$00 ; #UDG(#PC)
 $D814 DEFB $62,$F0,$67,$67,$67,$67,$F0,$62 ; #UDG(#PC)
 $D81C DEFB $3F,$6C,$48,$48,$48,$48,$48,$7F ; #UDG(#PC)
 $D824 DEFB $FC,$06,$02,$02,$02,$02,$02,$FE ; #UDG(#PC)
 $D82C DEFB $28,$2B,$29,$2B,$28,$2F,$20,$3F ; #UDG(#PC)
 $D834 DEFB $34,$54,$34,$54,$54,$F4,$04,$FC ; #UDG(#PC)
 $D83C DEFB $3F,$20,$2F,$2F,$2F,$2F,$2F,$2F ; #UDG(#PC)
 $D844 DEFB $FC,$04,$F4,$F4,$F4,$D4,$D4,$F4 ; #UDG(#PC)
 $D84C DEFB $07,$3F,$FF,$7F,$00,$3F,$30,$30 ; #UDG(#PC)
 $D854 DEFB $E0,$FC,$FF,$FE,$00,$FC,$0C,$0C ; #UDG(#PC)
 $D85C DEFB $3F,$3F,$3F,$30,$30,$30,$3F,$3F ; #UDG(#PC)
 $D864 DEFB $FC,$FC,$FC,$0C,$0C,$0C,$FC,$FC ; #UDG(#PC)
 $D86C DEFB $00,$00,$00,$00,$00,$00,$00,$00 ; #UDG(#PC)
 $D874 DEFB $00,$0E,$09,$09,$0E,$08,$08,$00 ; #UDG(#PC)
 $D87C DEFB $00,$00,$31,$4A,$49,$48,$33,$00 ; #UDG(#PC)
 $D884 DEFB $00,$20,$B0,$20,$20,$A0,$18,$00 ; #UDG(#PC)
 $D88C DEFB $00,$18,$25,$25,$25,$25,$19,$00 ; #UDG(#PC)
 $D894 DEFB $00,$DA,$20,$B2,$22,$22,$22,$00 ; #UDG(#PC)
 $D89C DEFB $00,$00,$66,$89,$8E,$88,$66,$00 ; #UDG(#PC)
 $D8A4 DEFB $03,$EF,$DF,$BF,$BF,$7F,$7F,$7F ; #UDG(#PC)
 $D8AC DEFB $7F,$7F,$7F,$BF,$BF,$DF,$EF,$03 ; #UDG(#PC)
 $D8B4 DEFB $C0,$F0,$F8,$FC,$FC,$FE,$FE,$FE ; #UDG(#PC)
 $D8BC DEFB $FE,$FE,$FE,$FC,$FC,$F8,$F0,$C0 ; #UDG(#PC)
 $D8C4 DEFB $30,$18,$FF,$18,$30,$FF,$30,$18 ; #UDG(#PC)
 $D8CC DEFB $00,$4A,$52,$42,$7E,$42,$4A,$52 ; #UDG(#PC)
 $D8D4 DEFB $00,$00,$00,$0C,$1F,$1F,$3B,$3F ; #UDG(#PC)
 $D8DC DEFB $00,$00,$00,$00,$80,$C0,$F0,$F8 ; #UDG(#PC)
 $D8E4 DEFB $00,$00,$30,$70,$78,$2C,$06,$06 ; #UDG(#PC)
 $D8EC DEFB $7F,$7F,$3F,$1F,$07,$07,$03,$03 ; #UDG(#PC)
 $D8F4 DEFB $F8,$FC,$FF,$FF,$FF,$FF,$FF,$FF ; #UDG(#PC)
 $D8FC DEFB $06,$1E,$FC,$FC,$FC,$F8,$F8,$F8 ; #UDG(#PC)
 $D904 DEFB $01,$03,$03,$06,$06,$1C,$00,$00 ; #UDG(#PC)
 $D90C DEFB $C7,$80,$80,$00,$00,$00,$00,$00 ; #UDG(#PC)
 $D914 DEFB $F8,$7C,$3C,$18,$30,$60,$C0,$00 ; #UDG(#PC)
 $D91C DEFB $00,$7F,$62,$6E,$6E,$6E,$62,$7F ; #UDG(#PC)
 $D924 DEFB $00,$FF,$10,$D7,$10,$DE,$D0,$FF ; #UDG(#PC)
 $D92C DEFB $00,$FE,$B6,$B6,$86,$B6,$B6,$FE ; #UDG(#PC)
 $D934 DEFB $60,$60,$6F,$68,$6A,$68,$69,$6A ; #UDG(#PC)
 $D93C DEFB $00,$01,$F9,$08,$49,$89,$08,$29 ; #UDG(#PC)
 $D944 DEFB $06,$56,$56,$06,$56,$56,$06,$56 ; #UDG(#PC)
 $D94C DEFB $68,$6F,$60,$60,$7F,$7F,$7F,$00 ; #UDG(#PC)
 $D954 DEFB $09,$F8,$01,$00,$FF,$FF,$FF,$00 ; #UDG(#PC)
 $D95C DEFB $56,$06,$F6,$06,$FE,$FE,$FE,$00 ; #UDG(#PC)
 $D964 DEFB $00,$F3,$49,$49,$71,$59,$CF,$00 ; #UDG(#PC)
 $D96C DEFB $00,$EF,$04,$C4,$04,$24,$EF,$00 ; #UDG(#PC)
 $D974 DEFB $00,$0C,$84,$84,$84,$84,$0F,$00 ; #UDG(#PC)
 $D97C DEFB $00,$39,$12,$12,$12,$92,$B9,$00 ; #UDG(#PC)
 $D984 DEFB $00,$C8,$2C,$2A,$29,$28,$C8,$00 ; #UDG(#PC)
 $D98C DEFB $00,$80,$80,$80,$80,$80,$80,$00 ; #UDG(#PC)
 $D994 DEFB $00,$79,$6D,$6D,$79,$61,$61,$00 ; #UDG(#PC)
 $D99C DEFB $00,$9C,$B6,$B0,$B6,$B6,$9E,$00 ; #UDG(#PC)
 $D9A4 DEFB $00,$73,$DB,$C1,$D8,$D8,$78,$00 ; #UDG(#PC)
 $D9AC DEFB $00,$30,$30,$E0,$C0,$C0,$C0,$00 ; #UDG(#PC)
 $D9B4 DEFB $00,$83,$83,$03,$03,$03,$03,$00 ; #UDG(#PC)
 $D9BC DEFB $00,$C7,$2D,$CF,$2D,$2D,$CD,$00 ; #UDG(#PC)
 $D9C4 DEFB $00,$33,$BB,$BF,$B7,$B3,$B3,$00 ; #UDG(#PC)
 $D9CC DEFB $00,$66,$6C,$78,$78,$6C,$66,$00 ; #UDG(#PC)
 $D9D4 DEFB $1B,$0F,$1B,$7F,$6F,$1F,$06,$0C ; #UDG(#PC)
 $D9DC DEFB $E1,$F8,$FC,$FF,$FC,$F8,$18,$0C ; #UDG(#PC)
 $D9E4 DEFB $BF,$BF,$BF,$BF,$8F,$EF,$E0,$7F ; #UDG(#PC)
 $D9EC DEFB $FD,$FD,$FD,$FD,$F1,$F7,$07,$FE ; #UDG(#PC)
 $D9F4 DEFB $BF,$BF,$BF,$BF,$BF,$BF,$BF,$BF ; #UDG(#PC)
 $D9FC DEFB $FD,$FD,$FD,$FD,$FD,$FD,$FD,$FD ; #UDG(#PC)
 $DA04 DEFB $7F,$E0,$EF,$8F,$BF,$BF,$BF,$BF ; #UDG(#PC)
 $DA0C DEFB $FE,$07,$F7,$F1,$FD,$FD,$FD,$FD ; #UDG(#PC)
 $DA14 DEFB $40,$60,$30,$18,$1C,$3C,$2C,$1C ; #UDG(#PC)
 $DA1C DEFB $0C,$00,$0C,$0C,$0C,$0C,$0C,$0C ; #UDG(#PC)
 $DA24 DEFB $8C,$8C,$CC,$CC,$6C,$74,$3C,$18 ; #UDG(#PC)
 $DA2C DEFB $FF,$FF,$FF,$FF,$FF,$FF,$00,$FF ; #UDG(#PC)
 $DA34 DEFB $FF,$00,$FF,$FF,$FF,$FF,$FF,$FF ; #UDG(#PC)
 $DA3C DEFB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ; #UDG(#PC)
 $DA44 DEFB $C0,$C0,$C0,$C0,$C0,$C0,$C0,$00 ; #UDG(#PC)
 $DA4C DEFB $7F,$BF,$C0,$D9,$D1,$C0,$BF,$7F ; #UDG(#PC)
 $DA54 DEFB $FF,$FF,$00,$19,$D9,$00,$FF,$FF ; #UDG(#PC)
 $DA5C DEFB $FE,$FD,$03,$D3,$1B,$03,$FD,$FE ; #UDG(#PC)
 $DA64 DEFB $7C,$7E,$66,$7C,$7C,$66,$7E,$7C ; #UDG(#PC)
 $DA6C DEFB $7E,$7E,$60,$7E,$7E,$60,$7E,$7E ; #UDG(#PC)
 $DA74 DEFB $00,$60,$78,$7E,$7E,$78,$60,$00 ; #UDG(#PC)
 $DA7C DEFB $7C,$7E,$66,$7E,$7C,$60,$60,$60 ; #UDG(#PC)
 $DA84 DEFB $18,$18,$10,$08,$18,$18,$10,$08 ; #UDG(#PC)
 $DA8C DEFB $7E,$BD,$DB,$DB,$E7,$E7,$E7,$E7 ; #UDG(#PC)
 $DA94 DEFB $00,$FF,$FF,$FF,$FF,$FF,$FF,$FF ; #UDG(#PC)
 $DA9C DEFB $FF,$C0,$9F,$BF,$1F,$DF,$DF,$1F ; #UDG(#PC)
 $DAA4 DEFB $FF,$00,$FF,$FF,$66,$81,$99,$24 ; #UDG(#PC)
 $DAAC DEFB $FF,$03,$F9,$FD,$FD,$FD,$FD,$FD ; #UDG(#PC)
 $DAB4 DEFB $BF,$BF,$BF,$BF,$BF,$BF,$BF,$BF ; #UDG(#PC)
 $DABC DEFB $24,$99,$81,$66,$FF,$FF,$FF,$FF ; #UDG(#PC)
 $DAC4 DEFB $FD,$FD,$FD,$FD,$FD,$FD,$FD,$FD ; #UDG(#PC)
 $DACC DEFB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ; #UDG(#PC)
 $DAD4 DEFB $1F,$DF,$DF,$1F,$BF,$9F,$C0,$FF ; #UDG(#PC)
 $DADC DEFB $FF,$FF,$FF,$FF,$FF,$FF,$00,$FF ; #UDG(#PC)
 $DAE4 DEFB $FD,$FD,$FD,$FD,$FD,$F9,$03,$FF ; #UDG(#PC)
 $DAEC DEFB $FF,$3F,$80,$D0,$D0,$D0,$D0,$D0 ; #UDG(#PC)
 $DAF4 DEFB $FF,$FF,$00,$00,$00,$00,$00,$00 ; #UDG(#PC)
 $DAFC DEFB $FF,$FF,$07,$03,$03,$03,$03,$03 ; #UDG(#PC)
 $DB04 DEFB $D0,$D0,$D0,$D0,$D0,$D0,$D0,$D0 ; #UDG(#PC)
 $DB0C DEFB $03,$03,$03,$03,$03,$03,$03,$03 ; #UDG(#PC)
 $DB14 DEFB $D0,$D0,$D0,$D0,$D0,$80,$3F,$FF ; #UDG(#PC)
 $DB1C DEFB $00,$00,$00,$00,$00,$00,$FF,$FF ; #UDG(#PC)
 $DB24 DEFB $03,$03,$03,$03,$03,$07,$FF,$FF ; #UDG(#PC)
 $DB2C DEFB $00,$00,$00,$00,$02,$12,$16,$16 ; #UDG(#PC)
 $DB34 DEFB $16,$16,$12,$02,$00,$00,$00,$00 ; #UDG(#PC)
 $DB3C DEFB $0C,$18,$10,$00,$2C,$5E,$FF,$00 ; #UDG(#PC)
 $DB44 DEFB $30,$30,$30,$30,$30,$30,$CF,$30 ; #UDG(#PC)
 $DB4C DEFB $C3,$C3,$C3,$C3,$C3,$C3,$3C,$C3 ; #UDG(#PC)
 $DB54 DEFB $0C,$0C,$0C,$0C,$0C,$0C,$F3,$0C ; #UDG(#PC)
 $DB5C DEFB $00,$00,$00,$03,$03,$06,$06,$0C ; #UDG(#PC)
 $DB64 DEFB $00,$F3,$EF,$DE,$B8,$B3,$74,$64 ; #UDG(#PC)
 $DB6C DEFB $7E,$FF,$C3,$3C,$E7,$E7,$7F,$7F ; #UDG(#PC)
 $DB74 DEFB $00,$CF,$F7,$7B,$9D,$ED,$EE,$96 ; #UDG(#PC)
 $DB7C DEFB $6C,$EF,$DF,$D3,$D3,$DF,$EF,$69 ; #UDG(#PC)
 $DB84 DEFB $3F,$1F,$9F,$E7,$E7,$EF,$E7,$E7 ; #UDG(#PC)
 $DB8C DEFB $96,$F7,$FB,$CB,$CB,$FB,$F7,$96 ; #UDG(#PC)
 $DB94 DEFB $69,$77,$B7,$B9,$DE,$EF,$F3,$00 ; #UDG(#PC)
 $DB9C DEFB $E7,$C3,$E7,$FF,$3C,$C3,$FF,$7E ; #UDG(#PC)
 $DBA4 DEFB $96,$EE,$ED,$9D,$7B,$F7,$CF,$00 ; #UDG(#PC)
 $DBAC DEFB $00,$01,$03,$06,$0C,$18,$37,$6F ; #UDG(#PC)
 $DBB4 DEFB $FF,$E7,$18,$36,$63,$C0,$3F,$FF ; #UDG(#PC)
 $DBBC DEFB $30,$30,$61,$61,$51,$DB,$CD,$C5 ; #UDG(#PC)
 $DBC4 DEFB $C0,$C0,$80,$80,$80,$00,$00,$00 ; #UDG(#PC)
 $DBCC DEFB $06,$0C,$0A,$0B,$19,$18,$18,$30 ; #UDG(#PC)
 $DBD4 DEFB $18,$30,$30,$30,$A0,$A0,$60,$C0 ; #UDG(#PC)
 $DBDC DEFB $01,$01,$01,$03,$03,$03,$06,$06 ; #UDG(#PC)
 $DBE4 DEFB $80,$80,$80,$C0,$C0,$C0,$60,$60 ; #UDG(#PC)
 $DBEC DEFB $18,$0C,$0C,$0C,$05,$05,$06,$03 ; #UDG(#PC)
 $DBF4 DEFB $60,$30,$50,$D0,$98,$18,$18,$0C ; #UDG(#PC)
 $DBFC DEFB $03,$03,$01,$01,$01,$00,$00,$00 ; #UDG(#PC)
 $DC04 DEFB $0C,$0C,$86,$86,$8A,$DB,$B3,$A3 ; #UDG(#PC)
 $DC0C DEFB $00,$80,$C0,$60,$30,$18,$EC,$F6 ; #UDG(#PC)
 $DC14 DEFB $B0,$BC,$CF,$C3,$CC,$BC,$B0,$C0 ; #UDG(#PC)
 $DC1C DEFB $0D,$3D,$33,$C3,$F3,$3D,$0D,$03 ; #UDG(#PC)
 $DC24 DEFB $AA,$55,$AA,$55,$AA,$55,$AA,$55 ; #UDG(#PC)
 $DC2C DEFB $FF,$FF,$FF,$FF,$00,$00,$00,$00 ; #UDG(#PC)
 $DC34 DEFB $FF,$C3,$99,$3C,$66,$66,$3C,$18 ; #UDG(#PC)
 $DC3C DEFB $FF,$81,$FF,$81,$FF,$81,$FF,$FF ; #UDG(#PC)
 $DC44 DEFB $60,$E0,$D0,$28,$14,$0A,$05,$02 ; #UDG(#PC)
 $DC4C DEFB $00,$00,$00,$00,$00,$18,$30,$60 ; #UDG(#PC)
 $DC54 DEFB $00,$01,$03,$06,$04,$00,$00,$00 ; #UDG(#PC)
 $DC5C DEFB $00,$F8,$FC,$00,$C0,$C0,$C0,$00 ; #UDG(#PC)
 $DC64 DEFB $38,$1F,$0F,$00,$01,$01,$01,$00 ; #UDG(#PC)
 $DC6C DEFB $00,$00,$40,$E0,$E0,$70,$70,$38 ; #UDG(#PC)
 $DC74 DEFB $0F,$09,$0F,$09,$0F,$09,$0F,$09 ; #UDG(#PC)
 $DC7C DEFB $0F,$69,$6F,$09,$0F,$69,$6F,$09 ; #UDG(#PC)
 $DC84 DEFB $FF,$FF,$F3,$FF,$F3,$FF,$F3,$FF ; #UDG(#PC)
 $DC8C DEFB $FF,$C0,$BF,$BF,$BF,$BF,$C0,$FF ; #UDG(#PC)
 $DC94 DEFB $FF,$03,$FD,$FD,$FD,$FD,$03,$FF ; #UDG(#PC)
 $DC9C DEFB $00,$0F,$79,$E1,$9F,$FE,$FE,$FE ; #UDG(#PC)
 $DCA4 DEFB $FE,$FE,$FE,$FF,$FF,$7F,$0F,$00 ; #UDG(#PC)
 $DCAC DEFB $F3,$CE,$9D,$31,$61,$61,$C1,$BE ; #UDG(#PC)
 $DCB4 DEFB $CF,$73,$B9,$8C,$86,$86,$83,$7D ; #UDG(#PC)
 $DCBC DEFB $BE,$C1,$61,$61,$31,$9D,$CE,$F3 ; #UDG(#PC)
 $DCC4 DEFB $7D,$83,$86,$86,$8C,$B9,$73,$CF ; #UDG(#PC)
 $DCCC DEFB $00,$E0,$F8,$9C,$CE,$66,$73,$7F ; #UDG(#PC)
 $DCD4 DEFB $7F,$7F,$7E,$FE,$FC,$F8,$E0,$00 ; #UDG(#PC)
 $DCDC DEFB $00,$07,$07,$07,$07,$07,$07,$00 ; #UDG(#PC)
 $DCE4 DEFB $00,$E0,$E0,$E0,$E0,$E0,$E0,$00 ; #UDG(#PC)
 $DCEC DEFB $38,$00,$FF,$00,$FF,$DF,$8F,$DF ; #UDG(#PC)
 $DCF4 DEFB $1C,$00,$FF,$00,$FF,$FF,$F1,$FF ; #UDG(#PC)
 $DCFC DEFB $E4,$C2,$81,$8F,$9A,$BF,$EA,$FF ; #UDG(#PC)
 $DD04 DEFB $07,$03,$01,$F1,$99,$FD,$97,$FF ; #UDG(#PC)
 $DD0C DEFB $80,$80,$80,$80,$80,$80,$80,$80 ; #UDG(#PC)
 $DD14 DEFB $C0,$C0,$C0,$C0,$E0,$E0,$E0,$E0 ; #UDG(#PC)
 $DD1C DEFB $F0,$F0,$F0,$F0,$F0,$F0,$F8,$F8 ; #UDG(#PC)
 $DD24 DEFB $F8,$F8,$F8,$FC,$FC,$FC,$FC,$FE ; #UDG(#PC)
 $DD2C DEFB $1F,$3F,$3F,$3F,$3F,$7F,$7F,$7F ; #UDG(#PC)
 $DD34 DEFB $07,$07,$0F,$0F,$0F,$1F,$1F,$1F ; #UDG(#PC)
 $DD3C DEFB $03,$03,$03,$03,$03,$03,$07,$07 ; #UDG(#PC)
 $DD44 DEFB $01,$01,$01,$01,$01,$03,$03,$03 ; #UDG(#PC)
 $DD4C DEFB $00,$00,$00,$01,$01,$01,$01,$01 ; #UDG(#PC)
 $DD54 DEFB $FF,$00,$FF,$00,$FF,$00,$FF,$00 ; #UDG(#PC)
 $DD5C DEFB $F7,$0E,$DC,$38,$70,$E0,$C0,$80 ; #UDG(#PC)
 $DD64 DEFB $FF,$00,$FF,$00,$FF,$C3,$81,$81 ; #UDG(#PC)
 $DD6C DEFB $00,$00,$00,$03,$7E,$FF,$00,$00 ; #UDG(#PC)
 $DD74 DEFB $00,$01,$3F,$EA,$55,$FF,$00,$00 ; #UDG(#PC)
 $DD7C DEFB $18,$FC,$56,$AB,$55,$AA,$D4,$78 ; #UDG(#PC)
 $DD84 DEFB $FF,$00,$FF,$00,$FF,$E7,$DB,$DB ; #UDG(#PC)
 $DD8C DEFB $E7,$FF,$FF,$00,$FF,$FF,$FF,$00 ; #UDG(#PC)
 $DD94 DEFB $C0,$80,$00,$80,$00,$00,$00,$00 ; #UDG(#PC)
 $DD9C DEFB $E0,$70,$38,$1C,$0E,$07,$03,$01 ; #UDG(#PC)
 $DDA4 DEFB $FF,$00,$4E,$4E,$4E,$4E,$4E,$4E ; #UDG(#PC)
 $DDAC DEFB $81,$81,$81,$81,$81,$81,$81,$00 ; #UDG(#PC)
 $DDB4 DEFB $F8,$07,$DE,$2F,$BC,$78,$71,$50 ; #UDG(#PC)
 $DDBC DEFB $1F,$E0,$7B,$F4,$3D,$1E,$EE,$0A ; #UDG(#PC)
 $DDC4 DEFB $EA,$0E,$DE,$2C,$FD,$78,$E7,$00 ; #UDG(#PC)
 $DDCC DEFB $53,$70,$B9,$34,$DF,$2E,$F3,$00 ; #UDG(#PC)
 $DDD4 DEFB $3C,$5E,$52,$5A,$52,$5A,$52,$5A ; #UDG(#PC)
 $DDDC DEFB $52,$5A,$52,$5E,$5E,$5E,$2C,$2C ; #UDG(#PC)
 $DDE4 DEFB $2C,$18,$18,$7E,$2C,$18,$18,$00 ; #UDG(#PC)
 $DDEC DEFB $7C,$5C,$5C,$5C,$28,$10,$38,$5C ; #UDG(#PC)
 $DDF4 DEFB $5A,$31,$31,$00,$3F,$55,$FF,$00 ; #UDG(#PC)
 $DDFC DEFB $D6,$8C,$8C,$00,$FC,$56,$FF,$00 ; #UDG(#PC)
 $DE04 DEFB $31,$5A,$5A,$5A,$5A,$5A,$31,$31 ; #UDG(#PC)
 $DE0C DEFB $8C,$D6,$D6,$D6,$D6,$D6,$8C,$8C ; #UDG(#PC)
 $DE14 DEFB $FB,$FB,$C3,$FB,$FB,$1B,$FB,$FB ; #UDG(#PC)
 $DE1C DEFB $F6,$F6,$36,$36,$F6,$F6,$37,$37 ; #UDG(#PC)
 $DE24 DEFB $1F,$1F,$18,$1F,$1F,$18,$DF,$DF ; #UDG(#PC)
 $DE2C DEFB $71,$DB,$DB,$DB,$79,$18,$DB,$71 ; #UDG(#PC)
 $DE34 DEFB $CB,$6B,$63,$66,$E6,$6C,$6D,$CD ; #UDG(#PC)
 $DE3C DEFB $3F,$3F,$33,$33,$33,$33,$3F,$3F ; #UDG(#PC)
 $DE44 DEFB $7D,$7D,$61,$7D,$7D,$61,$61,$61 ; #UDG(#PC)
 $DE4C DEFB $F0,$F0,$80,$F0,$F0,$80,$80,$80 ; #UDG(#PC)
 $DE54 DEFB $00,$63,$77,$7F,$6B,$63,$63,$00 ; #UDG(#PC)
 $DE5C DEFB $00,$7C,$61,$61,$79,$61,$7C,$00 ; #UDG(#PC)
 $DE64 DEFB $00,$F1,$9B,$83,$BB,$9B,$F3,$00 ; #UDG(#PC)
 $DE6C DEFB $00,$E3,$36,$36,$F3,$30,$37,$00 ; #UDG(#PC)
 $DE74 DEFB $00,$DE,$0C,$0C,$8C,$CC,$8C,$00 ; #UDG(#PC)
 $DE7C DEFB $00,$79,$CD,$CD,$CD,$CD,$79,$00 ; #UDG(#PC)
 $DE84 DEFB $00,$F3,$9B,$9B,$F3,$B3,$9B,$00 ; #UDG(#PC)
 $DE8C DEFB $00,$E0,$00,$00,$C0,$00,$E0,$00 ; #UDG(#PC)
 $DE94 DEFB $00,$F1,$4A,$73,$4A,$4A,$F2,$00 ; #UDG(#PC)
 $DE9C DEFB $00,$92,$54,$D8,$54,$52,$52,$00 ; #UDG(#PC)
 $DEA4 DEFB $00,$F7,$84,$E7,$86,$85,$F4,$00 ; #UDG(#PC)
 $DEAC DEFB $00,$18,$A0,$18,$04,$24,$98,$00 ; #UDG(#PC)
 $DEB4 DEFB $FC,$30,$30,$30,$30,$30,$36,$36 ; #UDG(#PC)
 $DEBC DEFB $7C,$66,$66,$7C,$66,$66,$66,$7C ; #UDG(#PC)
 $DEC4 DEFB $79,$CD,$CD,$CD,$CD,$CD,$CD,$79 ; #UDG(#PC)
 $DECC DEFB $9B,$DB,$FB,$BB,$9B,$9B,$9B,$9B ; #UDG(#PC)
 $DED4 DEFB $E0,$00,$00,$C0,$00,$00,$00,$E0 ; #UDG(#PC)
 $DEDC DEFB $7C,$66,$66,$7C,$66,$66,$66,$7C ; #UDG(#PC)
 $DEE4 DEFB $CD,$CC,$CC,$CC,$CC,$CC,$CC,$78 ; #UDG(#PC)
 $DEEC DEFB $F9,$63,$63,$63,$63,$63,$63,$61 ; #UDG(#PC)
 $DEF4 DEFB $E6,$36,$06,$07,$06,$06,$36,$E6 ; #UDG(#PC)
 $DEFC DEFB $6F,$6C,$6C,$EF,$6C,$6C,$6C,$6F ; #UDG(#PC)
 $DF04 DEFB $BE,$33,$33,$3E,$38,$3C,$36,$B3 ; #UDG(#PC)
 $DF0C DEFB $33,$33,$36,$7C,$78,$6C,$C6,$C6 ; #UDG(#PC)
 $DF14 DEFB $3E,$3C,$30,$7D,$79,$61,$FB,$F3 ; #UDG(#PC)
 $DF1C DEFB $61,$F7,$FF,$DB,$86,$86,$0C,$0C ; #UDG(#PC)
 $DF24 DEFB $9E,$BF,$33,$60,$60,$66,$7E,$3C ; #UDG(#PC)
 $DF2C DEFB $3C,$7E,$66,$E6,$CC,$CC,$FC,$78 ; #UDG(#PC)
 $DF34 DEFB $00,$7E,$7E,$1C,$38,$7E,$7E,$00 ; #UDG(#PC)
 $DF3C DEFB $00,$3C,$7E,$66,$66,$7E,$3C,$00 ; #UDG(#PC)
 $DF44 DEFB $8F,$8F,$8F,$47,$47,$23,$18,$07 ; #UDG(#PC)
 $DF4C DEFB $FF,$FF,$FF,$FE,$FE,$FC,$F8,$E0 ; #UDG(#PC)
 $DF54 DEFB $00,$00,$00,$07,$18,$23,$47,$47 ; #UDG(#PC)
 $DF5C DEFB $2C,$2C,$58,$B8,$70,$EC,$DE,$DE ; #UDG(#PC)
 $DF64 DEFB $18,$18,$18,$18,$18,$18,$18,$18 ; #UDG(#PC)
 $DF6C DEFB $00,$00,$00,$FF,$FF,$00,$00,$00 ; #UDG(#PC)
 $DF74 DEFB $00,$00,$00,$0F,$1F,$18,$18,$18 ; #UDG(#PC)
 $DF7C DEFB $00,$00,$00,$F0,$F8,$18,$18,$18 ; #UDG(#PC)
 $DF84 DEFB $18,$18,$18,$F8,$F0,$00,$00,$00 ; #UDG(#PC)
 $DF8C DEFB $18,$18,$18,$1F,$0F,$00,$00,$00 ; #UDG(#PC)
 $DF94 DEFB $30,$58,$D8,$D8,$8D,$8D,$0D,$06 ; #UDG(#PC)
 $DF9C DEFB $3C,$0E,$01,$0F,$7E,$F0,$80,$70 ; #UDG(#PC)
 $DFA4 DEFB $36,$68,$36,$68,$36,$68,$36,$68 ; #UDG(#PC)
 $DFAC DEFB $0E,$07,$13,$38,$6D,$D9,$B3,$E3 ; #UDG(#PC)
 $DFB4 DEFB $2D,$35,$BD,$01,$FD,$AD,$55,$FD ; #UDG(#PC)
 $DFBC DEFB $00,$90,$38,$6C,$36,$9B,$CE,$C4 ; #UDG(#PC)
 $DFC4 DEFB $07,$33,$39,$2D,$34,$2C,$B4,$BD ; #UDG(#PC)
 $DFCC DEFB $FF,$7E,$00,$00,$00,$00,$00,$00 ; #UDG(#PC)
 $DFD4 DEFB $00,$00,$00,$00,$00,$00,$00,$7E ; #UDG(#PC)
; This is where the font UDGs start, so #R$E0DC is "SPACE" (ASCII code #N$20).
@label=Font
 $DFDC DEFB $00,$80,$80,$80,$80,$80,$80,$00 ; #UDG(#PC)
 $DFE4 DEFB $01,$03,$03,$03,$03,$03,$03,$01 ; #UDG(#PC)
 $DFEC DEFB $00,$FE,$FE,$00,$AA,$FF,$55,$00 ; #UDG(#PC)
 $DFF4 DEFB $00,$00,$77,$EE,$EE,$77,$00,$00 ; #UDG(#PC)
 $DFFC DEFB $00,$00,$7F,$FB,$FB,$7F,$00,$00 ; #UDG(#PC)
 $E004 DEFB $00,$00,$FE,$DF,$DF,$FE,$00,$00 ; #UDG(#PC)
 $E00C DEFB $00,$00,$EE,$77,$77,$EE,$00,$00 ; #UDG(#PC)
 $E014 DEFB $00,$FE,$FE,$00,$0F,$0F,$00,$00 ; #UDG(#PC)
 $E01C DEFB $00,$00,$FE,$3E,$C0,$C0,$00,$00 ; #UDG(#PC)
 $E024 DEFB $00,$00,$00,$FF,$55,$AA,$FF,$00 ; #UDG(#PC)
 $E02C DEFB $FF,$ED,$6D,$76,$76,$66,$72,$20 ; #UDG(#PC)
 $E034 DEFB $00,$FF,$00,$FF,$FF,$FF,$00,$00 ; #UDG(#PC)
 $E03C DEFB $7E,$7F,$7F,$7F,$7F,$4F,$B7,$FF ; #UDG(#PC)
 $E044 DEFB $FE,$7E,$9D,$E1,$FC,$F2,$ED,$FF ; #UDG(#PC)
 $E04C DEFB $00,$03,$0B,$1B,$3B,$7B,$FC,$FE ; #UDG(#PC)
 $E054 DEFB $00,$60,$68,$6C,$6E,$6E,$1F,$3F ; #UDG(#PC)
 $E05C DEFB $18,$A4,$BE,$AE,$B6,$BC,$00,$18 ; #UDG(#PC)
 $E064 DEFB $00,$44,$44,$66,$66,$99,$FF,$00 ; #UDG(#PC)
 $E06C DEFB $FF,$AA,$55,$FF,$00,$00,$00,$00 ; #UDG(#PC)
 $E074 DEFB $FF,$FF,$FF,$00,$00,$00,$00,$00 ; #UDG(#PC)
 $E07C DEFB $FF,$FF,$FF,$00,$3C,$18,$18,$18 ; #UDG(#PC)
 $E084 DEFB $FF,$AA,$54,$F8,$00,$00,$00,$00 ; #UDG(#PC)
 $E08C DEFB $18,$18,$18,$18,$18,$18,$18,$18 ; #UDG(#PC)
 $E094 DEFB $00,$80,$C0,$E0,$70,$38,$1C,$0E ; #UDG(#PC)
 $E09C DEFB $17,$1B,$1D,$18,$18,$18,$18,$18 ; #UDG(#PC)
 $E0A4 DEFB $07,$03,$01,$00,$00,$00,$00,$00 ; #UDG(#PC)
 $E0AC DEFB $00,$01,$03,$07,$0E,$1C,$38,$70 ; #UDG(#PC)
 $E0B4 DEFB $FF,$55,$2A,$1F,$00,$00,$00,$00 ; #UDG(#PC)
 $E0BC DEFB $E8,$D8,$B8,$18,$18,$18,$18,$18 ; #UDG(#PC)
 $E0C4 DEFB $E0,$C0,$80,$00,$00,$00,$00,$00 ; #UDG(#PC)
 $E0CC DEFB $FF,$55,$AA,$FF,$00,$00,$00,$00 ; #UDG(#PC)
 $E0D4 DEFB $6C,$BE,$BE,$BE,$5C,$5C,$38,$10 ; #UDG(#PC)
 $E0DC DEFB $00,$00,$00,$00,$00,$00,$00,$00 ; #UDG(#PC)
 $E0E4 DEFB $00,$30,$30,$30,$30,$00,$30,$30 ; #UDG(#PC)
 $E0EC DEFB $00,$66,$66,$66,$00,$00,$00,$00 ; #UDG(#PC)
 $E0F4 DEFB $00,$68,$68,$FE,$68,$FE,$68,$68 ; #UDG(#PC)
 $E0FC DEFB $00,$18,$FE,$D8,$FE,$16,$FE,$18 ; #UDG(#PC)
 $E104 DEFB $00,$E6,$E6,$0E,$7C,$E0,$CE,$CE ; #UDG(#PC)
 $E10C DEFB $00,$38,$6C,$60,$F0,$60,$60,$7C ; #UDG(#PC)
 $E114 DEFB $00,$18,$18,$18,$30,$00,$00,$00 ; #UDG(#PC)
 $E11C DEFB $00,$0C,$18,$30,$30,$30,$18,$0C ; #UDG(#PC)
 $E124 DEFB $00,$30,$18,$0C,$0C,$0C,$18,$30 ; #UDG(#PC)
 $E12C DEFB $00,$10,$54,$38,$FE,$38,$54,$10 ; #UDG(#PC)
 $E134 DEFB $00,$38,$38,$38,$FE,$38,$38,$38 ; #UDG(#PC)
 $E13C DEFB $00,$00,$00,$00,$18,$18,$18,$30 ; #UDG(#PC)
 $E144 DEFB $00,$00,$00,$7E,$7E,$00,$00,$00 ; #UDG(#PC)
 $E14C DEFB $00,$00,$00,$00,$00,$00,$38,$38 ; #UDG(#PC)
 $E154 DEFB $00,$06,$0E,$1C,$38,$70,$E0,$C0 ; #UDG(#PC)
 $E15C DEFB $00,$3C,$66,$66,$66,$66,$66,$3C ; #UDG(#PC)
 $E164 DEFB $00,$1C,$3C,$2C,$0C,$0C,$0C,$3E ; #UDG(#PC)
 $E16C DEFB $00,$3C,$66,$06,$0C,$18,$32,$7E ; #UDG(#PC)
 $E174 DEFB $00,$3C,$66,$06,$1C,$06,$66,$3C ; #UDG(#PC)
 $E17C DEFB $00,$0C,$1C,$2C,$4C,$7E,$0C,$0C ; #UDG(#PC)
 $E184 DEFB $00,$7E,$60,$7C,$06,$06,$66,$3C ; #UDG(#PC)
 $E18C DEFB $00,$0C,$18,$30,$7C,$66,$66,$3C ; #UDG(#PC)
 $E194 DEFB $00,$7E,$06,$0C,$18,$30,$30,$30 ; #UDG(#PC)
 $E19C DEFB $00,$3C,$66,$66,$3C,$66,$66,$3C ; #UDG(#PC)
 $E1A4 DEFB $00,$3C,$66,$66,$3E,$0C,$18,$30 ; #UDG(#PC)
 $E1AC DEFB $00,$00,$30,$30,$00,$38,$38,$00 ; #UDG(#PC)
 $E1B4 DEFB $00,$00,$00,$18,$18,$00,$18,$38 ; #UDG(#PC)
 $E1BC DEFB $00,$1E,$3E,$60,$C0,$60,$3E,$1E ; #UDG(#PC)
 $E1C4 DEFB $00,$00,$7C,$7C,$00,$7C,$7C,$00 ; #UDG(#PC)
 $E1CC DEFB $00,$F0,$F8,$0C,$06,$0C,$F8,$F0 ; #UDG(#PC)
 $E1D4 DEFB $00,$FE,$C2,$C2,$1E,$18,$00,$18 ; #UDG(#PC)
 $E1DC DEFB $00,$00,$00,$00,$00,$00,$00,$00 ; #UDG(#PC)
 $E1E4 DEFB $00,$3C,$66,$66,$7E,$66,$66,$66 ; #UDG(#PC)
 $E1EC DEFB $00,$7C,$66,$66,$7C,$66,$66,$7C ; #UDG(#PC)
 $E1F4 DEFB $00,$3C,$66,$60,$60,$60,$66,$3C ; #UDG(#PC)
 $E1FC DEFB $00,$78,$6C,$66,$66,$66,$6C,$78 ; #UDG(#PC)
 $E204 DEFB $00,$7E,$60,$60,$78,$60,$60,$7E ; #UDG(#PC)
 $E20C DEFB $00,$7C,$60,$60,$78,$60,$60,$60 ; #UDG(#PC)
 $E214 DEFB $00,$3C,$66,$60,$60,$6E,$66,$3C ; #UDG(#PC)
 $E21C DEFB $00,$66,$66,$66,$7E,$66,$66,$66 ; #UDG(#PC)
 $E224 DEFB $00,$3C,$18,$18,$18,$18,$18,$3C ; #UDG(#PC)
 $E22C DEFB $00,$3E,$0C,$0C,$0C,$6C,$6C,$38 ; #UDG(#PC)
 $E234 DEFB $00,$66,$6C,$78,$70,$78,$6C,$66 ; #UDG(#PC)
 $E23C DEFB $00,$60,$60,$60,$60,$60,$60,$7E ; #UDG(#PC)
 $E244 DEFB $00,$66,$7E,$7E,$66,$66,$66,$66 ; #UDG(#PC)
 $E24C DEFB $00,$66,$66,$76,$7E,$6E,$66,$66 ; #UDG(#PC)
 $E254 DEFB $00,$3C,$66,$66,$66,$66,$66,$3C ; #UDG(#PC)
 $E25C DEFB $00,$7C,$66,$66,$7C,$60,$60,$60 ; #UDG(#PC)
 $E264 DEFB $00,$3C,$66,$66,$66,$66,$6C,$36 ; #UDG(#PC)
 $E26C DEFB $00,$7C,$66,$66,$7C,$68,$6C,$66 ; #UDG(#PC)
 $E274 DEFB $00,$3C,$62,$60,$3C,$06,$46,$3C ; #UDG(#PC)
 $E27C DEFB $00,$7E,$18,$18,$18,$18,$18,$18 ; #UDG(#PC)
 $E284 DEFB $00,$66,$66,$66,$66,$66,$66,$3C ; #UDG(#PC)
 $E28C DEFB $00,$66,$66,$66,$66,$66,$3C,$18 ; #UDG(#PC)
 $E294 DEFB $00,$66,$66,$66,$66,$7E,$7E,$66 ; #UDG(#PC)
 $E29C DEFB $00,$66,$66,$3C,$18,$3C,$66,$66 ; #UDG(#PC)
 $E2A4 DEFB $00,$66,$66,$3C,$18,$18,$18,$18 ; #UDG(#PC)
 $E2AC DEFB $00,$7E,$06,$0C,$18,$30,$60,$7E ; #UDG(#PC)
 $E2B4 DEFB $00,$00,$FF,$FF,$FF,$FF,$00,$00 ; #UDG(#PC)
 $E2BC DEFB $00,$E0,$18,$E6,$F9,$FE,$F8,$E0 ; #UDG(#PC)
 $E2C4 DEFB $00,$07,$1F,$7F,$9F,$67,$18,$07 ; #UDG(#PC)
 $E2CC DEFB $00,$C0,$00,$C0,$C0,$C0,$C0,$C0 ; #UDG(#PC)
 $E2D4 DEFB $00,$E0,$10,$E0,$F0,$F0,$F0,$E0 ; #UDG(#PC)
 $E2DC DEFB $00,$E0,$18,$E4,$F8,$FC,$F8,$E0 ; #UDG(#PC)
 $E2E4 DEFB $00,$00,$00,$40,$80,$40,$00,$00 ; #UDG(#PC)
 $E2EC DEFB $00,$00,$10,$70,$90,$60,$10,$00 ; #UDG(#PC)
 $E2F4 DEFB $00,$04,$1C,$7C,$9C,$64,$18,$04 ; #UDG(#PC)

; Routine at E2FC
;
; Used by the routine at #R$B1A6.
c$E2FC LD A,(IY+$00) ;
 $E2FF OR A          ;
 $E300 JR Z,$E30B    ;
 $E302 CP $03        ;
 $E304 JR Z,$E30B    ;
 $E306 XOR A         ;
 $E307 LD (IY-$19),A ;
 $E30A RET           ;
*$E30B LD A,(IY-$19) ;
 $E30E OR A          ;
 $E30F RET NZ        ;
 $E310 LD A,$01      ;
 $E312 LD (IY-$19),A ;
; This entry point is used by the routine at #R$B1A6.
*$E315 LD A,($B951)  ;
 $E318 CP (IY+$0F)   ;
 $E31B RET NZ        ;
 $E31C LD BC,$0701   ;
 $E31F LD DE,$0F01   ;
 $E322 LD HL,$0404   ;
 $E325 CALL $E3D3    ;
 $E328 RET           ;

; Routine at E329
;
; Used by the routines at #R$ED2A, #R$EFC7, #R$F10E and #R$F5F1.
c$E329 LD A,($A838)    ; #REGa=*#R$A838.
 $E32C SUB (IY+$05)    ;
 $E32F SUB $0D         ;
 $E331 CP $E6          ;
 $E333 RET C           ;
 $E334 LD A,($A839)    ;
 $E337 SUB (IY+$0A)    ;
 $E33A SUB $1C         ;
 $E33C CP $D6          ;
 $E33E RET C           ;
; This entry point is used by the routines at #R$F10E, #R$F5F1 and #R$F814.
*$E33F LD A,($B55F)    ;
 $E342 OR A            ;
 $E343 RET NZ          ;
 $E344 EXX             ;
 $E345 LD BC,$640A     ;
 $E348 LD DE,$0101     ;
 $E34B LD HL,$6401     ;
 $E34E CALL $E3D3      ;
 $E351 LD A,($F26E)    ;
 $E354 LD B,A          ;
 $E355 LD A,(IY+$14)   ;
 $E358 SUB B           ;
 $E359 LD (IY+$14),A   ;
 $E35C JR Z,$E362      ;
 $E35E JR C,$E362      ;
 $E360 JR $E36C        ;
*$E362 LD (IY+$14),$80 ;
 $E366 DEC (IY+$2D)    ;
 $E369 JP Z,$B451      ;
*$E36C EXX             ;
; This entry point is used by the routines at #R$E3FD and #R$F814.
*$E36D EXX             ; Switch to the shadow registers.
; Draw the hearts to indicate the number of lives remaining.
 $E36E LD C,$46        ; #REGc=#N$46 (#COLOUR$46).
 $E370 LD HL,$DFDC     ; {Write #R$DFDC to #R$B7E8(#N$B7E9).
 $E373 LD ($B7E9),HL   ; }
 $E376 LD DE,$021C     ; #REGde=#N$021C.
 $E379 LD L,(IY+$2D)   ; #REGl=*#REGiy+#N$2D.
 $E37C DEC L           ; Decrease #REGl by one.
 $E37D LD B,$02        ; #REGb=#N$02 (counter).
*$E37F LD A,L          ;
 $E380 OR A            ;
 $E381 LD A,$1F        ; #REGa=#R$E0D4(#N$1F).
 $E383 JR NZ,$E386     ;
 $E385 INC A           ;
*$E386 CALL $B7BA      ; Call #R$B7BA.
 $E389 INC E           ; {Increment #REGe by two.
 $E38A INC E           ; }
 $E38B CP $20          ;
 $E38D JR Z,$E390      ;
 $E38F DEC L           ;
*$E390 DJNZ $E37F      ;
; Draws the endurance ribbon.
 $E392 LD C,$43        ; #REGc=#N$43 (#COLOUR$43).
 $E394 LD DE,$0310     ; #REGde=#N$0310.
 $E397 LD L,$5C        ; #REGl=#R$E2BC(#N$5C).
 $E399 LD B,(IY+$14)   ; #REGb=*#REGiy+#N$14.
*$E39C LD A,B          ;
 $E39D SUB $08         ;
 $E39F JR C,$E3BC      ;
 $E3A1 LD B,A          ;
 $E3A2 LD A,L          ;
 $E3A3 CALL $B7BA      ; Call #R$B7BA.
 $E3A6 XOR $01         ;
 $E3A8 LD L,A          ;
 $E3A9 INC E           ;
 $E3AA LD A,B          ;
 $E3AB OR A            ;
 $E3AC JR NZ,$E39C     ;
*$E3AE BIT 5,E         ;
 $E3B0 JR Z,$E3B4      ;
 $E3B2 EXX             ; Switch back to the normal registers.
 $E3B3 RET             ; Return.
*$E3B4 LD A,$20        ; #REGa=#N$20.
 $E3B6 CALL $B7BA      ; Call #R$B7BA.
 $E3B9 INC E           ; Increment #REGe by one.
 $E3BA JR $E3AE        ; Jump to #R$E3AE.
*$E3BC ADD A,$08       ; #REGa+=#N$08.
 $E3BE SRL A           ;
 $E3C0 LD B,A          ;
 $E3C1 LD A,L          ;
 $E3C2 CP $5C          ;
 $E3C4 JR NZ,$E3CA     ;
 $E3C6 LD A,$5D        ; #REGa=#N$5D.
 $E3C8 JR $E3CC        ; Jump to #R$E3CC.
*$E3CA LD A,$60        ; #REGa=#N$60.
*$E3CC ADD A,B         ; #REGa+=#REGb.
 $E3CD CALL $B7BA      ; Call #R$B7BA.
 $E3D0 INC E           ; Increment #REGe by one.
 $E3D1 JR $E3AE        ; Jump to #R$E3AE.

; Routine at E3D3
;
; Used by the routines at #R$AA7F, #R$E2FC, #R$E329 and #R$F814.
c$E3D3 LD A,B        ;
 $E3D4 SUB H         ;
 $E3D5 LD B,A        ;
 $E3D6 CALL $E3EC    ;
 $E3D9 DEC C         ;
 $E3DA JR NZ,$E3D3   ;
*$E3DC CALL $E3EC    ;
 $E3DF DEC D         ;
 $E3E0 JR NZ,$E3DC   ;
*$E3E2 LD A,B        ;
 $E3E3 ADD A,L       ;
 $E3E4 LD B,A        ;
 $E3E5 CALL $E3EC    ;
 $E3E8 DEC E         ;
 $E3E9 JR NZ,$E3E2   ;
 $E3EB RET           ;
*$E3EC LD A,$10      ;
 $E3EE OUT ($FE),A   ;
 $E3F0 PUSH BC       ;
*$E3F1 DJNZ $E3F1    ;
 $E3F3 POP BC        ;
 $E3F4 LD A,$00      ;
 $E3F6 OUT ($FE),A   ;
 $E3F8 PUSH BC       ;
*$E3F9 DJNZ $E3F9    ;
 $E3FB POP BC        ;
 $E3FC RET           ;

; Print Banner
;
; Used by the routines at #R$8155, #R$8184 and #R$E79B.
;
; .
;
; Clear the banner screen buffer area.
@label=PrintBanner
c$E3FD CALL $B931    ; Call #R$B931.
; Display the banner.
 $E400 LD HL,$7E3F   ; #REGhl=#R$7E3F.
 $E403 LD DE,$0010   ; #REGde=#N($0010,$04,$04).
 $E406 CALL $B84B    ; Call #R$B84B.
; Display the current character name in the banner.
 $E409 LD H,$7C      ; #REGh=#N$7C.
 $E40B LD L,(IY-$23) ; #REGl=#REGiy-#N$23.
 $E40E LD C,$45      ; #REGc=#N$45 (attribute: #COLOUR$45).
 $E410 LD DE,$001B   ; #REGde=#N($001B,$04,$04) (screen co-ordinates).
 $E413 CALL $B84B    ; Call #R$B84B.
; Displays the endurance meter and lives.
 $E416 CALL $E36D    ; Call #R$E36D.
; Display the currently held items.
 $E419 CALL $E420    ; Call #R$E420.
 $E41C RET           ; Return.

; Routine at E41D
;
; Used by the routines at #R$AA30, #R$EABF and #R$EC4A.
c$E41D CALL $E77A    ;
; This entry point is used by the routine at #R$E3FD.
*$E420 LD A,(IY+$50) ;
 $E423 ADD A,A       ;
 $E424 LD E,A        ;
 $E425 LD D,$00      ;
 $E427 LD HL,$E728   ;
 $E42A ADD HL,DE     ;
 $E42B LD E,(HL)     ;
 $E42C INC HL        ;
 $E42D LD D,(HL)     ;
 $E42E LD A,(IY+$55) ;
 $E431 ADD A,A       ;
 $E432 LD C,A        ;
 $E433 LD B,$00      ;
 $E435 LD HL,$E728   ;
 $E438 ADD HL,BC     ;
 $E439 LD C,(HL)     ;
 $E43A INC HL        ;
 $E43B LD B,(HL)     ;
 $E43C PUSH BC       ;
 $E43D EX DE,HL      ;
 $E43E LD DE,$DFDC   ;
 $E441 LD ($B7E9),DE ;
 $E445 LD DE,$0003   ;
 $E448 LD C,$43      ;
 $E44A CALL $E468    ;
 $E44D POP HL        ;
 $E44E LD DE,$0203   ;
 $E451 LD C,$45      ;
 $E453 CALL $E468    ;
 $E456 LD A,(IY+$50) ;
 $E459 LD DE,$0000   ;
 $E45C CALL $B77B    ;
 $E45F LD A,(IY+$55) ;
 $E462 LD D,$02      ;
 $E464 CALL $B77B    ;
 $E467 RET           ;
*$E468 CALL $B84B    ;
 $E46B LD C,$07      ;
 $E46D LD A,(HL)     ;
 $E46E CP $F4        ;
 $E470 RET NZ        ;
 $E471 INC HL        ;
 $E472 LD A,(HL)     ;
 $E473 INC HL        ;
 $E474 CALL $EC1D    ;
 $E477 JP NZ,$B84B   ;
 $E47A PUSH BC       ;
 $E47B LD B,$FF      ;
 $E47D LD A,B        ;
 $E47E CPIR          ;
 $E480 POP BC        ;
 $E481 JP $B84B      ;

; Messaging: The Plunger
t$E484 DEFM "THE PLUNGER" ; #FONT:(THE PLUNGER)$E0DC,attr=$45(the-plunger)
 $E48F DEFB $FF           ; Terminator.

; Messaging: The Letter A
t$E490 DEFM "THE LETTER" ; #FONT:(THE LETTER)$E0DC,attr=$45(the-letter)
 $E49A DEFB $BE,$01      ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $E49C DEFM "A"          ; #FONT:(A)$E0DC,attr=$45(the-letter-a)
 $E49D DEFB $FF          ; Terminator.

; Messaging: Book Two
t$E49E DEFM "BOOK TWO" ; #FONT:(BOOK TWO)$E0DC,attr=$45(book-two)
 $E4A6 DEFB $FF        ; Terminator.

; Messaging: The Sand
t$E4A7 DEFM "THE SAND" ; #FONT:(THE SAND)$E0DC,attr=$45(the-sand)
 $E4AF DEFB $FF        ; Terminator.

; Messaging: The Battery
t$E4B0 DEFM "THE BATTERY" ; #FONT:(THE BATTERY)$E0DC,attr=$45(the-battery)
 $E4BB DEFB $BD,$01       ; Move cursor: #N(#PEEK(#PC)-$C8),
                          ; #N(#PEEK(#PC+$01)).
 $E4BD DEFB $FF           ; Terminator.

; Messaging: Charged
t$E4BE DEFB $F4,$06
 $E4C0 DEFM "CHARGED" ; #FONT:(CHARGED)$E0DC,attr=$45(charged)
 $E4C7 DEFB $FF       ; Terminator.

; Messaging: Flat
t$E4C8 DEFM "FLAT"   ; #FONT:(FLAT)$E0DC,attr=$45(flat)
 $E4CC DEFB $FF      ; Terminator.

; Messaging: The Letter K
t$E4CD DEFM "THE LETTER" ; #FONT:(THE LETTER)$E0DC,attr=$45(the-letter)
 $E4D7 DEFB $BE,$01      ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $E4D9 DEFM "K"          ; #FONT:(K)$E0DC,attr=$45(the-letter-k)
 $E4DA DEFB $FF          ; Terminator.

; Messaging: The Cement
t$E4DB DEFM "THE CEMENT" ; #FONT:(THE CEMENT)$E0DC,attr=$45(the-cement)
 $E4E5 DEFB $FF          ; Terminator.

; Messaging: Book Three
t$E4E6 DEFM "BOOK THREE" ; #FONT:(BOOK THREE)$E0DC,attr=$45(book-three)
 $E4F0 DEFB $FF          ; Terminator.

; Messaging: The Trowel
t$E4F1 DEFM "THE TROWEL" ; #FONT:(THE TROWEL)$E0DC,attr=$45(the-trowel)
 $E4FB DEFB $FF          ; Terminator.

; Messaging: The Matches
t$E4FC DEFM "THE MATCHES" ; #FONT:(THE MATCHES)$E0DC,attr=$45(the-matches)
 $E507 DEFB $FF           ; Terminator.

; Messaging: The Cracked Insulator
t$E508 DEFM "THE CRACKED" ; #FONT:(THE CRACKED)$E0DC,attr=$45(the-cracked)
 $E513 DEFB $BD,$01       ; Move cursor: #N(#PEEK(#PC)-$C8),
                          ; #N(#PEEK(#PC+$01)).
 $E515 DEFM "INSULATOR"   ; #FONT:(INSULATOR)$E0DC,attr=$45(insulator)
 $E51E DEFB $FF           ; Terminator.

; Messaging: Book One
t$E51F DEFM "BOOK ONE" ; #FONT:(BOOK ONE)$E0DC,attr=$45(book-one)
 $E527 DEFB $FF        ; Terminator.

; Messaging: The Monkey Nuts
t$E528 DEFM "THE MONKEY" ; #FONT:(THE MONKEY)$E0DC,attr=$45(the-monkey)
 $E532 DEFB $BE,$01      ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $E534 DEFM "NUTS"       ; #FONT:(NUTS)$E0DC,attr=$45(nuts)
 $E538 DEFB $FF          ; Terminator.

; Messaging: The Money
t$E539 DEFM "THE MONEY" ; #FONT:(THE MONEY)$E0DC,attr=$45(the-money)
 $E542 DEFB $FF         ; Terminator.

; Messaging: Superglue
t$E543 DEFM "SUPERGLUE" ; #FONT:(SUPERGLUE)$E0DC,attr=$45(superglue)
 $E54C DEFB $FF         ; Terminator.

; Messaging: The Chewing Gum
t$E54D DEFM "THE CHEWING" ; #FONT:(THE CHEWING)$E0DC,attr=$45(the-chewing)
 $E558 DEFB $BD,$01       ; Move cursor: #N(#PEEK(#PC)-$C8),
                          ; #N(#PEEK(#PC+$01)).
 $E55A DEFM "GUM"         ; #FONT:(GUM)$E0DC,attr=$45(gum)
 $E55D DEFB $FF           ; Terminator.

; Messaging: The Bucket
t$E55E DEFM "THE BUCKET" ; #FONT:(THE BUCKET)$E0DC,attr=$45(the-bucket)
 $E568 DEFB $BE,$01      ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $E56A DEFB $FF          ; Terminator.

; Messaging: Full
t$E56B DEFB $F4,$04
 $E56D DEFM "FULL"   ; #FONT:(FULL)$E0DC,attr=$45(full)
 $E571 DEFB $FF      ; Terminator.

; Messaging: Empty
t$E572 DEFM "EMPTY"  ; #FONT:(EMPTY)$E0DC,attr=$45(empty)
 $E577 DEFB $FF      ; Terminator.

; Messaging: The Jump Leads
t$E578 DEFM "THE JUMP" ; #FONT:(THE JUMP)$E0DC,attr=$45(the-jump)
 $E580 DEFB $C0,$01    ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $E582 DEFM "LEADS"    ; #FONT:(LEADS)$E0DC,attr=$45(leads)
 $E587 DEFB $FF        ; Terminator.

; Messaging: The Bunsen Burner
t$E588 DEFM "THE BUNSEN" ; #FONT:(THE BUNSEN)$E0DC,attr=$45(the-bunsen)
 $E592 DEFB $BE,$01      ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $E594 DEFM "BURNER"     ; #FONT:(BURNER)$E0DC,attr=$45(burner)
 $E59A DEFB $FF          ; Terminator.

; Messaging: The Letter B
t$E59B DEFM "THE LETTER" ; #FONT:(THE LETTER)$E0DC,attr=$45(the-letter)
 $E5A5 DEFB $BE,$01      ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $E5A7 DEFM "B"          ; #FONT:(B)$E0DC,attr=$45(the-letter-b)
 $E5A8 DEFB $FF          ; Terminator.

; Messaging: Gas Mask
t$E5A9 DEFM "GAS MASK" ; #FONT:(GAS MASK)$E0DC,attr=$45(gas-mask)
 $E5B1 DEFB $FF        ; Terminator.

; Messaging: The Parcel
t$E5B2 DEFM "THE PARCEL" ; #FONT:(THE PARCEL)$E0DC,attr=$45(the-parcel)
 $E5BC DEFB $BE,$01      ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $E5BE DEFB $FF          ; Terminator.

; Messaging: Stamped
t$E5BF DEFB $F4,$02
 $E5C1 DEFM "STAMPED" ; #FONT:(STAMPED)$E0DC,attr=$45(stamped)
 $E5C8 DEFB $FF       ; Terminator.

; Messaging: Unstamped
t$E5C9 DEFM "UNSTAMPED" ; #FONT:(UNSTAMPED)$E0DC,attr=$45(unstamped)
 $E5D2 DEFB $FF         ; Terminator.

; Messaging: The Fuse
t$E5D3 DEFM "THE FUSE" ; #FONT:(THE FUSE)$E0DC,attr=$45(the-fuse)
 $E5DB DEFB $C0,$01    ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $E5DD DEFB $FF        ; Terminator.

; Messaging: Rewired
t$E5DE DEFB $F4,$01
 $E5E0 DEFM "REWIRED" ; #FONT:(REWIRED)$E0DC,attr=$45(rewired)
 $E5E7 DEFB $FF       ; Terminator.

; Messaging: Blown
t$E5E8 DEFM "BLOWN"  ; #FONT:(BLOWN)$E0DC,attr=$45(blown)
 $E5ED DEFB $FF      ; Terminator.

; Messaging: The Meat
t$E5EE DEFM "THE MEAT" ; #FONT:(THE MEAT)$E0DC,attr=$45(the-meat)
 $E5F6 DEFB $FF        ; Terminator.

; Messaging: The Monkey Wrench
t$E5F7 DEFM "THE MONKEY" ; #FONT:(THE MONKEY)$E0DC,attr=$45(the-monkey)
 $E601 DEFB $BE,$01      ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $E603 DEFM "WRENCH"     ; #FONT:(WRENCH)$E0DC,attr=$45(wrench)
 $E609 DEFB $FF          ; Terminator.

; Messaging: Screwdriver
t$E60A DEFM "SCREWDRIVER" ; #FONT:(SCREWDRIVER)$E0DC,attr=$45(screwdriver)
 $E615 DEFB $FF           ; Terminator.

; Messaging: The Letter E
t$E616 DEFM "THE LETTER" ; #FONT:(THE LETTER)$E0DC,attr=$45(the-letter)
 $E620 DEFB $BE,$01      ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $E622 DEFM "E"          ; #FONT:(E)$E0DC,attr=$45(the-letter-e)
 $E623 DEFB $FF          ; Terminator.

; Messaging: The Hook
t$E624 DEFM "THE HOOK" ; #FONT:(THE HOOK)$E0DC,attr=$45(the-hook)
 $E62C DEFB $C0,$01    ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $E62E DEFB $FF        ; Terminator.

; Messaging: Working
t$E62F DEFB $F4,$03
 $E631 DEFM "WORKING" ; #FONT:(WORKING)$E0DC,attr=$45(working)
 $E638 DEFB $FF       ; Terminator.

; Messaging: Broken
t$E639 DEFM "BROKEN" ; #FONT:(BROKEN)$E0DC,attr=$45(broken)
 $E63F DEFB $FF      ; Terminator.

; Messaging: The Patch
t$E640 DEFM "THE PATCH" ; #FONT:(THE PATCH)$E0DC,attr=$45(the-patch)
 $E649 DEFB $FF         ; Terminator.

; Messaging: The Pipe
t$E64A DEFM "THE PIPE" ; #FONT:(THE PIPE)$E0DC,attr=$45(the-pipe)
 $E652 DEFB $C0,$01    ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $E654 DEFB $FF        ; Terminator.

; Messaging: Patched
t$E655 DEFB $F4,$05
 $E657 DEFM "PATCHED" ; #FONT:(PATCHED)$E0DC,attr=$45(patched)
 $E65E DEFB $FF       ; Terminator.

; Messaging: Leaking
t$E65F DEFM "LEAKING" ; #FONT:(LEAKING)$E0DC,attr=$45(leaking)
 $E666 DEFB $FF       ; Terminator.

; Messaging: The Letter R
t$E667 DEFM "THE LETTER" ; #FONT:(THE LETTER)$E0DC,attr=$45(the-letter)
 $E671 DEFB $BE,$01      ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $E673 DEFM "R"          ; #FONT:(R)$E0DC,attr=$45(the-letter-r)
 $E674 DEFB $FF          ; Terminator.

; Messaging: The Oil Can
t$E675 DEFM "THE OIL" ; #FONT:(THE OIL)$E0DC,attr=$45(the-oil)
 $E67C DEFB $C1,$01   ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $E67E DEFM "CAN "    ; #FONT:(CAN)$E0DC,attr=$45(can)
 $E682 DEFB $FF       ; Terminator.

; Messaging: Full
t$E683 DEFB $F4,$07
 $E685 DEFM "FULL"   ; #FONT:(FULL)$E0DC,attr=$45(full)
 $E689 DEFB $FF      ; Terminator.

; Messaging: Empty
t$E68A DEFM "EMPTY"  ; #FONT:(EMPTY)$E0DC,attr=$45(empty)
 $E68F DEFB $FF      ; Terminator.

; Messaging: The Fuse Wire
t$E690 DEFM "THE FUSE" ; #FONT:(THE FUSE)$E0DC,attr=$45(the-fuse)
 $E698 DEFB $C0,$01    ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $E69A DEFM "WIRE"     ; #FONT:(WIRE)$E0DC,attr=$45(wire)
 $E69E DEFB $FF        ; Terminator.

; Messaging: The Good Insulator
t$E69F DEFM "THE GOOD"  ; #FONT:(THE GOOD)$E0DC,attr=$45(the-good)
 $E6A7 DEFB $C0,$01     ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $E6A9 DEFM "INSULATOR" ; #FONT:(INSULATOR)$E0DC,attr=$45(insulator)
 $E6B2 DEFB $FF         ; Terminator.

; Messaging: The Bottle
t$E6B3 DEFM "THE BOTTLE" ; #FONT:(THE BOTTLE)$E0DC,attr=$45(the-bottle)
 $E6BD DEFB $BE,$01      ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $E6BF DEFB $FF          ; Terminator.

; Messaging: Full
t$E6C0 DEFB $F4,$00
 $E6C2 DEFM "FULL"   ; #FONT:(FULL)$E0DC,attr=$45(full)
 $E6C6 DEFB $FF      ; Terminator.

; Messaging: Empty
t$E6C7 DEFM "EMPTY"  ; #FONT:(EMPTY)$E0DC,attr=$45(empty)
 $E6CC DEFB $FF      ; Terminator.

; Messaging: The Red Herring
t$E6CD DEFM "THE RED" ; #FONT:(THE RED)$E0DC,attr=$45(the-red)
 $E6D4 DEFB $C1,$01   ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $E6D6 DEFM "HERRING" ; #FONT:(HERRING)$E0DC,attr=$45(herring)
 $E6DD DEFB $FF       ; Terminator.

; Messaging: The Test Tube
t$E6DE DEFM "THE TEST" ; #FONT:(THE TEST)$E0DC,attr=$45(the-test)
 $E6E6 DEFB $C0,$01    ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $E6E8 DEFM "TUBE"     ; #FONT:(TUBE)$E0DC,attr=$45(tube)
 $E6EC DEFB $FF        ; Terminator.

; Messaging: The Can Of Beans
t$E6ED DEFM "THE CAN OF" ; #FONT:(THE CAN OF)$E0DC,attr=$45(the-can-of)
 $E6F7 DEFB $BE,$01      ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $E6F9 DEFM "BEANS"      ; #FONT:(BEANS)$E0DC,attr=$45(beans)
 $E6FE DEFB $FF          ; Terminator.

; Messaging: The Rubber Stamp
t$E6FF DEFM "THE RUBBER" ; #FONT:(THE RUBBER)$E0DC,attr=$45(the-rubber)
 $E709 DEFB $BE,$01      ; Move cursor: #N(#PEEK(#PC)-$C8), #N(#PEEK(#PC+$01)).
 $E70B DEFM "STAMP"      ; #FONT:(STAMP)$E0DC,attr=$45(stamp)
 $E710 DEFB $FF          ; Terminator.

; Messaging: The Pliers
t$E711 DEFM "THE PLIERS" ; #FONT:(THE PLIERS)$E0DC,attr=$45(the-pliers)
 $E71B DEFB $FF          ; Terminator.

; Messaging: The Whistle
t$E71C DEFM "THE WHISTLE" ; #FONT:(THE WHISTLE)$E0DC,attr=$45(the-whistle)
 $E727 DEFB $FF           ; Terminator.

; Table: Item Labels
@label=Table_ItemLabels
w$E728 DEFW $E484    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E72A DEFW $E490    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E72C DEFW $E49E    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E72E DEFW $E4A7    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E730 DEFW $E4B0    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E732 DEFW $E4CD    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E734 DEFW $E4DB    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E736 DEFW $E4E6    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E738 DEFW $E4F1    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E73A DEFW $E4FC    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E73C DEFW $E508    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E73E DEFW $E51F    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E740 DEFW $E528    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E742 DEFW $E539    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E744 DEFW $E543    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E746 DEFW $E54D    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E748 DEFW $E55E    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E74A DEFW $E578    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E74C DEFW $E588    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E74E DEFW $E59B    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E750 DEFW $E5A9    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E752 DEFW $E5B2    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E754 DEFW $E5D3    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E756 DEFW $E5EE    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E758 DEFW $E5F7    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E75A DEFW $E60A    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E75C DEFW $E616    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E75E DEFW $E624    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E760 DEFW $E640    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E762 DEFW $E64A    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E764 DEFW $E667    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E766 DEFW $E675    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E768 DEFW $E690    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E76A DEFW $E69F    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E76C DEFW $E6B3    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E76E DEFW $E6CD    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E770 DEFW $E6DE    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E772 DEFW $E6ED    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E774 DEFW $E6FF    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E776 DEFW $E711    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).
 $E778 DEFW $E71C    ; #D(#PEEK(#PC)+#PEEK(#PC+$01)*$100).

; Routine at E77A
;
; Used by the routine at #R$E41D.
c$E77A PUSH HL       ; {Stash #REGhl, #REGbc and #REGde on the stack.
 $E77B PUSH BC       ;
 $E77C PUSH DE       ; }
 $E77D LD IX,$81F8   ; #REGix=#R$81F8.
 $E781 LD C,$20      ; #REGc=#N$20.
*$E783 LD L,(IX+$00) ; #REGl=#REGix+#N$00.
 $E786 LD H,(IX+$01) ; #REGh=#REGix+#N$01.
 $E789 LD B,$0F      ; #REGb=#N$0F.
*$E78B LD (HL),$00   ; Write #N$00 to *#REGhl.
 $E78D INC HL        ; Increment #REGhl by one.
 $E78E DJNZ $E78B    ; Decrease counter by one and loop back to #R$E78B until
                     ; counter is zero.
 $E790 INC IX        ; {Increment #REGix by two.
 $E792 INC IX        ; }
 $E794 DEC C         ; Decrease #REGc by one.
 $E795 JR NZ,$E783   ; Jump to #R$E783 until #REGc is zero.
 $E797 POP DE        ; {Restore #REGde, #REGbc and #REGhl from the stack.
 $E798 POP BC        ;
 $E799 POP HL        ; }
 $E79A RET           ; Return.

; Handler: Change Characters
;
; Used by the routine at #R$8184.
@label=Handler_ChangeCharacters
c$E79B LD A,$F7        ; {Read from the keyboard;
 $E79D IN A,($FE)      ; #TABLE(default,centre,centre,centre,centre,centre,centre)
                       ; { =h,r2 Port Number | =h,c5 Bit }
                       ; { =h 0 | =h 1 | =h 2 | =h 3 | =h 4 }
                       ; { #N$F7 | 1 | 2 | 3 | 4 | 5 }
                       ; TABLE#}
 $E79F OR %11100000    ; Set bits 5-7.
 $E7A1 XOR %11111111   ; {Return if no keys have been pressed.
 $E7A3 RET Z           ; }
; Fetch room ID for the current character.
 $E7A4 LD B,(IY+$0F)   ; #REGb=*#REGiy+#N$0F.
 $E7A7 PUSH IY         ; Stash the character pointer in #REGiy on the stack.
; Loop through the port bits and correlate them with the base character
; reference in #R$BC67(#REGiy).
; .
; This associates each character with a keypress.
; #TABLE(default,centre,centre)
; { =h Key | =h Character }
; { #N$01 | Wally }
; { #N$02 | Wilma }
; { #N$03 | Tom }
; { #N$04 | Dick }
; { #N$05 | Harry }
; TABLE#
 $E7A9 LD IY,$BC67     ; #REGiy=#R$BC67.
@label=ChangeCharacters_WhichCharacter_Loop
*$E7AD RRCA            ; Rotate #REGa right once.
 $E7AE JR C,$E7B4      ; If this key has been pressed, jump to #R$E7B4.
 $E7B0 INC IY          ; Increment #REGiy by one.
 $E7B2 JR $E7AD        ; Jump to #R$E7AD.
; Check if the current character is in the same room as the selected character.
@label=ChangeCharacters_CheckRoom
*$E7B4 LD A,(IY+$0F)   ; #REGa=*#REGiy+#N$0F.
 $E7B7 CP B            ; {If this is the same room, jump to #R$E7C0.
 $E7B8 JR Z,$E7C0      ; }
 $E7BA CALL $BA6E      ; Call #R$BA6E.
@label=ChangeCharacters_Return
*$E7BD POP IY          ; Restore the character pointer in #REGiy from the
                       ; stack.
 $E7BF RET             ; Return.
@label=ChangeCharacters_Process
*$E7C0 CALL $A921      ; Call #R$A921.
 $E7C3 JR Z,$E7BD      ; If the selected character is the current character,
                       ; jump to #R$E7BD.
 $E7C5 LD ($B09D),IY   ; Write #REGiy to *#R$B09D.
 $E7C9 POP IY          ; Restore #REGiy from the stack.
 $E7CB LD A,B          ; #REGa=#REGb.
 $E7CC CALL $AC69      ; Call #R$AC69.
 $E7CF LD A,(HL)       ;
 $E7D0 LD (IY+$69),A   ;
 $E7D3 INC HL          ;
 $E7D4 LD A,(HL)       ;
 $E7D5 LD (IY+$64),A   ;
 $E7D8 INC HL          ;
 $E7D9 LD A,(HL)       ;
 $E7DA LD (IY+$73),A   ;
 $E7DD LD (IY+$6E),$05 ;
 $E7E1 LD IY,($B09D)   ; #REGiy=*#R$B09D.
 $E7E5 CALL $E3FD      ; Call #R$E3FD.
 $E7E8 RET             ; Return.

; Data block at E7E9
b$E7E9 DEFB $95,$EB,$ED,$EB,$B3,$ED,$2B,$EC
 $E7F1 DEFB $C4,$EB,$E2,$EB,$FE,$EB,$34,$EC
 $E7F9 DEFB $01,$EB,$0F,$EB,$A3,$ED,$A8,$ED
 $E801 DEFB $AC,$ED,$BC,$EC,$79,$EB,$F7,$ED
 $E809 DEFB $C6,$ED,$C7,$EF,$77,$F1,$04,$48
 $E811 DEFB $60,$05,$08,$01,$18,$01,$00,$F7
 $E819 DEFB $05,$00,$02,$08,$F6,$04,$48,$98
 $E821 DEFB $01,$10,$02,$08,$F7,$05,$02,$02
 $E829 DEFB $04,$F6,$04,$48,$60,$06,$18,$F7
 $E831 DEFB $09,$F6,$04,$48,$60,$06,$00,$F7
 $E839 DEFB $09,$F6,$FF,$04,$E0,$90,$F7,$07
 $E841 DEFB $F6,$FF,$00,$00,$F7,$00,$F6,$01
 $E849 DEFB $15,$01,$26,$05,$02,$04,$18,$98
 $E851 DEFB $F7,$05,$09,$02,$02,$F6,$FF,$FF
 $E859 DEFB $05,$10,$00,$00,$F7,$05,$1C,$00
 $E861 DEFB $F6,$00,$01,$F7,$00,$F6,$04,$F0
 $E869 DEFB $98,$01,$1F,$02,$07,$05,$04,$F7
 $E871 DEFB $05,$05,$02,$0C,$F6,$FF,$00,$00
 $E879 DEFB $F7,$00,$F6,$FF,$FF,$FF,$05,$04
 $E881 DEFB $00,$00,$F7,$00,$F6,$05,$04,$03
 $E889 DEFB $00,$04,$02,$06,$F7,$05,$1E,$F6
 $E891 DEFB $00,$01,$F7,$05,$1F,$00,$F6,$05
 $E899 DEFB $01,$01,$08,$01,$06,$04,$80,$98
 $E8A1 DEFB $F7,$05,$0D,$02,$09,$06,$0C,$0C
 $E8A9 DEFB $0F,$06,$0C,$0C,$13,$F6,$FF,$05
 $E8B1 DEFB $01,$01,$10,$02,$04,$01,$03,$00
 $E8B9 DEFB $00,$F7,$05,$0C,$03,$04,$01,$03
 $E8C1 DEFB $F6,$04,$F0,$98,$F7,$0A,$F6,$FF
 $E8C9 DEFB $00,$00,$F7,$00,$F6,$00,$01,$F7
 $E8D1 DEFB $00,$F6,$00,$02,$F7,$00,$F6,$03
 $E8D9 DEFB $00,$1D,$01,$1C,$01,$0F,$04,$78
 $E8E1 DEFB $98,$05,$08,$F7,$05,$07,$02,$05
 $E8E9 DEFB $F6,$03,$00,$1B,$01,$0E,$04,$78
 $E8F1 DEFB $98,$05,$01,$F7,$05,$08,$02,$03
 $E8F9 DEFB $F6,$FF,$06,$19,$00,$00,$F7,$09
 $E901 DEFB $F6,$06,$21,$07,$00,$21,$00,$00
 $E909 DEFB $F7,$09,$F6,$05,$10,$01,$19,$01
 $E911 DEFB $21,$02,$0D,$00,$00,$F7,$05,$04
 $E919 DEFB $01,$21,$02,$0B,$F6,$FF,$00,$00
 $E921 DEFB $F7,$00,$F6,$FF,$04,$F0,$98,$F7
 $E929 DEFB $0A,$F6,$FF,$00,$00,$F7,$00,$F6
 $E931 DEFB $FF,$05,$04,$01,$22,$02,$00,$00
 $E939 DEFB $00,$F7,$05,$0E,$01,$22,$F6,$FF
 $E941 DEFB $FF,$00,$00,$F7,$00,$F6,$00,$01
 $E949 DEFB $F7,$00,$F6,$05,$04,$02,$0A,$03
 $E951 DEFB $00,$12,$03,$01,$22,$01,$09,$04
 $E959 DEFB $60,$98,$F7,$05,$03,$02,$00,$F6
 $E961 DEFB $FF,$00,$00,$F7,$00,$F6,$04,$D8
 $E969 DEFB $98,$01,$0D,$01,$1F,$F7,$05,$17
 $E971 DEFB $02,$07,$F6,$02,$0B,$04,$3C,$98
 $E979 DEFB $01,$04,$01,$11,$05,$10,$F7,$05
 $E981 DEFB $0B,$02,$06,$F6,$FF,$04,$08,$90
 $E989 DEFB $F7,$07,$F6,$04,$00,$98,$F7,$0A
 $E991 DEFB $F6,$FF,$05,$02,$01,$0B,$00,$00
 $E999 DEFB $F7,$00,$F6,$05,$02,$01,$02,$03
 $E9A1 DEFB $00,$0B,$00,$01,$F7,$05,$10,$00
 $E9A9 DEFB $F6,$05,$02,$01,$07,$03,$00,$0B
 $E9B1 DEFB $03,$01,$02,$00,$02,$F7,$05,$11
 $E9B9 DEFB $01,$07,$F6,$FF,$FF,$00,$00,$F7
 $E9C1 DEFB $00,$F6,$04,$EC,$98,$05,$02,$01
 $E9C9 DEFB $13,$F7,$05,$12,$08,$F6,$04,$EC
 $E9D1 DEFB $98,$05,$04,$01,$1E,$F7,$05,$13
 $E9D9 DEFB $08,$F6,$04,$EC,$98,$05,$08,$01
 $E9E1 DEFB $1A,$F7,$05,$14,$08,$F6,$04,$EC
 $E9E9 DEFB $98,$05,$10,$01,$01,$F7,$05,$15
 $E9F1 DEFB $08,$F6,$04,$EC,$98,$05,$01,$01
 $E9F9 DEFB $05,$F7,$05,$16,$05,$01,$08,$F6
 $EA01 DEFB $04,$EC,$98,$05,$02,$06,$13,$F7
 $EA09 DEFB $09,$F6,$04,$EC,$98,$05,$04,$06
 $EA11 DEFB $1E,$F7,$09,$F6,$04,$EC,$98,$05
 $EA19 DEFB $08,$06,$1A,$F7,$09,$F6,$04,$EC
 $EA21 DEFB $98,$05,$10,$06,$01,$F7,$09,$F6
 $EA29 DEFB $04,$EC,$98,$05,$01,$06,$05,$F7
 $EA31 DEFB $09,$F6,$FF,$00,$00,$F7,$00,$F6
 $EA39 DEFB $FF,$FF,$00,$00,$F7,$00,$F6,$03
 $EA41 DEFB $00,$16,$02,$01,$02,$0B,$00,$01
 $EA49 DEFB $F7,$00,$F6,$01,$16,$01,$20,$05
 $EA51 DEFB $10,$F7,$05,$06,$02,$01,$F6,$FF
 $EA59 DEFB $04,$00,$98,$F7,$0A,$F6,$FF,$00
 $EA61 DEFB $00,$F7,$05,$18,$00,$F6,$07,$00
 $EA69 DEFB $0C,$06,$0C,$F7,$09,$F6,$FF,$FF
 $EA71 DEFB $00,$00,$F7,$00,$F6,$FF,$03,$01
 $EA79 DEFB $1B,$02,$03,$05,$02,$00,$00,$F7
 $EA81 DEFB $00,$05,$0A,$F6,$03,$01,$1B,$02
 $EA89 DEFB $03,$F7,$05,$19,$F6,$00,$01,$F7
 $EA91 DEFB $00,$F6,$FF,$03,$00,$17,$F7,$05
 $EA99 DEFB $1A,$F6,$00,$00,$F7,$00,$F6,$FF
 $EAA1 DEFB $05,$08,$00,$00,$F7,$00,$F6,$03
 $EAA9 DEFB $00,$1D,$02,$05,$F7,$05,$0F,$02
 $EAB1 DEFB $0A,$F6,$01,$1E,$F7,$05,$1B,$F6
 $EAB9 DEFB $00,$01,$F7,$00,$F6,$FF

; Routine at EABF
;
; Used by the routine at #R$8184.
c$EABF LD A,(IY+$0F) ;
 $EAC2 LD ($B951),A  ;
 $EAC5 LD HL,$E80F   ;
 $EAC8 CALL $AC6C    ;
; This entry point is used by the routines at #R$EB79, #R$EC2B and #R$ED2A.
*$EACB LD A,(HL)     ;
 $EACC INC HL        ;
 $EACD CP $FF        ;
 $EACF RET Z         ;
 $EAD0 CP $F7        ;
 $EAD2 JR Z,$EAEB    ;
 $EAD4 ADD A,A       ;
 $EAD5 LD E,A        ;
 $EAD6 LD D,$00      ;
 $EAD8 PUSH HL       ;
 $EAD9 LD HL,$E7E9   ;
 $EADC ADD HL,DE     ;
 $EADD LD E,(HL)     ;
 $EADE INC HL        ;
 $EADF LD D,(HL)     ;
 $EAE0 POP HL        ;
 $EAE1 PUSH DE       ;
 $EAE2 RET           ;
; This entry point is used by the routines at #R$EB79, #R$EC2B and #R$ED2A.
*$EAE3 LD A,(HL)     ;
 $EAE4 INC HL        ;
 $EAE5 CP $F6        ;
 $EAE7 JR Z,$EACB    ;
 $EAE9 JR $EAE3      ;
; This entry point is used by the routines at #R$EB79, #R$EC4A and #R$ED2A.
*$EAEB LD A,(HL)     ;
 $EAEC INC HL        ;
 $EAED CP $F6        ;
 $EAEF JP Z,$EACB    ;
 $EAF2 ADD A,A       ;
 $EAF3 LD E,A        ;
 $EAF4 LD D,$00      ;
 $EAF6 PUSH HL       ;
 $EAF7 LD HL,$E7F9   ;
 $EAFA ADD HL,DE     ;
 $EAFB LD E,(HL)     ;
 $EAFC INC HL        ;
 $EAFD LD D,(HL)     ;
 $EAFE POP HL        ;
 $EAFF PUSH DE       ;
 $EB00 RET           ;
 $EB01 LD A,$01      ;
 $EB03 LD ($EB54),A  ;
 $EB06 LD B,(IY-$2D) ;
 $EB09 CALL $AA30    ;
 $EB0C JP $EAEB      ;
 $EB0F LD A,$01      ;
 $EB11 LD ($EB54),A  ;
 $EB14 LD B,(IY-$2D) ;
 $EB17 LD C,(HL)     ;
 $EB18 INC HL        ;
 $EB19 PUSH HL       ;
 $EB1A PUSH IY       ;
 $EB1C CALL $AA8C    ;
 $EB1F LD A,(IY+$50) ;
 $EB22 CP C          ;
 $EB23 JR Z,$EB2F    ;
 $EB25 INC IY        ;
 $EB27 INC IY        ;
 $EB29 INC IY        ;
 $EB2B INC IY        ;
 $EB2D INC IY        ;
*$EB2F LD C,(HL)     ;
 $EB30 LD A,(IY+$50) ;
 $EB33 LD (HL),A     ;
 $EB34 LD (IY+$50),C ;
 $EB37 INC HL        ;
 $EB38 INC HL        ;
 $EB39 INC HL        ;
 $EB3A LD A,(HL)     ;
 $EB3B RES 7,A       ;
 $EB3D LD C,A        ;
 $EB3E LD A,(HL)     ;
 $EB3F AND $80       ;
 $EB41 OR (IY-$37)   ;
 $EB44 LD (HL),A     ;
 $EB45 LD (IY-$37),C ;
 $EB48 POP IY        ;
 $EB4A CALL $E41D    ;
 $EB4D CALL $AA7F    ;
 $EB50 POP HL        ;
 $EB51 JP $EAEB      ;

; Game status buffer entry at EB54
g$EB54 DEFB $00

; Routine at EB55
;
; Used by the routine at #R$8184.
c$EB55 LD BC,$0000   ; #REGbc=#N($0000,$04,$04).
 $EB58 CALL $AA8C    ; Call #R$AA8C.
*$EB5B LD A,(HL)     ;
 $EB5C CP $FF        ;
 $EB5E JR Z,$EB72    ;
 $EB60 INC HL        ;
 $EB61 LD A,(IY+$05) ;
 $EB64 SUB (HL)      ;
 $EB65 INC HL        ;
 $EB66 INC HL        ;
 $EB67 INC HL        ;
 $EB68 SUB $06       ;
 $EB6A CP $F4        ;
 $EB6C JR C,$EB5B    ;
 $EB6E LD C,$01      ;
 $EB70 JR $EB5B      ;
*$EB72 LD A,C        ; {Return if #REGc is not zero.
 $EB73 OR A          ;
 $EB74 RET NZ        ; }
 $EB75 LD ($EB54),A  ; Write #REGa to *#R$EB54.
 $EB78 RET           ; Return.

; Routine at EB79
c$EB79 LD A,(HL)     ;
 $EB7A INC HL        ;
 $EB7B LD E,(HL)     ;
 $EB7C INC HL        ;
 $EB7D LD D,(HL)     ;
 $EB7E INC HL        ;
 $EB7F PUSH HL       ;
 $EB80 PUSH DE       ;
 $EB81 ADD A,A       ;
 $EB82 LD E,A        ;
 $EB83 LD D,$00      ;
 $EB85 LD HL,$BD86   ;
 $EB88 ADD HL,DE     ;
 $EB89 LD E,(HL)     ;
 $EB8A INC HL        ;
 $EB8B LD D,(HL)     ;
 $EB8C EX DE,HL      ;
 $EB8D POP DE        ;
 $EB8E CALL $B82B    ;
 $EB91 POP HL        ;
 $EB92 JP $EAEB      ;
 $EB95 LD B,(HL)     ;
 $EB96 INC HL        ;
 $EB97 PUSH HL       ;
 $EB98 LD A,($EB54)  ;
 $EB9B OR A          ;
 $EB9C JR NZ,$EBC0   ;
 $EB9E LD (IY-$2D),B ;
 $EBA1 CALL $AA8C    ;
 $EBA4 LD A,(IY+$05) ;
 $EBA7 INC HL        ;
 $EBA8 SUB (HL)      ;
 $EBA9 SUB $04       ;
 $EBAB CP $F8        ;
 $EBAD JR C,$EBC0    ;
 $EBAF INC HL        ;
 $EBB0 LD A,(IY+$0A) ;
 $EBB3 ADD A,$10     ;
 $EBB5 SUB (HL)      ;
 $EBB6 SUB $04       ;
 $EBB8 CP $F8        ;
 $EBBA JR C,$EBC0    ;
 $EBBC POP HL        ;
 $EBBD JP $EACB      ;
*$EBC0 POP HL        ;
 $EBC1 JP $EAE3      ;
 $EBC4 LD A,(IY+$05) ;
 $EBC7 SUB (HL)      ;
 $EBC8 SUB $04       ;
 $EBCA CP $F8        ;
 $EBCC JR C,$EBDD    ;
 $EBCE INC HL        ;
 $EBCF LD A,(IY+$0A) ;
 $EBD2 SUB (HL)      ;
 $EBD3 SUB $04       ;
 $EBD5 CP $F8        ;
 $EBD7 JR C,$EBDE    ;
 $EBD9 INC HL        ;
 $EBDA JP $EACB      ;
*$EBDD INC HL        ;
*$EBDE INC HL        ;
 $EBDF JP $EAE3      ;
 $EBE2 LD A,(HL)     ;
 $EBE3 INC HL        ;
 $EBE4 CP (IY-$28)   ;
 $EBE7 JP Z,$EACB    ;
 $EBEA JP $EAE3      ;
 $EBED LD A,(HL)     ;
 $EBEE INC HL        ;
 $EBEF CP (IY+$50)   ;
 $EBF2 JP Z,$EACB    ;
 $EBF5 CP (IY+$55)   ;
 $EBF8 JP Z,$EACB    ;
 $EBFB JP $EAE3      ;
 $EBFE LD A,(HL)     ;
 $EBFF INC HL        ;
 $EC00 CP (IY+$50)   ;
 $EC03 JP Z,$EAE3    ;
 $EC06 CP (IY+$55)   ;
 $EC09 JP Z,$EAE3    ;
 $EC0C JP $EACB      ;

; Game Flags
@label=Flag_Bottle_Full
g$EC0F DEFB $00
@label=Flag_Fuse_Rewired
 $EC10 DEFB $01
@label=Flag_Parcel_Stamped
 $EC11 DEFB $02
@label=Flag_Hook_Working
 $EC12 DEFB $03
@label=Flag_Bucket_Full
 $EC13 DEFB $04
@label=Flag_Pipe_Patched
 $EC14 DEFB $05
@label=Flag_Battery_Charged
 $EC15 DEFB $06
@label=Flag_OilCan_Full
 $EC16 DEFB $07
@label=Flag_Fountain_Repaired
 $EC17 DEFB $08
@label=Flag_Wall_Built
 $EC18 DEFB $09
 $EC19 DEFB $0A
 $EC1A DEFB $0B
 $EC1B DEFB $0C
@label=Flag_PhoneBox_Completed
 $EC1C DEFB $0D

; Handler: Is A Given Task Completed
;
; Used by the routines at #R$B952, #R$E41D, #R$ED2A, #R$F10E and #R$F5F1.
;
; A Task ID
@label=Handler_TaskCompleted
c$EC1D PUSH HL       ; {Stash #REGhl and #REGde on the stack.
 $EC1E PUSH DE       ; }
 $EC1F LD E,A        ; {Create an offset in #REGde.
 $EC20 LD D,$00      ; }
 $EC22 LD HL,$EC0F   ; {#REGhl=#R$EC0F+#REGde.
 $EC25 ADD HL,DE     ; }
 $EC26 LD A,(HL)     ; #REGa=*#REGhl.
 $EC27 POP DE        ; {Restore #REGde and #REGhl from the stack.
 $EC28 POP HL        ; }
 $EC29 OR A          ; Set flags.
 $EC2A RET           ; Return.

; Routine at EC2B
c$EC2B CALL $EC3D    ; Call #R$EC3D.
 $EC2E JP Z,$EACB    ; If the return zero flag is zero, jump to #R$EACB.
 $EC31 JP $EAE3      ; Jump to #R$EAE3.
 $EC34 CALL $EC3D    ; Call #R$EC3D.
 $EC37 JP NZ,$EACB   ; If the return zero flag is not zero, jump to #R$EACB.
 $EC3A JP $EAE3      ; Jump to #R$EAE3.
*$EC3D LD B,(HL)     ; #REGb=*#REGhl.
 $EC3E INC HL        ; Increment #REGhl by one.
 $EC3F LD A,(HL)     ; #REGa=*#REGhl.
 $EC40 INC HL        ; Increment #REGhl by one.
 $EC41 PUSH HL       ; {Stash #REGaf and #REGhl on the stack.
 $EC42 PUSH AF       ; }
 $EC43 CALL $AA8C    ; Call #R$AA8C.
 $EC46 POP AF        ; Restore #REGaf from the stack.
 $EC47 CP (HL)       ; Compare #REGa against *#REGhl.
 $EC48 POP HL        ; Restore #REGhl from the stack.
 $EC49 RET           ; Return.

; Routine at EC4A
;
; Used by the routine at #R$ED2A.
c$EC4A LD E,(HL)     ;
 $EC4B INC HL        ;
; This entry point is used by the routine at #R$ED2A.
*$EC4C PUSH HL       ;
 $EC4D LD D,$00      ;
 $EC4F LD HL,$EC0F   ;
 $EC52 ADD HL,DE     ;
 $EC53 CP (HL)       ;
 $EC54 LD (HL),A     ;
 $EC55 CALL NZ,$E41D ;
 $EC58 POP HL        ;
 $EC59 JP $EAEB      ;

; Data block at EC5C
b$EC5C DEFB $00,$50,$01,$01,$00,$01,$02,$20
 $EC64 DEFB $00,$03,$50,$01,$04,$50,$01,$05
 $EC6C DEFB $50,$00,$06,$50,$00,$07,$40,$00
 $EC74 DEFB $08,$50,$00,$09,$20,$00,$0A,$50
 $EC7C DEFB $01,$0B,$50,$00,$0C,$50,$00,$0D
 $EC84 DEFB $50,$01,$0E,$50,$00,$0F,$20,$01
 $EC8C DEFB $10,$50,$00,$11,$00,$01,$12,$00
 $EC94 DEFB $02,$13,$00,$02,$14,$00,$02,$15
 $EC9C DEFB $00,$02,$16,$00,$02,$17,$20,$00
 $ECA4 DEFB $18,$50,$00,$19,$70,$00,$1A,$40
 $ECAC DEFB $00,$1B,$50,$00,$1C,$60,$00,$1D
 $ECB4 DEFB $00,$01,$1E,$60,$00,$1F,$50,$00
 $ECBC DEFB $5E,$23,$16,$00,$E5,$21,$5C,$EC
 $ECC4 DEFB $19,$19,$19,$7E,$B7,$20,$26,$36
 $ECCC DEFB $01,$23,$FD,$7E,$F6,$86,$27,$FD
 $ECD4 DEFB $77,$F6,$23,$FD,$7E,$E2,$8E,$27
 $ECDC DEFB $FD,$77,$E2,$2B,$3A,$FF,$EC,$86
 $ECE4 DEFB $27,$32,$FF,$EC,$23,$3A,$FE,$EC
 $ECEC DEFB $8E,$27,$32,$FE,$EC,$E1,$C3,$EB
 $ECF4 DEFB $EA
 $ECF5 DEFB $00
 $ECF6 DEFB $00,$06,$00,$13,$00,$21,$00,$40

; Total Gang Earnings
@label=TotalGangEarnings
g$ECFE DEFB $00
 $ECFF DEFB $00

; Game status buffer entry at ED00
g$ED00 DEFW $7E71
 $ED02 DEFW $7E9F
 $ED04 DEFW $7ECC
 $ED06 DEFB $30,$78,$02,$02,$78,$44,$FE,$02
 $ED0E DEFB $C0,$8C,$02,$FE,$7C

; Routine at ED13
;
; Used by the routine at #R$F10E.
c$ED13 LD A,$02      ;
 $ED15 LD ($F26E),A  ;
 $ED18 LD A,($ED12)  ;
 $ED1B CALL $ED8A    ;
 $ED1E ADD A,$02     ;
 $ED20 CP $82        ;
 $ED22 JR NZ,$ED26   ;
 $ED24 LD A,$7C      ;
*$ED26 LD ($ED12),A  ;
 $ED29 RET           ;

; Routine at ED2A
;
; Used by the routine at #R$8184.
c$ED2A LD A,($ECF5)    ; {#REGe=*#R$ECF5*#N$02.
 $ED2D ADD A,A         ;
 $ED2E LD E,A          ; }
 $ED2F LD D,$00        ; #REGd=#N$00.
 $ED31 LD HL,$ECF6     ; {#REGhl=#R$ECF6+#REGde.
 $ED34 ADD HL,DE       ; }
 $ED35 LD A,($ECFF)    ; #REGa=*#R$ECFF.
 $ED38 SUB (HL)        ;
 $ED39 INC HL          ;
 $ED3A LD A,($ECFE)    ;
 $ED3D SBC A,(HL)      ;
 $ED3E RET C           ;
 $ED3F LD BC,$0000     ;
*$ED42 DEC BC          ;
 $ED43 NOP             ;
 $ED44 NOP             ;
 $ED45 LD A,B          ;
 $ED46 OR C            ;
 $ED47 JR NZ,$ED42     ;
 $ED49 CALL $B902      ;
 $ED4C LD HL,$ED00     ; #REGhl=#R$ED00.
 $ED4F ADD HL,DE       ;
 $ED50 LD E,(HL)       ;
 $ED51 INC HL          ;
 $ED52 LD D,(HL)       ;
 $ED53 EX DE,HL        ;
 $ED54 LD DE,$0000     ; #REGde=#N($0000,$04,$04).
 $ED57 CALL $B8C4      ; Call #R$B8C4.
 $ED5A CALL $B9AC      ; Call #R$B9AC.
*$ED5D CALL $EEA2      ; Call #R$EEA2.
 $ED60 LD A,($ECF5)    ;
 $ED63 ADD A,A         ;
 $ED64 ADD A,$65       ;
 $ED66 LD IX,$ED06     ; #REGix=#R$ED06.
 $ED6A LD B,$03        ; #REGb=#N$03.
*$ED6C PUSH BC         ; Stash #REGbc on the stack.
 $ED6D LD BC,$F5CA     ; #REGbc=#R$F5CA.
 $ED70 CALL $EF35      ; Call #R$EF35.
 $ED73 CALL $A8A0      ; Call #R$A8A0.
 $ED76 POP BC          ;
 $ED77 DJNZ $ED6C      ;
 $ED79 CALL $B9FB      ; Call #R$B9FB.
 $ED7C CALL $ABD7      ; Call #R$ABD7.
 $ED7F OR A            ;
 $ED80 JR Z,$ED5D      ;
 $ED82 LD HL,$ECF5     ; {Incremnt *#R$ECF5 by one.
 $ED85 INC (HL)        ; }
 $ED86 CALL $B952      ; Call #R$B952.
 $ED89 RET             ; Return.
; This entry point is used by the routines at #R$ED13 and #R$F10E.
*$ED8A LD IX,$ED06     ;
 $ED8E LD B,$03        ;
*$ED90 PUSH BC         ;
 $ED91 LD BC,$F5CA     ;
 $ED94 CALL $EF35      ;
 $ED97 CALL $A8A0      ;
 $ED9A PUSH AF         ;
 $ED9B CALL $E329      ;
 $ED9E POP AF          ;
 $ED9F POP BC          ;
 $EDA0 DJNZ $ED90      ;
 $EDA2 RET             ;
 $EDA3 LD A,$01        ;
 $EDA5 JP $EC4A        ;
 $EDA8 XOR A           ;
 $EDA9 JP $EC4A        ;
 $EDAC LD E,(HL)       ;
 $EDAD INC HL          ;
 $EDAE LD A,(HL)       ;
 $EDAF INC HL          ;
 $EDB0 JP $EC4C        ;
 $EDB3 LD A,(HL)       ;
 $EDB4 INC HL          ;
 $EDB5 CALL $EC1D      ;
 $EDB8 JP Z,$EAE3      ;
 $EDBB JP $EACB        ;
 $EDBE RST $38         ;
 $EDBF LD (BC),A       ;
 $EDC0 INC B           ;
 $EDC1 EX AF,AF'       ;
 $EDC2 DJNZ $EDC5      ;
 $EDC4 RST $38         ;
*$EDC5 LD BC,$21E5     ;
 $EDC8 CP (HL)         ;
 $EDC9 DEFB $ED,$3A    ;
 $EDCB PUSH BC         ;
 $EDCC LD A,R          ;
 $EDCE LD D,$00        ;
 $EDD0 ADD HL,DE       ;
 $EDD1 LD A,(HL)       ;
 $EDD2 CP $FF          ;
 $EDD4 JR Z,$EDE5      ;
 $EDD6 CP (IY-$28)     ;
 $EDD9 JR NZ,$EDE9     ;
 $EDDB INC E           ;
 $EDDC LD A,E          ;
 $EDDD LD ($EDC5),A    ;
 $EDE0 CP $06          ;
 $EDE2 JP Z,$B3C3      ;
*$EDE5 POP HL          ;
 $EDE6 JP $EAEB        ;
*$EDE9 DEC HL          ;
 $EDEA LD A,(HL)       ;
 $EDEB CP (IY-$28)     ;
 $EDEE JR Z,$EDE5      ;
 $EDF0 LD A,$01        ;
 $EDF2 LD ($EDC5),A    ;
 $EDF5 JR $EDE5        ;
 $EDF7 XOR A           ;
 $EDF8 LD ($FAEF),A    ;
 $EDFB DEC A           ;
 $EDFC LD ($F9F0),A    ;
 $EDFF LD (IY+$00),$6E ;
 $EE03 LD A,(IY+$05)   ;
 $EE06 CP $80          ;
 $EE08 LD (IY+$05),$C0 ;
 $EE0C JR NC,$EE12     ;
 $EE0E LD (IY+$05),$30 ;
*$EE12 LD (IY+$0A),$78 ;
 $EE16 LD HL,$F879     ;
 $EE19 LD DE,$80A9     ;
 $EE1C LD BC,$003C     ;
 $EE1F LDIR            ;
 $EE21 CALL $B902      ;
 $EE24 LD HL,$4800     ;
 $EE27 LD D,$00        ;
 $EE29 LD A,$53        ;
 $EE2B LD R,A          ;
*$EE2D LD A,R          ;
 $EE2F LD E,A          ;
 $EE30 LD (HL),$20     ;
 $EE32 ADD HL,DE       ;
 $EE33 LD A,H          ;
 $EE34 CP $58          ;
 $EE36 JR NZ,$EE2D     ;
 $EE38 LD HL,$7F02     ;
 $EE3B LD DE,$0F04     ;
 $EE3E CALL $B84B      ;
 $EE41 CALL $B9AC      ;
*$EE44 CALL $BAB4      ;
 $EE47 CALL $EEA2      ;
 $EE4A CALL $F93A      ;
 $EE4D CALL $F9F5      ;
 $EE50 CALL $F9F5      ;
 $EE53 CALL $F9F5      ;
 $EE56 CALL $F8B9      ;
 $EE59 CALL $B9FB      ;
 $EE5C LD A,(IY+$05)   ;
 $EE5F LD B,A          ;
 $EE60 SUB $24         ;
 $EE62 CP $F8          ;
 $EE64 JR NC,$EE6D     ;
 $EE66 LD A,B          ;
 $EE67 SUB $D4         ;
 $EE69 CP $F8          ;
 $EE6B JR C,$EE44      ;
*$EE6D LD A,(IY+$0A)   ;
 $EE70 SUB $7C         ;
 $EE72 CP $F8          ;
 $EE74 JR C,$EE44      ;
 $EE76 LD A,B          ;
 $EE77 CP $80          ;
 $EE79 JR NC,$EE85     ;
 $EE7B LD (IY+$05),$04 ;
 $EE7F LD (IY+$0F),$13 ;
 $EE83 JR $EE8D        ;
*$EE85 LD (IY+$05),$DC ;
 $EE89 LD (IY+$0F),$01 ;
; This entry point is used by the routines at #R$EFC7 and #R$F10E.
*$EE8D CALL $B952      ;
 $EE90 LD (IY+$0A),$98 ;
 $EE94 LD (IY+$46),$00 ;
 $EE98 LD (IY+$00),$00 ;
 $EE9C LD SP,$FC00     ;
 $EE9F JP $8194        ;

; Routine at EEA2
;
; Used by the routines at #R$813B, #R$ED2A, #R$EEC1, #R$EFC7 and #R$F10E.
c$EEA2 LD DE,$6B00   ; #REGde=#R$6B00.
 $EEA5 LD HL,$5B00   ; #REGhl=#R$5B00.
 $EEA8 LD BC,$1000   ; #REGbc=#N$1000.
*$EEAB CALL $BA25    ; Call #R$BA25.
 $EEAE JP PE,$EEAB   ;
 $EEB1 LD BC,$0200   ; #REGbc=#N$0200.
 $EEB4 LD HL,$FE00   ; #REGhl=#R$FE00.
 $EEB7 LD DE,$FC00   ; #REGde=#R$FC00.
*$EEBA CALL $BA25    ; Call #R$BA25.
 $EEBD JP PE,$EEBA   ;
 $EEC0 RET           ; Return.

; Routine at EEC1
;
; Used by the routines at #R$81AE and #R$B3BE.
c$EEC1 CALL $EEA2    ;
 $EEC4 LD A,(IY+$0F) ;
 $EEC7 LD ($B951),A  ;
 $EECA LD B,$00      ;
 $EECC CALL $AA8C    ;
*$EECF LD A,(HL)     ;
 $EED0 CP $FF        ;
 $EED2 JR Z,$EEE3    ;
 $EED4 INC HL        ;
 $EED5 LD E,(HL)     ;
 $EED6 INC HL        ;
 $EED7 LD D,(HL)     ;
 $EED8 INC HL        ;
 $EED9 INC HL        ;
 $EEDA LD ($A838),DE ;
 $EEDE CALL $A83D    ;
 $EEE1 JR $EECF      ;
*$EEE3 LD E,(IY+$0F) ;
 $EEE6 SLA E         ;
 $EEE8 LD D,$00      ;
 $EEEA LD HL,$EEF3   ;
 $EEED ADD HL,DE     ;
 $EEEE LD E,(HL)     ;
 $EEEF INC HL        ;
 $EEF0 LD D,(HL)     ;
 $EEF1 EX DE,HL      ;
 $EEF2 JP (HL)       ;
 $EEF3 LD (HL),D     ;
 $EEF4 PUSH AF       ;
 $EEF5 OR $F2        ;
 $EEF7 LD C,E        ;
 $EEF8 JP P,$F2F6    ;
 $EEFB INC BC        ;
 $EEFC PUSH AF       ;
 $EEFD LD (HL),H     ;
 $EEFE OR $F6        ;
 $EF00 JP P,$F2F6    ;
 $EF03 INC A         ;
 $EF04 CALL P,$F2F6  ;
 $EF07 SBC A,L       ;
 $EF08 CALL P,$F5F1  ;
 $EF0B LD (HL),E     ;
 $EF0C RST $30       ;
 $EF0D OR $F2        ;
 $EF0F ADD HL,BC     ;
 $EF10 CALL P,$F309  ;
 $EF13 OUT ($F4),A   ;
 $EF15 INC DE        ;
 $EF16 DEFB $ED,$F6  ;
 $EF18 JP P,$F2F6    ;
 $EF1B OR $F2        ;
 $EF1D OR $F2        ;
 $EF1F CALL PE,$46F6 ;
 $EF22 RST $30       ;
 $EF23 OR $F2        ;
 $EF25 OR $F2        ;
 $EF27 OR $F2        ;
 $EF29 INC (HL)      ;
 $EF2A DI            ;
 $EF2B OR $F2        ;
 $EF2D OR $F2        ;
 $EF2F LD A,L        ;
 $EF30 DI            ;
 $EF31 XOR E         ;
 $EF32 DI            ;
 $EF33 LD C,A        ;
 $EF34 PUSH AF       ;
; This entry point is used by the routines at #R$ED2A, #R$F10E, #R$F5F1 and
; #R$F814.
*$EF35 LD E,(IX+$02) ;
 $EF38 LD D,(IX+$03) ;
 $EF3B PUSH BC       ;
 $EF3C PUSH AF       ;
 $EF3D XOR A         ;
 $EF3E LD ($F673),A  ;
 $EF41 LD ($F672),A  ;
 $EF44 LD A,(IX+$00) ;
 $EF47 ADD A,E       ;
 $EF48 LD L,A        ;
 $EF49 LD A,(BC)     ;
 $EF4A INC BC        ;
 $EF4B CP L          ;
 $EF4C JR NZ,$EF59   ;
*$EF4E LD A,$01      ;
 $EF50 LD ($F672),A  ;
 $EF53 LD A,E        ;
 $EF54 NEG           ;
 $EF56 LD E,A        ;
 $EF57 JR $EF5D      ;
*$EF59 LD A,(BC)     ;
 $EF5A CP L          ;
 $EF5B JR Z,$EF4E    ;
*$EF5D INC BC        ;
 $EF5E LD A,(IX+$01) ;
 $EF61 ADD A,D       ;
 $EF62 LD H,A        ;
 $EF63 LD A,(BC)     ;
 $EF64 INC BC        ;
 $EF65 CP H          ;
 $EF66 JR NZ,$EF73   ;
*$EF68 LD A,$01      ;
 $EF6A LD ($F673),A  ;
 $EF6D LD A,D        ;
 $EF6E NEG           ;
 $EF70 LD D,A        ;
 $EF71 JR $EF77      ;
*$EF73 LD A,(BC)     ;
 $EF74 CP H          ;
 $EF75 JR Z,$EF68    ;
*$EF77 LD ($A838),HL ;
 $EF7A LD (IX+$00),L ;
 $EF7D LD (IX+$01),H ;
 $EF80 LD (IX+$02),E ;
 $EF83 LD (IX+$03),D ;
 $EF86 POP AF        ;
 $EF87 POP BC        ;
; This entry point is used by the routine at #R$F814.
*$EF88 INC IX        ;
 $EF8A INC IX        ;
 $EF8C INC IX        ;
 $EF8E INC IX        ;
 $EF90 RET           ;

; Routine at EF91
;
; Used by the routines at #R$F10E and #R$F578.
c$EF91 PUSH AF       ; Stash #REGaf on the stack.
 $EF92 EXX           ; Switch to the shadow registers.
 $EF93 LD A,($F26F)  ; {#REGc=*#R$F26F.
 $EF96 LD C,A        ; }
 $EF97 LD A,($A839)  ; #REGa=*#R$A839.
 $EF9A AND %00000111 ; Keep only bits 0-2.
 $EF9C JR Z,$EFA2    ; If the result is zero, jump to #R$EFA2.
 $EF9E LD B,$03      ; #REGb=#N$03.
 $EFA0 JR $EFA4      ; Jump to #R$EFA4.
*$EFA2 LD B,$02      ; #REGb=#N$02.
*$EFA4 LD A,($A839)  ; #REGa=*#R$A839.
 $EFA7 AND %11111000 ; Keep only bits 3-7.
 $EFA9 LD H,$00      ; {Create an offset in #REGhl.
 $EFAB LD L,A        ; }
 $EFAC ADD HL,HL     ; {#REGhl*=#N$04.
 $EFAD ADD HL,HL     ; }
 $EFAE LD DE,$FB00   ; #REGde=#R$FB00.
 $EFB1 ADD HL,DE     ; #REGhl+=#REGde.
 $EFB2 LD DE,$001E   ; #REGde=#N($001E,$04,$04).
*$EFB5 LD (HL),C     ; Write #REGc to *#REGhl.
 $EFB6 INC HL        ; Increment #REGhl by one.
 $EFB7 LD (HL),C     ; Write #REGc to *#REGhl.
 $EFB8 INC HL        ; Increment #REGhl by one.
 $EFB9 LD A,($A838)  ; #REGa=*#R$A838.
 $EFBC AND %00000111 ; Keep only bits 0-2.
 $EFBE JR Z,$EFC1    ; If the result is zero, jump to #R$EFC1.
 $EFC0 LD (HL),C     ; Write #REGc to *#REGhl.
*$EFC1 ADD HL,DE     ; #REGhl+=#REGde.
 $EFC2 DJNZ $EFB5    ; Decrease counter by one and loop back to #R$EFB5 until
                     ; counter is zero.
 $EFC4 EXX           ; Switch back to the normal registers.
 $EFC5 POP AF        ; Restore #REGaf from the stack.
 $EFC6 RET           ; Return.

; Routine at EFC7
c$EFC7 LD A,(IY+$05)   ;
 $EFCA SUB $08         ;
 $EFCC CP $E0          ;
 $EFCE JR C,$EFD2      ;
 $EFD0 LD A,$E0        ;
*$EFD2 SRL A           ;
 $EFD4 SRL A           ;
 $EFD6 SRL A           ;
 $EFD8 LD E,A          ;
 $EFD9 LD D,$17        ;
 $EFDB LD HL,$7F16     ;
 $EFDE CALL $B82B      ;
*$EFE1 LD A,(IY+$0A)   ;
 $EFE4 ADD A,$04       ;
 $EFE6 CP $A0          ;
 $EFE8 JR C,$EFEC      ;
 $EFEA LD A,$A0        ;
*$EFEC LD (IY+$0A),A   ;
 $EFEF CALL $81AE      ;
 $EFF2 LD A,(IY+$0A)   ;
 $EFF5 CP $A0          ;
 $EFF7 JR NZ,$EFE1     ;
 $EFF9 LD (IY+$00),$00 ;
 $EFFD LD A,(IY-$3C)   ;
 $F000 OR A            ;
 $F001 CALL NZ,$81D4   ;
 $F004 LD A,$F0        ;
 $F006 LD ($F0BD),A    ;
 $F009 LD HL,$F0B7     ;
 $F00C CALL $B902      ;
 $F00F CALL $B969      ;
 $F012 LD (IY+$05),$DA ;
 $F016 LD (IY+$0A),$3C ;
*$F01A LD A,(IY+$0A)   ;
 $F01D CP $98          ;
 $F01F JR Z,$F026      ;
 $F021 ADD A,$04       ;
 $F023 LD (IY+$0A),A   ;
*$F026 CALL $EEA2      ;
 $F029 CALL $F057      ;
 $F02C CALL $F0C0      ;
 $F02F CALL $B0E6      ;
 $F032 CALL $B9FB      ;
 $F035 LD A,(IY+$05)   ;
 $F038 OR A            ;
 $F039 JR NZ,$F01A     ;
 $F03B LD (IY+$0F),$1F ;
 $F03F LD (IY+$05),$F0 ;
 $F043 JP $EE8D        ;
 $F046 NOP             ;
; This entry point is used by the routine at #R$F10E.
*$F047 EXX             ;
 $F048 XOR $01         ;
 $F04A LD ($F046),A    ;
 $F04D LD DE,$88F8     ;
 $F050 LD BC,$00C0     ;
 $F053 CALL $81E3      ;
 $F056 RET             ;
*$F057 LD A,($F046)    ;
 $F05A OR A            ;
 $F05B CALL NZ,$F047   ;
 $F05E LD HL,($F0BD)   ;
 $F061 LD H,$98        ;
 $F063 LD A,$30        ;
 $F065 LD ($A838),HL   ;
 $F068 CALL $A8A0      ;
 $F06B LD H,$A8        ;
 $F06D LD ($A838),HL   ;
 $F070 LD A,($F3A0)    ;
 $F073 XOR $02         ;
 $F075 LD ($F3A0),A    ;
 $F078 CALL $A8A0      ;
 $F07B LD A,$0C        ;
 $F07D LD ($F26E),A    ;
 $F080 CALL $E329      ;
 $F083 LD A,(IY+$0A)   ;
 $F086 CP $98          ;
 $F088 RET NZ          ;
 $F089 LD HL,$F0BD     ;
 $F08C LD A,(HL)       ;
 $F08D SUB (IY+$05)    ;
 $F090 SUB $01         ;
 $F092 CP $FE          ;
 $F094 JR NC,$F09A     ;
 $F096 LD A,(HL)       ;
 $F097 SUB $02         ;
 $F099 LD (HL),A       ;
*$F09A LD A,(HL)       ;
 $F09B SUB (IY+$05)    ;
 $F09E SUB $0C         ;
 $F0A0 CP $E0          ;
 $F0A2 JR C,$F0AE      ;
 $F0A4 INC (HL)        ;
 $F0A5 LD A,($F0E4)    ;
 $F0A8 INC A           ;
 $F0A9 CP $05          ;
 $F0AB RET Z           ;
 $F0AC JR $F0B3        ;
*$F0AE LD A,($F0E4)    ;
 $F0B1 DEC A           ;
 $F0B2 RET Z           ;
*$F0B3 LD ($F0E4),A    ;
 $F0B6 RET             ;
 $F0B7 ADD A,B         ;
 $F0B8 RLCA            ;
 $F0B9 LD (HL),L       ;
 $F0BA INC BC          ;
 $F0BB LD A,A          ;
 $F0BC NOP             ;
 $F0BD RET P           ;
 $F0BE INC B           ;
 $F0BF NOP             ;
*$F0C0 LD A,(IY+$0A)   ;
 $F0C3 CP $98          ;
 $F0C5 RET NZ          ;
 $F0C6 CALL $B03C      ;
 $F0C9 LD C,A          ;
 $F0CA CALL $B00B      ;
 $F0CD LD B,A          ;
 $F0CE LD A,($F0BF)    ;
 $F0D1 OR A            ;
 $F0D2 JR NZ,$F0DB     ;
 $F0D4 LD A,B          ;
 $F0D5 OR A            ;
 $F0D6 JR NZ,$F0FB     ;
 $F0D8 LD A,C          ;
 $F0D9 JR $F0E0        ;
*$F0DB LD A,C          ;
 $F0DC OR A            ;
 $F0DD JR NZ,$F0FB     ;
 $F0DF LD A,B          ;
*$F0E0 OR A            ;
 $F0E1 JR Z,$F0FB      ;
 $F0E3 LD A,$05        ;
 $F0E5 LD ($F0BE),A    ;
; This entry point is used by the routine at #R$F10E.
*$F0E8 LD A,($F0BF)    ;
 $F0EB XOR $01         ;
 $F0ED LD ($F0BF),A    ;
*$F0F0 LD (IY+$3C),$FF ;
 $F0F4 LD (IY+$41),$FF ;
 $F0F8 JP $B288        ;
*$F0FB LD HL,$F0BE     ;
 $F0FE LD A,(HL)       ;
 $F0FF OR A            ;
 $F100 RET Z           ;
 $F101 DEC (HL)        ;
 $F102 JR $F0F0        ;

; Game status buffer entry at F104
g$F104 DEFB $00,$A8,$02,$FE,$05,$02,$00,$F0
 $F10C DEFB $A0,$A8

; Routine at F10E
;
; Used by the routine at #R$81AE.
c$F10E LD A,$04        ;
 $F110 LD ($F26E),A    ;
 $F113 LD IX,$F104     ;
 $F117 LD BC,$F10A     ;
 $F11A CALL $EF35      ;
 $F11D LD A,(IX-$04)   ;
 $F120 OR A            ;
 $F121 JR NZ,$F13F     ;
 $F123 DEC (IX+$01)    ;
 $F126 JR NZ,$F13F     ;
 $F128 LD (IX+$01),$02 ;
 $F12C LD (IX-$04),$00 ;
 $F130 LD (IX-$03),$A8 ;
 $F134 LD (IX-$01),$FE ;
 $F138 CALL $AF01      ;
 $F13B LD (IX+$00),A   ;
 $F13E RET             ;
*$F13F LD A,(IX+$00)   ;
 $F142 CP (IY+$0F)     ;
 $F145 RET NZ          ;
 $F146 LD A,(IX-$03)   ;
 $F149 CP $A8          ;
 $F14B LD A,$48        ;
 $F14D JR NZ,$F151     ;
 $F14F LD A,$4A        ;
*$F151 CALL $A8A0      ;
 $F154 CALL $E329      ;
 $F157 RET             ;
 $F158 NOP             ;
 $F159 NOP             ;
 $F15A NOP             ;
 $F15B NOP             ;
 $F15C NOP             ;
 $F15D ADD A,B         ;
 $F15E RLCA            ;
 $F15F ADD A,(HL)      ;
 $F160 JR NZ,$F0E8     ;
 $F162 LD (HL),B       ;
 $F163 ADD A,(HL)      ;
 $F164 RET Z           ;
 $F165 ADC A,C         ;
 $F166 RLCA            ;
 $F167 ADC A,C         ;
 $F168 CPL             ;
 $F169 ADC A,C         ;
 $F16A LD D,A          ;
 $F16B ADC A,C         ;
 $F16C LD A,A          ;
 $F16D ADC A,D         ;
 $F16E AND A           ;
 $F16F ADC A,D         ;
 $F170 RST $00         ;
 $F171 ADC A,D         ;
 $F172 RST $20         ;
 $F173 LD (HL),H       ;
 $F174 LD B,(HL)       ;
 $F175 LD A,A          ;
 $F176 NOP             ;
 $F177 LD A,(IY+$05)   ;
 $F17A LD HL,$06EA     ;
 $F17D CP $80          ;
 $F17F LD A,$FE        ;
 $F181 JR C,$F188      ;
 $F183 LD HL,$EA06     ;
 $F186 LD A,$02        ;
*$F188 LD ($F158),HL   ;
 $F18B LD ($F15A),A    ;
 $F18E LD HL,$0000     ;
 $F191 LD ($F15B),HL   ;
 $F194 LD (IY+$0A),$98 ;
 $F198 CALL $B902      ;
 $F19B LD HL,$F15D     ;
 $F19E CALL $B969      ;
 $F1A1 JR $F1D2        ;
*$F1A3 CALL $EEA2      ;
 $F1A6 CALL $F202      ;
 $F1A9 LD A,$04        ;
 $F1AB LD ($F26E),A    ;
 $F1AE LD A,($F15A)    ;
 $F1B1 CP $02          ;
 $F1B3 LD A,$82        ;
 $F1B5 JR Z,$F1B9      ;
 $F1B7 LD A,$84        ;
*$F1B9 CALL $ED8A      ;
 $F1BC CALL $B09F      ;
 $F1BF CALL $B0E6      ;
 $F1C2 CALL $B9FB      ;
 $F1C5 LD BC,($F158)   ;
 $F1C9 LD HL,($F15B)   ;
 $F1CC LD A,(IY+$05)   ;
 $F1CF CP B            ;
 $F1D0 JR NZ,$F1E6     ;
*$F1D2 LD BC,($F158)   ;
 $F1D6 LD HL,($F15B)   ;
 $F1D9 LD A,($F15A)    ;
 $F1DC ADD A,C         ;
 $F1DD LD (IY+$05),A   ;
 $F1E0 INC HL          ;
 $F1E1 LD ($F15B),HL   ;
 $F1E4 JR $F1A3        ;
*$F1E6 CP C            ;
 $F1E7 JR NZ,$F1A3     ;
 $F1E9 DEC HL          ;
 $F1EA LD ($F15B),HL   ;
 $F1ED LD A,H          ;
 $F1EE OR L            ;
 $F1EF JR Z,$F1FC      ;
 $F1F1 LD A,($F15A)    ;
 $F1F4 LD C,A          ;
 $F1F5 LD A,B          ;
 $F1F6 SUB C           ;
 $F1F7 LD (IY+$05),A   ;
 $F1FA JR $F1A3        ;
*$F1FC LD (IY+$05),B   ;
 $F1FF JP $EE8D        ;
*$F202 LD HL,($F15B)   ;
 $F205 LD BC,$DFDC     ;
 $F208 LD ($B7E9),BC   ;
 $F20C LD DE,$1208     ;
 $F20F LD A,$2F        ;
 $F211 LD BC,$2710     ;
 $F214 CALL $F233      ;
 $F217 LD BC,$03E8     ;
 $F21A CALL $F233      ;
 $F21D LD BC,$0064     ;
 $F220 CALL $F233      ;
 $F223 LD BC,$000A     ;
 $F226 CALL $F233      ;
 $F229 LD BC,$0001     ;
 $F22C CALL $F233      ;
 $F22F LD A,$4D        ;
 $F231 JR $F23A        ;
*$F233 INC A           ;
 $F234 AND A           ;
 $F235 SBC HL,BC       ;
 $F237 JR NC,$F233     ;
 $F239 ADD HL,BC       ;
*$F23A LD C,$70        ;
 $F23C CALL $B7F9      ;
 $F23F INC E           ;
 $F240 LD A,$2F        ;
 $F242 RET             ;
 $F243 JR NZ,$F289     ;
 $F245 INC B           ;
 $F246 LD (BC),A       ;
 $F247 SBC A,B         ;
 $F248 AND B           ;
 $F249 CALL M,$3E02    ;
 $F24C INC B           ;
 $F24D LD ($F26E),A    ;
 $F250 LD IX,$F243     ;
 $F254 LD BC,$F2F7     ;
 $F257 CALL $EF35      ;
 $F25A LD A,$7A        ;
 $F25C CALL $A8A0      ;
 $F25F CALL $E329      ;
 $F262 LD A,$7A        ;
 $F264 CALL $EF35      ;
 $F267 CALL $A8A0      ;
 $F26A CALL $E329      ;
 $F26D RET             ;
 $F26E NOP             ;
 $F26F LD B,E          ;
 $F270 LD E,D          ;
 $F271 XOR B           ;
 $F272 LD BC,$0000     ;
 $F275 INC BC          ;
 $F276 LD B,B          ;
; This entry point is used by the routine at #R$81AE.
*$F277 LD A,$02        ;
 $F279 LD ($F26E),A    ;
 $F27C LD IX,$F270     ;
 $F280 LD BC,$F2F7     ;
 $F283 CALL $EF35      ;
 $F286 LD A,(IX+$00)   ;
*$F289 CALL $AC69      ;
 $F28C INC HL          ;
 $F28D LD A,(HL)       ;
 $F28E CALL $AC5F      ;
 $F291 LD A,(HL)       ;
 $F292 CP (IX-$04)     ;
 $F295 JR NZ,$F2C3     ;
 $F297 DEC (IX+$01)    ;
 $F29A JR NZ,$F2C3     ;
 $F29C LD A,R          ;
 $F29E AND $03         ;
 $F2A0 ADD A,$03       ;
 $F2A2 LD (IX+$01),A   ;
*$F2A5 CALL $AF01      ;
 $F2A8 CP $1F          ;
 $F2AA JR Z,$F2A5      ;
 $F2AC LD (IX+$00),A   ;
 $F2AF CALL $AC69      ;
 $F2B2 INC HL          ;
 $F2B3 LD A,(HL)       ;
 $F2B4 CALL $AC5F      ;
 $F2B7 LD A,(HL)       ;
 $F2B8 ADD A,$02       ;
 $F2BA CP $EE          ;
 $F2BC JR C,$F2C0      ;
 $F2BE LD A,$EE        ;
*$F2C0 LD (IX-$04),A   ;
*$F2C3 LD A,(IX+$00)   ;
 $F2C6 CP (IY+$0F)     ;
 $F2C9 RET NZ          ;
 $F2CA LD A,(IX-$02)   ;
 $F2CD LD BC,$4440     ;
 $F2D0 CP $01          ;
 $F2D2 JR Z,$F2D7      ;
 $F2D4 LD BC,$4844     ;
*$F2D7 LD A,(IX+$02)   ;
 $F2DA ADD A,$02       ;
 $F2DC CP B            ;
 $F2DD JR C,$F2E2      ;
*$F2DF LD A,C          ;
 $F2E0 JR $F2E5        ;
*$F2E2 CP C            ;
 $F2E3 JR C,$F2DF      ;
*$F2E5 LD (IX+$02),A   ;
 $F2E8 CALL $A8A0      ;
 $F2EB LD A,$46        ;
 $F2ED LD ($F26F),A    ;
 $F2F0 CALL $EF91      ;
 $F2F3 CALL $E329      ;
; This entry point is used by the routine at #R$EEC1.
*$F2F6 RET             ;
 $F2F7 NOP             ;
 $F2F8 RET P           ;
 $F2F9 LD B,B          ;
 $F2FA XOR B           ;
 $F2FB JR NZ,$F2D5     ;
 $F2FD LD ($0290),HL   ;
 $F300 NOP             ;
 $F301 SUB $90         ;
 $F303 CP $00          ;
 $F305 LD A,B          ;
 $F306 SUB B           ;
 $F307 INC B           ;
 $F308 NOP             ;
; This entry point is used by the routine at #R$EEC1.
*$F309 LD A,$06        ;
 $F30B LD ($F26E),A    ;
 $F30E LD IX,$F2FD     ;
 $F312 LD B,$03        ;
*$F314 PUSH BC         ;
 $F315 LD A,$29        ;
 $F317 LD BC,$F2FB     ;
 $F31A CALL $EF35      ;
 $F31D CALL $A8A0      ;
 $F320 CALL $E329      ;
 $F323 POP BC          ;
 $F324 DJNZ $F314      ;
 $F326 RET             ;
 $F327 LD ($FE64),A    ;
 $F32A NOP             ;
 $F32B LD H,B          ;
 $F32C LD ($006E),A    ;
 $F32F LD (BC),A       ;
 $F330 EX AF,AF'       ;
 $F331 LD H,B          ;
 $F332 NOP             ;
 $F333 XOR B           ;
 $F334 LD A,$08        ;
 $F336 LD ($F26E),A    ;
 $F339 LD IX,$F327     ;
 $F33D LD BC,$F330     ;
 $F340 CALL $EF35      ;
 $F343 LD A,(IX+$00)   ;
 $F346 INC A           ;
 $F347 CP $64          ;
 $F349 JR NZ,$F34D     ;
 $F34B LD A,$60        ;
*$F34D LD (IX+$00),A   ;
 $F350 CALL $A83D      ;
 $F353 INC IX          ;
 $F355 CALL $EF35      ;
 $F358 LD A,$64        ;
 $F35A CALL $A83D      ;
 $F35D CALL $E329      ;
 $F360 LD A,(IX-$01)   ;
 $F363 CP $FE          ;
 $F365 RET NZ          ;
 $F366 LD (IX-$03),$6E ;
 $F36A LD (IX-$01),$02 ;
 $F36E LD A,(IX-$09)   ;
 $F371 LD (IX-$04),A   ;
 $F374 RET             ;
 $F375 LD A,B          ;
 $F376 XOR B           ;
 $F377 LD (BC),A       ;
 $F378 NOP             ;
 $F379 LD A,B          ;
 $F37A XOR B           ;
 $F37B CP $00          ;
 $F37D LD A,$04        ;
 $F37F LD ($F26E),A    ;
 $F382 LD IX,$F375     ;
 $F386 LD BC,$F2F7     ;
 $F389 CALL $EF35      ;
 $F38C LD A,$78        ;
 $F38E CALL $A8A0      ;
 $F391 CALL $E329      ;
 $F394 CALL $EF35      ;
 $F397 LD A,$78        ;
 $F399 CALL $A8A0      ;
 $F39C CALL $E329      ;
 $F39F RET             ;
 $F3A0 INC L           ;
 $F3A1 NOP             ;
 $F3A2 LD D,B          ;
 $F3A3 LD A,(BC)       ;
 $F3A4 SBC A,B         ;
 $F3A5 LD (BC),A       ;
 $F3A6 NOP             ;
 $F3A7 LD A,(BC)       ;
 $F3A8 XOR B           ;
 $F3A9 LD (BC),A       ;
 $F3AA NOP             ;
 $F3AB LD A,$40        ;
 $F3AD LD ($F26E),A    ;
 $F3B0 LD IX,$F3A3     ;
 $F3B4 LD A,(IX+$02)   ;
 $F3B7 CP $02          ;
 $F3B9 LD A,($F046)    ;
 $F3BC JR Z,$F3C4      ;
 $F3BE OR A            ;
 $F3BF CALL NZ,$F047   ;
 $F3C2 JR $F3C8        ;
*$F3C4 OR A            ;
 $F3C5 CALL Z,$F047    ;
*$F3C8 LD A,$30        ;
 $F3CA LD BC,$F3A1     ;
 $F3CD CALL $EF35      ;
 $F3D0 CALL $A8A0      ;
 $F3D3 LD A,($F3A0)    ;
 $F3D6 XOR $02         ;
 $F3D8 LD ($F3A0),A    ;
 $F3DB CALL $EF35      ;
 $F3DE CALL $A8A0      ;
 $F3E1 LD A,($BD78)    ;
 $F3E4 CP $17          ;
 $F3E6 RET Z           ;
 $F3E7 LD A,$17        ;
 $F3E9 CP (IY+$50)     ;
 $F3EC RET Z           ;
 $F3ED CP (IY+$55)     ;
 $F3F0 RET Z           ;
 $F3F1 LD A,($A839)    ;
 $F3F4 SUB $10         ;
 $F3F6 LD ($A839),A    ;
 $F3F9 CALL $E329      ;
 $F3FC RET             ;
 $F3FD NOP             ;
 $F3FE RET P           ;
 $F3FF LD A,B          ;
 $F400 XOR B           ;
 $F401 NOP             ;
 $F402 ADD A,B         ;
 $F403 LD (BC),A       ;
 $F404 CALL M,$8C64    ;
 $F407 LD (BC),A       ;
 $F408 INC B           ;
 $F409 LD A,$06        ;
 $F40B LD ($F26E),A    ;
 $F40E LD IX,$F401     ;
 $F412 LD B,$02        ;
*$F414 PUSH BC         ;
 $F415 LD BC,$F3FD     ;
 $F418 CALL $EF35      ;
 $F41B LD A,E          ;
 $F41C CP $FE          ;
 $F41E JR NZ,$F430     ;
 $F420 LD (IX-$01),$FC ;
 $F424 LD (IX-$02),$02 ;
 $F428 LD (IX-$03),$80 ;
 $F42C LD (IX-$04),$00 ;
*$F430 LD A,$32        ;
 $F432 CALL $A8A0      ;
 $F435 CALL $E329      ;
 $F438 POP BC          ;
 $F439 DJNZ $F414      ;
 $F43B RET             ;
 $F43C LD A,$09        ;
 $F43E CALL $EC1D      ;
 $F441 JR Z,$F479      ;
 $F443 LD A,$06        ;
 $F445 CALL $EC1D      ;
 $F448 JR Z,$F479      ;
 $F44A LD A,($BD01)    ;
 $F44D CP $04          ;
 $F44F JR NZ,$F479     ;
 $F451 LD A,(IY+$05)   ;
 $F454 SUB $42         ;
 $F456 CP $FC          ;
 $F458 JR C,$F479      ;
 $F45A LD A,($AF88)    ;
 $F45D SUB (IY+$0A)    ;
 $F460 SUB $22         ;
 $F462 CP $FC          ;
 $F464 JR C,$F479      ;
 $F466 LD A,($AF88)    ;
 $F469 SUB $02         ;
 $F46B CP $78          ;
 $F46D JR NC,$F471     ;
 $F46F LD A,$78        ;
*$F471 LD ($AF88),A    ;
 $F474 SUB $20         ;
 $F476 LD (IY+$0A),A   ;
*$F479 LD A,($AF88)    ;
 $F47C LD B,$10        ;
 $F47E CP $B8          ;
 $F480 JR Z,$F484      ;
 $F482 LD B,$0E        ;
*$F484 SUB B           ;
 $F485 LD H,A          ;
 $F486 LD L,$40        ;
 $F488 LD ($A838),HL   ;
 $F48B LD A,$2B        ;
 $F48D CALL $A83D      ;
 $F490 RET             ;
 $F491 LD B,B          ;
 $F492 LD H,H          ;
 $F493 NOP             ;
 $F494 LD (BC),A       ;
 $F495 LD H,H          ;
 $F496 LD B,B          ;
 $F497 NOP             ;
 $F498 LD (BC),A       ;
 $F499 CALL C,$0078    ;
 $F49C LD (BC),A       ;
 $F49D LD A,$06        ;
 $F49F LD ($F26E),A    ;
 $F4A2 LD IX,$F491     ;
 $F4A6 LD B,$03        ;
*$F4A8 PUSH BC         ;
 $F4A9 LD BC,$F2F7     ;
 $F4AC CALL $EF35      ;
 $F4AF LD A,D          ;
 $F4B0 CP $FE          ;
 $F4B2 JR NZ,$F4C6     ;
 $F4B4 LD (IX-$01),$02 ;
 $F4B8 LD (IX-$03),$40 ;
 $F4BC LD A,R          ;
 $F4BE AND $3F         ;
 $F4C0 ADD A,A         ;
 $F4C1 ADD A,$38       ;
 $F4C3 LD (IX-$04),A   ;
*$F4C6 LD A,$34        ;
 $F4C8 CALL $A8A0      ;
 $F4CB CALL $E329      ;
 $F4CE POP BC          ;
 $F4CF DJNZ $F4A8      ;
 $F4D1 RET             ;
 $F4D2 LD C,H          ;
 $F4D3 LD A,($BD7D)    ;
 $F4D6 CP $1D          ;
 $F4D8 JR NZ,$F4E0     ;
 $F4DA LD A,$05        ;
 $F4DC CALL $EC1D      ;
 $F4DF RET NZ          ;
*$F4E0 LD HL,$A880     ;
 $F4E3 LD ($A838),HL   ;
 $F4E6 LD A,$04        ;
 $F4E8 LD ($F26E),A    ;
 $F4EB LD A,($F4D2)    ;
 $F4EE INC A           ;
 $F4EF CP $50          ;
 $F4F1 JR NZ,$F4F5     ;
 $F4F3 LD A,$4C        ;
*$F4F5 LD ($F4D2),A    ;
 $F4F8 CALL $A83D      ;
 $F4FB CALL $E329      ;
 $F4FE RET             ;
 $F4FF RET P           ;
 $F500 XOR B           ;
 $F501 CP $00          ;
 $F503 LD A,$FF        ;
 $F505 LD ($AF80),A    ;
 $F508 LD A,$0C        ;
 $F50A CALL $EC1D      ;
 $F50D JR Z,$F543      ;
 $F50F LD A,$06        ;
 $F511 LD ($F26E),A    ;
 $F514 LD IX,$F4FF     ;
 $F518 LD BC,$F2F7     ;
 $F51B CALL $EF35      ;
 $F51E LD A,$36        ;
 $F520 CALL $A8A0      ;
 $F523 CALL $E329      ;
 $F526 LD A,(IY+$0A)   ;
 $F529 CP $88          ;
 $F52B RET NZ          ;
 $F52C LD A,(IY+$05)   ;
 $F52F SUB (IX-$04)    ;
 $F532 SUB $04         ;
 $F534 CP $F8          ;
 $F536 RET C           ;
 $F537 LD A,(IX-$04)   ;
 $F53A LD (IY+$05),A   ;
 $F53D LD A,$A8        ;
 $F53F LD ($AF80),A    ;
 $F542 RET             ;
*$F543 LD HL,$A8F0     ;
 $F546 LD ($A838),HL   ;
 $F549 LD A,$36        ;
 $F54B CALL $A8A0      ;
 $F54E RET             ;
 $F54F LD A,($BD7D)    ;
 $F552 CP $1D          ;
 $F554 JR NZ,$F55C     ;
 $F556 LD A,$05        ;
 $F558 CALL $EC1D      ;
 $F55B RET NZ          ;
*$F55C LD A,$14        ;
 $F55E CP (IY+$50)     ;
 $F561 RET Z           ;
 $F562 CP (IY+$55)     ;
 $F565 RET Z           ;
 $F566 LD A,$04        ;
 $F568 LD ($F26E),A    ;
 $F56B CALL $E33F      ;
 $F56E JP $ED13        ;
 $F571 LD D,B          ;
 $F572 LD A,$08        ;
 $F574 CALL $EC1D      ;
 $F577 RET Z           ;

; Routine at F578
;
; Used by the routine at #R$813B.
c$F578 LD A,$45      ; {Write #N$45 to #R$F26F.
 $F57A LD ($F26F),A  ; }
 $F57D LD HL,$9878   ; {Write #R$9878 to #R$A838.
 $F580 LD ($A838),HL ; }
 $F583 LD A,($F571)  ; #REGa=*#R$F571.
 $F586 CALL $A83D    ; Call #R$A83D.
 $F589 CALL $EF91    ; Call #R$EF91.
 $F58C LD HL,$8868   ; {Write #R$8868 to #R$A838.
 $F58F LD ($A838),HL ; }
 $F592 CALL $A83D    ; Call #R$A83D.
 $F595 CALL $EF91    ; Call #R$EF91.
 $F598 LD HL,$9818   ; {Write #R$9818 to #R$A838.
 $F59B LD ($A838),HL ; }
 $F59E ADD A,$03     ; #REGa+=#N$03.
 $F5A0 CALL $A83D    ; Call #R$A83D.
 $F5A3 CALL $EF91    ; Call #R$EF91.
 $F5A6 LD HL,$8828   ; {Write #R$8828 to #R$A838.
 $F5A9 LD ($A838),HL ; }
 $F5AC CALL $A83D    ; Call #R$A83D.
 $F5AF CALL $EF91    ; Call #R$EF91.
 $F5B2 SUB $02       ; #REGa-=#N$02.
 $F5B4 CP $53        ; {If #REGa is not #N$53, jump to #R$F5BA.
 $F5B6 JR NZ,$F5BA   ; }
 $F5B8 LD A,$50      ; {Write #N$50 to #R$F571.
*$F5BA LD ($F571),A  ; }
 $F5BD RET           ; Return.

; Data block at F5BE
b$F5BE DEFB $28,$46,$02,$02
 $F5C2 DEFB $3C,$78,$FE,$02
 $F5C6 DEFB $20,$64,$02,$FE
 $F5CA DEFB $10,$E0,$40,$A8,$10,$40,$40,$A8
 $F5D2 DEFB $38,$01,$01,$01,$01,$00,$01,$00
 $F5DA DEFB $01,$00,$01,$00,$01,$00,$00,$00
 $F5E2 DEFB $00,$00,$02,$00,$02,$00,$02,$00
 $F5EA DEFB $02,$00,$02,$02,$02,$02,$FF

; Routine at F5F1
;
; Used by the routine at #R$EEC1.
c$F5F1 LD HL,$5DE7                          ; #REGhl=#N$5DE7.
 $F5F4 LD DE,$0020                          ; #REGde=#N($0020,$04,$04).
 $F5F7 LD BC,$F5D3                          ; #REGbc=#N$F5D3.
*$F5FA LD (HL),$00                          ; Write #N$00 to *#REGhl.
 $F5FC ADD HL,DE                            ; #REGhl+=#REGde.
 $F5FD LD (HL),$FF                          ; Write #N$FF to *#REGhl.
 $F5FF ADD HL,DE                            ; #REGhl+=#REGde.
 $F600 LD (HL),$00                          ; Write #N$00 to *#REGhl.
 $F602 AND A                                ;
 $F603 SBC HL,DE                            ;
 $F605 SBC HL,DE                            ;
 $F607 LD A,(BC)                            ;
 $F608 INC BC                               ;
 $F609 CP $FF                               ;
 $F60B JR Z,$F61D                           ;
 $F60D OR A                                 ;
 $F60E JR Z,$F61A                           ;
 $F610 CP $01                               ;
 $F612 JR NZ,$F617                          ;
 $F614 ADD HL,DE                            ;  #REGhl+=#REGde.
 $F615 JR $F61A                             ; Jump to #R$F61A.
*$F617 AND A                                ;
 $F618 SBC HL,DE                            ; #REGhl-=#REGde.
*$F61A INC HL                               ; Increment #REGhl by one.
 $F61B JR $F5FA                             ; Jump to #R$F5FA.
*$F61D LD A,$06                             ; {Write #N$06 to #R$F26E.
 $F61F LD ($F26E),A                         ; }
 $F622 LD IX,$F5BE                          ; #REGix=#R$F5BE.
 $F626 LD B,$03                             ;
*$F628 PUSH BC                              ;
 $F629 LD A,$0D                             ;
 $F62B CALL $EC1D                           ;
 $F62E LD BC,$F5CA                          ;
 $F631 JR NZ,$F636                          ;
 $F633 LD BC,$F5CE                          ;
*$F636 CALL $EF35                           ;
 $F639 LD A,($F5D2)                         ;
 $F63C XOR $02                              ;
 $F63E LD ($F5D2),A                         ;
 $F641 CALL $A8A0                           ;
 $F644 CALL $E329                           ;
 $F647 POP BC                               ;
 $F648 DJNZ $F628                           ;
 $F64A RET                                  ;
 $F64B LD BC,$FF01                          ;
 $F64E LD BC,$FFFF                          ;
 $F651 LD BC,$28FF                          ;
 $F654 LD B,(HL)                            ;
 $F655 LD BC,$0501                          ;
 $F658 INC B                                ;
 $F659 RET Z                                ;
 $F65A LD A,B                               ;
 $F65B RST $38                              ;
 $F65C LD BC,$0223                          ;
 $F65F LD H,$64                             ;
 $F661 LD BC,$26FF                          ;
 $F664 NOP                                  ;
 $F665 RET Z                                ;
 $F666 LD A,B                               ;
 $F667 RST $38                              ;
 $F668 LD BC,$0223                          ;
 $F66B LD H,$64                             ;
 $F66D LD BC,$26FF                          ;
 $F670 NOP                                  ;
 $F671 INC A                                ;
 $F672 NOP                                  ;
 $F673 NOP                                  ;
 $F674 LD A,$04                             ;
 $F676 LD ($F26E),A                         ;
 $F679 LD B,$05                             ;
 $F67B LD IX,$F653                          ;
*$F67F PUSH BC                              ;
 $F680 LD BC,$F5CA                          ;
 $F683 CALL $EF35                           ;
 $F686 DEC (IX+$00)                         ;
 $F689 JR NZ,$F6BB                          ;
 $F68B LD A,($F673)                         ;
 $F68E LD B,A                               ;
 $F68F LD A,($F672)                         ;
 $F692 OR B                                 ;
 $F693 JR NZ,$F6BB                          ;
 $F695 LD A,R                               ;
 $F697 AND $3F                              ;
 $F699 ADD A,$14                            ;
 $F69B LD (IX+$00),A                        ;
 $F69E LD A,(IX+$01)                        ;
 $F6A1 ADD A,$02                            ;
 $F6A3 CP $08                               ;
 $F6A5 JR NZ,$F6A8                          ;
 $F6A7 XOR A                                ;
*$F6A8 LD (IX+$01),A                        ;
 $F6AB LD E,A                               ;
 $F6AC LD D,$00                             ;
 $F6AE LD HL,$F64B                          ;
 $F6B1 ADD HL,DE                            ;
 $F6B2 LD A,(HL)                            ;
 $F6B3 LD (IX-$02),A                        ;
 $F6B6 INC HL                               ;
 $F6B7 LD A,(HL)                            ;
 $F6B8 LD (IX-$01),A                        ;
*$F6BB LD A,($F671)                         ;
 $F6BE XOR $02                              ;
 $F6C0 LD ($F671),A                         ;
 $F6C3 CALL $A8A0                           ;
 $F6C6 CALL $E329                           ;
 $F6C9 INC IX                               ;
 $F6CB INC IX                               ;
 $F6CD POP BC                               ;
 $F6CE DJNZ $F67F                           ;
 $F6D0 RET                                  ;
 $F6D1 LD B,B                               ;
 $F6D2 INC DE                               ;
 $F6D3 LD H,B                               ;
 $F6D4 LD E,$80                             ;
 $F6D6 LD A,(DE)                            ;
 $F6D7 AND B                                ;
 $F6D8 LD BC,$05C0                          ;
 $F6DB NOP                                  ;
 $F6DC LD B,B                               ;
 $F6DD LD H,H                               ;
 $F6DE LD (BC),A                            ;
 $F6DF INC B                                ;
 $F6E0 OR H                                 ;
 $F6E1 SBC A,B                              ;
 $F6E2 LD (BC),A                            ;
 $F6E3 CALL M,$4420                         ;
 $F6E6 LD (BC),A                            ;
 $F6E7 INC B                                ;
 $F6E8 RET Z                                ;
 $F6E9 LD A,B                               ;
 $F6EA LD (BC),A                            ;
 $F6EB CALL M,$C53A                         ;
 $F6EE DEFB $ED,$FE                         ;
 $F6F0 LD B,$20                             ;
 $F6F2 INC C                                ;
 $F6F3 LD A,($F6DB)                         ;
 $F6F6 XOR $01                              ;
 $F6F8 LD ($F6DB),A                         ;
 $F6FB JR Z,$F716                           ;
 $F6FD LD A,$06                             ;
 $F6FF DEC A                                ;
 $F700 JR Z,$F716                           ;
 $F702 LD B,A                               ;
 $F703 LD HL,$F6D1                          ;
 $F706 LD DE,$4800                          ;
*$F709 LD E,(HL)                            ;
 $F70A INC HL                               ;
 $F70B LD ($A838),DE                        ;
 $F70F LD A,(HL)                            ;
 $F710 INC HL                               ;
 $F711 CALL $A83D                           ;
 $F714 DJNZ $F709                           ;
*$F716 LD A,($EDC5)                         ;
 $F719 CP $06                               ;
 $F71B RET Z                                ;
 $F71C LD A,$06                             ;
 $F71E LD ($F26E),A                         ;
 $F721 LD IX,$F6DC                          ;
 $F725 LD B,$04                             ;
*$F727 PUSH BC                              ;
 $F728 LD BC,$F2F7                          ;
 $F72B CALL $EF35                           ;
 $F72E LD A,$76                             ;
 $F730 CALL $A8A0                           ;
 $F733 CALL $E329                           ;
 $F736 POP BC                               ;
 $F737 DJNZ $F727                           ;
 $F739 RET                                  ;
 $F73A INC (HL)                             ;
 $F73B LD B,B                               ;
 $F73C NOP                                  ;
 $F73D LD (BC),A                            ;
 $F73E LD (HL),H                            ;
 $F73F LD L,H                               ;
 $F740 NOP                                  ;
 $F741 LD (BC),A                            ;
 $F742 OR H                                 ;
 $F743 AND B                                ;
 $F744 NOP                                  ;
 $F745 LD (BC),A                            ;
 $F746 LD A,$08                             ;
 $F748 LD ($F26E),A                         ;
 $F74B LD IX,$F73A                          ;
 $F74F LD B,$03                             ;
*$F751 PUSH BC                              ;
 $F752 LD BC,$F2F7                          ;
 $F755 CALL $EF35                           ;
 $F758 LD A,(IX-$01)                        ;
 $F75B CP $02                               ;
 $F75D JR Z,$F767                           ;
 $F75F LD (IX-$01),$02                      ;
 $F763 LD (IX-$03),$40                      ;
*$F767 LD A,$56                             ;
 $F769 CALL $A83D                           ;
 $F76C CALL $E329                           ;
 $F76F POP BC                               ;
 $F770 DJNZ $F751                           ;
 $F772 RET                                  ;
 $F773 LD A,$02                             ;
 $F775 LD ($F26E),A                         ;
 $F778 LD A,(IY+$0A)                        ;
 $F77B CP $98                               ;
 $F77D JR NZ,$F78D                          ;
 $F77F LD A,(IY+$05)                        ;
 $F782 CP $28                               ;
 $F784 JR C,$F78D                           ;
 $F786 CP $E6                               ;
 $F788 JR NC,$F78D                          ;
 $F78A CALL $E33F                           ;
*$F78D LD B,$05                             ;
 $F78F LD A,($F7DE)                         ;
 $F792 INC A                                ;
 $F793 CP $5B                               ;
 $F795 JR NZ,$F799                          ;
 $F797 LD A,$57                             ;
*$F799 LD ($F7DE),A                         ;
 $F79C LD HL,$F7DF                          ;
 $F79F LD D,$98                             ;
*$F7A1 LD E,(HL)                            ;
 $F7A2 LD ($A838),DE                        ;
 $F7A6 INC HL                               ;
 $F7A7 DEC (HL)                             ;
 $F7A8 JR NZ,$F7AC                          ;
 $F7AA LD (HL),$28                          ;
*$F7AC LD A,(HL)                            ;
 $F7AD INC HL                               ;
 $F7AE CP $09                               ;
 $F7B0 JR NC,$F7D6                          ;
 $F7B2 LD A,(IY+$0A)                        ;
 $F7B5 CP $80                               ;
 $F7B7 JR NZ,$F7D1                          ;
 $F7B9 LD A,($A838)                         ;
 $F7BC SUB (IY+$05)                         ;
 $F7BF SUB $10                              ;
 $F7C1 CP $E0                               ;
 $F7C3 JR C,$F7D1                           ;
 $F7C5 LD A,(IY+$0A)                        ;
 $F7C8 ADD A,$04                            ;
 $F7CA LD (IY+$0A),A                        ;
 $F7CD LD (IY+$37),$01                      ;
*$F7D1 LD A,($F7DE)                         ;
 $F7D4 JR $F7D8                             ;
*$F7D6 LD A,$57                             ;
*$F7D8 CALL $A83D                           ;
 $F7DB DJNZ $F7A1                           ;
 $F7DD RET                                  ;
 $F7DE DEFB $5A,$38,$29,$60,$21,$88,$19,$B0 ;
 $F7E6 DEFB $11,$D8,$09,$0E,$90,$A0,$5B,$0A ;
 $F7EE DEFB $08,$A8,$5C,$0F,$F0,$A8,$5E,$19 ;
 $F7F6 DEFB $90,$A0,$5D,$17,$20,$90,$5F,$FF ;
 $F7FE DEFB $0F,$F0,$A8,$5E,$19,$90,$A0,$5D ;
 $F806 DEFB $17,$20,$90,$5F,$0E,$90,$A0,$5B ;
 $F80E DEFB $0A,$08,$A8,$5C                 ;
 $F812 DEFW $F7E9                           ;

; Routine at F814
;
; Used by the routine at #R$81AE.
c$F814 LD HL,($F812)   ;
 $F817 LD A,(IY+$0F)   ;
 $F81A CP (HL)         ;
 $F81B JR Z,$F823      ;
 $F81D LD DE,$0015     ;
 $F820 ADD HL,DE       ;
 $F821 CP (HL)         ;
 $F822 RET NZ          ;
*$F823 INC HL          ;
 $F824 LD E,(HL)       ;
 $F825 INC HL          ;
 $F826 LD D,(HL)       ;
 $F827 INC HL          ;
 $F828 LD A,(HL)       ;
 $F829 LD B,A          ;
 $F82A LD ($A838),DE   ;
 $F82E CALL $A83D      ;
 $F831 LD A,(IY+$05)   ;
 $F834 SUB E           ;
 $F835 SUB $04         ;
 $F837 CP $F8          ;
 $F839 RET C           ;
 $F83A LD A,(IY+$0A)   ;
 $F83D SUB D           ;
 $F83E ADD A,$0C       ;
 $F840 CP $F8          ;
 $F842 RET C           ;
 $F843 LD HL,($F812)   ;
 $F846 INC HL          ;
 $F847 INC HL          ;
 $F848 INC HL          ;
 $F849 INC HL          ;
 $F84A LD A,(HL)       ;
 $F84B CP $FF          ;
 $F84D JR NZ,$F852     ;
 $F84F LD HL,$F7E9     ;
*$F852 LD ($F812),HL   ;
 $F855 LD A,(IY+$19)   ;
 $F858 CP B            ;
 $F859 JR Z,$F864      ;
 $F85B LD A,(IY+$14)   ;
 $F85E ADD A,$20       ;
 $F860 CP $80          ;
 $F862 JR C,$F866      ;
*$F864 LD A,$80        ;
*$F866 LD (IY+$14),A   ;
 $F869 CALL $E36D      ;
 $F86C LD BC,$643C     ;
 $F86F LD DE,$0128     ;
 $F872 LD HL,$0103     ;
 $F875 CALL $E3D3      ;
 $F878 RET             ;
 $F879 XOR $42         ;
 $F87B CP $02          ;
 $F87D JR C,$F86D      ;
 $F87F XOR (HL)        ;
 $F880 CP $FE          ;
 $F882 JR C,$F886      ;
 $F884 LD B,D          ;
 $F885 LD (BC),A       ;
*$F886 LD (BC),A       ;
 $F887 JR C,$F88B      ;
 $F889 XOR (HL)        ;
 $F88A LD (BC),A       ;
*$F88B CP $38          ;
 $F88D LD A,B          ;
 $F88E LD B,D          ;
 $F88F NOP             ;
 $F890 LD (BC),A       ;
 $F891 JR C,$F90B      ;
 $F893 XOR (HL)        ;
 $F894 NOP             ;
 $F895 CP $38          ;
 $F897 RST $38         ;
 $F898 NOP             ;
 $F899 NOP             ;
 $F89A NOP             ;
 $F89B NOP             ;
 $F89C RST $38         ;
 $F89D NOP             ;
 $F89E NOP             ;
 $F89F NOP             ;
 $F8A0 NOP             ;
 $F8A1 RST $38         ;
 $F8A2 NOP             ;
 $F8A3 NOP             ;
 $F8A4 NOP             ;
 $F8A5 NOP             ;
 $F8A6 RST $38         ;
 $F8A7 NOP             ;
 $F8A8 NOP             ;
 $F8A9 NOP             ;
 $F8AA NOP             ;
 $F8AB RST $38         ;
 $F8AC NOP             ;
 $F8AD NOP             ;
 $F8AE NOP             ;
 $F8AF NOP             ;
 $F8B0 RST $38         ;
 $F8B1 NOP             ;
 $F8B2 NOP             ;
 $F8B3 NOP             ;
 $F8B4 NOP             ;
 $F8B5 NOP             ;
 $F8B6 RET P           ;
 $F8B7 LD B,B          ;
 $F8B8 OR B            ;
; This entry point is used by the routine at #R$ED2A.
*$F8B9 LD IX,$80A9     ;
 $F8BD LD A,$08        ;
 $F8BF LD ($F26E),A    ;
 $F8C2 LD B,$0C        ;
*$F8C4 PUSH BC         ;
 $F8C5 LD BC,$F8B5     ;
 $F8C8 LD A,(IX+$00)   ;
 $F8CB CP $FF          ;
 $F8CD JR NZ,$F8D6     ;
 $F8CF CALL $EF88      ;
 $F8D2 INC IX          ;
 $F8D4 JR $F936        ;
*$F8D6 CALL $EF35      ;
 $F8D9 LD A,(IX+$00)   ;
 $F8DC CALL $A8A0      ;
 $F8DF INC IX          ;
 $F8E1 LD A,(IY+$05)   ;
 $F8E4 SUB (IX-$05)    ;
 $F8E7 SUB $08         ;
 $F8E9 CP $F0          ;
 $F8EB JR C,$F8FA      ;
 $F8ED LD A,(IY+$0A)   ;
 $F8F0 SUB (IX-$04)    ;
 $F8F3 SUB $08         ;
 $F8F5 CP $F0          ;
 $F8F7 CALL NC,$E33F   ;
*$F8FA LD A,($F672)    ;
 $F8FD OR A            ;
 $F8FE JR Z,$F918      ;
 $F900 LD A,(IX-$05)   ;
 $F903 CP $F0          ;
 $F905 JR Z,$F90B      ;
 $F907 LD A,$EE        ;
 $F909 JR $F90D        ;
*$F90B LD A,$02        ;
*$F90D LD (IX-$05),A   ;
 $F910 LD A,(IX-$03)   ;
 $F913 NEG             ;
 $F915 LD (IX-$03),A   ;
*$F918 LD A,($F673)    ;
 $F91B OR A            ;
 $F91C JR Z,$F936      ;
 $F91E LD A,(IX-$04)   ;
 $F921 CP $40          ;
 $F923 JR NZ,$F929     ;
 $F925 LD A,$AE        ;
 $F927 JR $F92B        ;
*$F929 LD A,$42        ;
*$F92B LD (IX-$04),A   ;
 $F92E LD A,(IX-$02)   ;
 $F931 NEG             ;
 $F933 LD (IX-$02),A   ;
*$F936 POP BC          ;
 $F937 DJNZ $F8C4      ;
 $F939 RET             ;
; This entry point is used by the routine at #R$ED2A.
*$F93A CALL $B03C      ;
 $F93D OR A            ;
 $F93E JR Z,$F94E      ;
 $F940 DEC (IY+$00)    ;
 $F943 LD A,(IY+$00)   ;
 $F946 CP $6D          ;
 $F948 JR NZ,$F94E     ;
 $F94A LD (IY+$00),$75 ;
*$F94E CALL $B00B      ;
 $F951 OR A            ;
 $F952 JR Z,$F962      ;
 $F954 INC (IY+$00)    ;
 $F957 LD A,(IY+$00)   ;
 $F95A CP $76          ;
 $F95C JR NZ,$F962     ;
 $F95E LD (IY+$00),$6E ;
*$F962 CALL $ABD7      ;
 $F965 OR A            ;
 $F966 JR Z,$F994      ;
 $F968 CALL $F9A4      ;
 $F96B LD A,(IY+$05)   ;
 $F96E ADD A,(HL)      ;
 $F96F JR NZ,$F975     ;
 $F971 LD A,$EE        ;
 $F973 JR $F97B        ;
*$F975 CP $F0          ;
 $F977 JR NZ,$F97B     ;
 $F979 LD A,$02        ;
*$F97B LD (IY+$05),A   ;
 $F97E INC HL          ;
 $F97F LD A,(IY+$0A)   ;
 $F982 ADD A,(HL)      ;
 $F983 CP $40          ;
 $F985 JR NZ,$F98B     ;
 $F987 LD A,$AC        ;
 $F989 JR $F991        ;
*$F98B CP $AE          ;
 $F98D JR NZ,$F991     ;
 $F98F LD A,$42        ;
*$F991 LD (IY+$0A),A   ;
*$F994 LD L,(IY+$05)   ;
 $F997 LD H,(IY+$0A)   ;
 $F99A LD ($A838),HL   ;
 $F99D LD A,(IY+$00)   ;
 $F9A0 CALL $A83D      ;
 $F9A3 RET             ;
*$F9A4 LD A,(IY+$00)   ;
 $F9A7 SUB $6E         ;
 $F9A9 ADD A,A         ;
 $F9AA LD E,A          ;
 $F9AB LD D,$00        ;
 $F9AD LD HL,$F9B2     ;
 $F9B0 ADD HL,DE       ;
 $F9B1 RET             ;
 $F9B2 NOP             ;
 $F9B3 CP $02          ;
 $F9B5 CP $02          ;
 $F9B7 NOP             ;
 $F9B8 LD (BC),A       ;
 $F9B9 LD (BC),A       ;
 $F9BA NOP             ;
 $F9BB LD (BC),A       ;
 $F9BC CP $02          ;
 $F9BE CP $00          ;
 $F9C0 CP $FE          ;
 $F9C2 NOP             ;
 $F9C3 ADD A,B         ;
*$F9C4 PUSH AF         ;
 $F9C5 PUSH BC         ;
 $F9C6 PUSH HL         ;
 $F9C7 LD HL,($F9C2)   ;
 $F9CA LD B,$19        ;
*$F9CC PUSH BC         ;
 $F9CD LD B,(HL)       ;
 $F9CE INC HL          ;
 $F9CF LD A,$10        ;
 $F9D1 OUT ($FE),A     ;
 $F9D3 PUSH BC         ;
*$F9D4 DJNZ $F9D4      ;
 $F9D6 POP BC          ;
 $F9D7 LD B,(HL)       ;
 $F9D8 INC HL          ;
 $F9D9 LD A,$00        ;
 $F9DB OUT ($FE),A     ;
*$F9DD DJNZ $F9DD      ;
 $F9DF POP BC          ;
 $F9E0 DJNZ $F9CC      ;
 $F9E2 LD A,H          ;
 $F9E3 CP $9C          ;
 $F9E5 JR NZ,$F9E9     ;
 $F9E7 LD H,$80        ;
*$F9E9 LD ($F9C2),HL   ;
 $F9EC POP HL          ;
 $F9ED POP BC          ;
 $F9EE POP AF          ;
 $F9EF RET             ;
 $F9F0 DEFB $FF        ;
 $F9F1 DEFB $FF        ;
 $F9F2 DEFB $00        ;
 $F9F3 DEFB $00        ;
 $F9F4 DEFB $14        ;
; This entry point is used by the routine at #R$ED2A.
*$F9F5 LD IX,$F9F0     ;
 $F9F9 LD A,(IX+$00)   ;
 $F9FC CP $FF          ;
 $F9FE JR NZ,$FA2A     ;
 $FA00 CALL $B06D      ;
 $FA03 OR A            ;
 $FA04 RET Z           ;
 $FA05 LD A,(IY+$05)   ;
 $FA08 LD ($F9F0),A    ;
 $FA0B LD A,(IY+$0A)   ;
 $FA0E LD ($F9F1),A    ;
 $FA11 CALL $F9A4      ;
 $FA14 LD A,(HL)       ;
 $FA15 LD ($F9F2),A    ;
 $FA18 INC HL          ;
 $FA19 LD A,(HL)       ;
 $FA1A LD ($F9F3),A    ;
 $FA1D LD BC,$FF0A     ;
 $FA20 LD DE,$0114     ;
 $FA23 LD HL,$1401     ;
 $FA26 CALL $E3D3      ;
 $FA29 RET             ;
*$FA2A LD BC,$F8B5     ;
 $FA2D CALL $EF35      ;
 $FA30 LD A,$6D        ;
 $FA32 CALL $A83D      ;
 $FA35 LD A,($F672)    ;
 $FA38 LD B,A          ;
 $FA39 LD A,($F673)    ;
 $FA3C OR B            ;
 $FA3D JR Z,$FA44      ;
 $FA3F LD (IX-$04),$FF ;
 $FA43 RET             ;
*$FA44 LD B,$0C        ;
 $FA46 LD HL,$80A9     ;
*$FA49 LD A,(HL)       ;
 $FA4A CP $FF          ;
 $FA4C JR NZ,$FA56     ;
*$FA4E INC HL          ;
 $FA4F INC HL          ;
 $FA50 INC HL          ;
 $FA51 INC HL          ;
 $FA52 INC HL          ;
 $FA53 DJNZ $FA49      ;
 $FA55 RET             ;
*$FA56 LD E,A          ;
 $FA57 SUB (IX-$04)    ;
 $FA5A SUB $08         ;
 $FA5C CP $F0          ;
 $FA5E JR C,$FA4E      ;
 $FA60 INC HL          ;
 $FA61 LD A,(HL)       ;
 $FA62 LD D,A          ;
 $FA63 DEC HL          ;
 $FA64 SUB (IX-$03)    ;
 $FA67 SUB $08         ;
 $FA69 CP $F0          ;
 $FA6B JR C,$FA4E      ;
 $FA6D LD A,$FF        ;
 $FA6F LD (HL),A       ;
 $FA70 LD ($F9F0),A    ;
 $FA73 INC HL          ;
 $FA74 INC HL          ;
 $FA75 INC HL          ;
 $FA76 INC HL          ;
 $FA77 LD A,(HL)       ;
 $FA78 CP $6B          ;
 $FA7A JR Z,$FA86      ;
 $FA7C LD A,$6B        ;
 $FA7E CALL $FAF0      ;
 $FA81 CALL $FAF0      ;
 $FA84 JR $FAE3        ;
*$FA86 LD A,($FAEF)    ;
 $FA89 XOR $01         ;
 $FA8B LD ($FAEF),A    ;
 $FA8E JR NZ,$FAE3     ;
 $FA90 LD DE,$42EE     ;
 $FA93 LD A,R          ;
 $FA95 AND $01         ;
 $FA97 JR NZ,$FA9C     ;
 $FA99 LD DE,$AE02     ;
*$FA9C LD A,$38        ;
 $FA9E CALL $FAF0      ;
 $FAA1 LD HL,$F9F4     ;
 $FAA4 LD A,(HL)       ;
 $FAA5 OR A            ;
 $FAA6 JR Z,$FAE3      ;
 $FAA8 DEC (HL)        ;
 $FAA9 JR NZ,$FAE3     ;
 $FAAB LD A,$01        ;
 $FAAD LD ($EC1C),A    ;
 $FAB0 LD ($ECB3),A    ;
 $FAB3 LD A,(IY-$1E)   ;
 $FAB6 ADD A,$01       ;
 $FAB8 DAA             ;
 $FAB9 LD (IY-$1E),A   ;
 $FABC LD A,($ECFE)    ;
 $FABF ADD A,$01       ;
 $FAC1 DAA             ;
 $FAC2 LD ($ECFE),A    ;
 $FAC5 LD BC,$BE32     ;
 $FAC8 LD HL,$0000     ;
 $FACB LD DE,$0A0A     ;
 $FACE CALL $FAE7      ;
 $FAD1 LD BC,$9664     ;
 $FAD4 CALL $FAE7      ;
 $FAD7 LD BC,$A532     ;
 $FADA CALL $FAE7      ;
 $FADD LD BC,$7D78     ;
 $FAE0 CALL $FAE7      ;
*$FAE3 CALL $F9C4      ;
 $FAE6 RET             ;
*$FAE7 PUSH HL         ;
 $FAE8 PUSH DE         ;
 $FAE9 CALL $E3D3      ;
 $FAEC POP DE          ;
 $FAED POP HL          ;
 $FAEE RET             ;

; Data block at FAEF
b$FAEF DEFB $00,$DD,$E5,$DD,$21,$A9,$80,$F5
 $FAF7 DEFB $DD,$7E,$00,$FE,$FF,$28,$07,$CD
 $FAFF DEFB $88
 $FB00 DEFB $EF,$DD,$23,$18,$F2,$DD,$73,$00
 $FB08 DEFB $DD,$72,$01,$ED,$5F,$E6,$02,$3D
 $FB10 DEFB $87,$DD,$77,$02,$ED,$5F,$E6,$02
 $FB18 DEFB $1F,$4F,$ED,$5F,$E6,$01,$91,$87
 $FB20 DEFB $DD,$77,$03,$F1,$DD,$77,$04,$DD
 $FB28 DEFB $E1,$C9,$00,$00,$00,$00,$00,$00
 $FB30 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FB38 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FB40 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FB48 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FB50 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FB58 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FB60 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FB68 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FB70 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FB78 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FB80 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FB88 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FB90 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FB98 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FBA0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FBA8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FBB0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FBB8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FBC0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FBC8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FBD0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FBD8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FBE0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FBE8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FBF0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FBF8 DEFB $00,$00,$00,$00,$00,$00,$00,$00

; Attribute Shadow Buffer
@label=ShadowBuffer_Attribute
b$FC00 DEFS $0200

; Data block at FE00
b$FE00 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FE08 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FE10 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FE18 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FE20 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FE28 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FE30 DEFB $F3,$31,$00,$00,$2A,$4B,$5C,$11
 $FE38 DEFB $1C,$00,$19,$11,$46,$FE,$01,$C6
 $FE40 DEFB $00,$ED,$B0,$C3,$46,$FE,$DD,$21
 $FE48 DEFB $00,$40,$11,$25,$BF,$3E,$16,$32
 $FE50 DEFB $AA,$FE,$3E,$FF,$37,$14,$08,$15
 $FE58 DEFB $3E,$0F,$D3,$FE,$DB,$FE,$1F,$E6
 $FE60 DEFB $20,$F6,$02,$4F,$BF,$CD,$A9,$FE
 $FE68 DEFB $30,$FB,$21,$15,$04,$10,$FE,$2B
 $FE70 DEFB $7C,$B5,$20,$F9,$CD,$A5,$FE,$30
 $FE78 DEFB $EC,$06,$9C,$CD,$A5,$FE,$30,$E5
 $FE80 DEFB $3E,$C6,$B8,$30,$E0,$24,$20,$F1
 $FE88 DEFB $06,$C9,$CD,$A9,$FE,$30,$D6,$78
 $FE90 DEFB $FE,$D4,$30,$F4,$CD,$A9,$FE,$D2
 $FE98 DEFB $00,$00,$3E,$08,$32,$AA,$FE,$26
 $FEA0 DEFB $00,$06,$B0,$18,$39,$CD,$A9,$FE
 $FEA8 DEFB $D0,$3E,$08,$3D,$20,$FD,$A7,$04
 $FEB0 DEFB $C8,$3E,$7F,$DB,$FE,$1F,$A9,$E6
 $FEB8 DEFB $20,$28,$F4,$79,$EE,$FD,$4F,$E6
 $FEC0 DEFB $07,$F6,$08,$D3,$FE,$37,$C9,$08
 $FEC8 DEFB $20,$05,$DD,$75,$00,$18,$09,$CB
 $FED0 DEFB $11,$AD,$79,$1F,$4F,$13,$18,$02
 $FED8 DEFB $DD,$23,$1B,$08,$06,$B2,$2E,$01
 $FEE0 DEFB $CD,$A5,$FE,$D2,$00,$00,$3E,$C6
 $FEE8 DEFB $B8,$CB,$15,$06,$B0,$D2,$E0,$FE
 $FEF0 DEFB $7C,$AD,$67,$7A,$B3,$20,$D0

; Game Entry Point
@label=Checksum
c$FEF7 LD HL,$4000   ; #REGhl=#N$4000.
 $FEFA LD BC,$BF24   ; #REGbc=#N$BF24.
 $FEFD LD A,$00      ; #REGa=#N$00.
@label=Checksum_Loop
*$FEFF ADD A,(HL)    ; {#REGe=#REGa+*#REGhl.
 $FF00 LD E,A        ; }
 $FF01 INC HL        ; Increment #REGhl by one.
 $FF02 DEC BC        ; Decrease #REGbc by one.
 $FF03 LD A,B        ; {Is #REGbc zero?..
 $FF04 OR C          ; }
 $FF05 LD A,E        ; #REGa=#REGe.
 $FF06 JR NZ,$FEFF   ; If #REGbc is not zero, jump to #R$FEFF.
 $FF08 CP (HL)       ; {If *#REGhl is not zero, jump to #N$0000 (return to ZX
 $FF09 JP NZ,$0000   ; Spectrum BASIC).}
 $FF0C LD DE,$5B80   ; #REGde=#R$5B80.
 $FF0F LD HL,$53FE   ; #REGhl=#N$53FE.
@label=Decryption_Loop
*$FF12 LD A,(DE)     ; #REGa=*#REGde.
 $FF13 XOR (HL)      ; Run an XOR on *#REGhl.
 $FF14 RES 4,H       ; Reset bit 4 of #REGh.
 $FF16 XOR (HL)      ; Run another XOR on *#REGhl.
 $FF17 SET 4,H       ; Set bit 4 of #REGh.
 $FF19 LD (DE),A     ; Write #REGa to *#REGde.
 $FF1A DEC HL        ; Decrease #REGhl by one.
 $FF1B INC DE        ; Increment #REGde by one.
 $FF1C LD A,E        ; {If #REGe is not #N$9A, jump to #R$FF12.
 $FF1D CP $9A        ;
 $FF1F JR NZ,$FF12   ; }
 $FF21 JP $5B94      ; Jump to #R$5B94.

; Data block at FF24
b$FF24 DEFB $01,$0A,$CE,$0B,$E7,$50,$1A,$17
 $FF2C DEFB $B1,$33,$A2,$5E,$00,$5D,$00,$00
 $FF34 DEFB $A2,$5E,$B1,$33,$B7,$2D,$9D,$5E
 $FF3C DEFB $98,$5E,$A8,$5D,$2B,$2D,$65,$33
 $FF44 DEFB $00,$00,$ED,$10,$0D,$00,$09,$00
 $FF4C DEFB $85,$1C,$10,$1C,$52,$1B,$76,$1B
 $FF54 DEFB $03,$13,$00,$3E,$00,$3C,$42,$42
 $FF5C DEFB $7E,$42,$42,$00,$00,$7C,$42,$7C
 $FF64 DEFB $42,$42,$7C,$00,$00,$3C,$42,$40
 $FF6C DEFB $40,$42,$3C,$00,$00,$78,$44,$42
 $FF74 DEFB $42,$44,$78,$00,$00,$7E,$40,$7C
 $FF7C DEFB $40,$40,$7E,$00,$00,$7E,$40,$7C
 $FF84 DEFB $40,$40,$40,$00,$00,$3C,$42,$40
 $FF8C DEFB $4E,$42,$3C,$00,$00,$42,$42,$7E
 $FF94 DEFB $42,$42,$42,$00,$00,$3E,$08,$08
 $FF9C DEFB $08,$08,$3E,$00,$00,$02,$02,$02
 $FFA4 DEFB $42,$42,$3C,$00,$00,$44,$48,$70
 $FFAC DEFB $48,$44,$42,$00,$00,$40,$40,$40
 $FFB4 DEFB $40,$40,$7E,$00,$00,$42,$66,$5A
 $FFBC DEFB $42,$42,$42,$00,$00,$42,$62,$52
 $FFC4 DEFB $4A,$46,$42,$00,$00,$3C,$42,$42
 $FFCC DEFB $42,$42,$3C,$00,$00,$7C,$42,$42
 $FFD4 DEFB $7C,$40,$40,$00,$00,$3C,$42,$42
 $FFDC DEFB $52,$4A,$3C,$00,$00,$7C,$42,$42
 $FFE4 DEFB $7C,$44,$42,$00,$00,$3C,$40,$3C
 $FFEC DEFB $02,$42,$3C,$00,$00,$FE,$10,$10
 $FFF4 DEFB $10,$10,$10,$00,$00,$42,$42,$42
 $FFFC DEFB $A8,$FE,$97,$5B
